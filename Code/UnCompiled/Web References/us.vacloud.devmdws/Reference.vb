'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18408
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
'
Namespace us.vacloud.devmdws
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="EmrSvcSoap", [Namespace]:="http://mdws.medora.va.gov/EmrSvc"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AbstractTO))>  _
    Partial Public Class EmrSvc
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getImagingReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private writeSimpleOrderByPolicyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private isValidEsigOperationCompleted As System.Threading.SendOrPostCallback
        
        Private patientInquiryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getWardsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPatientsByWardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getClinicsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPatientsByClinicOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSpecialtiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPatientsBySpecialtyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTeamsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPatientsByTeamOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPatientsByProviderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAdmissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLocationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPrfNoteActionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getVisitsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private isConsultNoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private isCosignerRequiredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private isOneVisitNoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private isPrfNoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private isSurgeryNoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private writeNoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private signNoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private closeNoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDemographicsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mpiLookupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private nptLookupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllOrdersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getReminderReportTemplatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getActiveReminderReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPatientListForReminderReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPcpForPatientOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSitesForStationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getClinicsByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getOrderableItemsByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getOrderStatusForPatientOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getOrderDialogsForDisplayGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getOrderDialogItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUsersWithOptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private userHasPermissionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUserSecurityKeysOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getVariableValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMentalHealthInstrumentsForPatientOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMentalHealthInstrumentsForPatientBySurveyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMentalHealthInstrumentResultSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMentalHealthInstrumentResultSetBySurveyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getNhinDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllInstitutionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getVistaTimestampsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPatientCareTeamOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getActiveDirectoryDomainsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private loginActiveDirectoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ldapUserLookupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLabTestDescriptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLabTestsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPatientAssociatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAdhocHealthSummaryByDisplayNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EXPERIMENTALgetHealthSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCorrespondingIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getVHAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getVISNOperationCompleted As System.Threading.SendOrPostCallback
        
        Private connectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private loginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private disconnectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private disconnectRemoteSitesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private visitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private cprsLaunchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private cprsUserLookupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private matchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private selectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private setupMultiSiteQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getConfidentialityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private issueConfidentialityBulletinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLatestVitalSignsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getVitalSignsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllergiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllergiesBySiteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getRadiologyReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getRadiologyReportsBySiteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSurgeryReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSurgeryReportsBySiteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSurgeryReportTextOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSurgeryReportsWithTextOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProblemListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getOutpatientMedsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getIvMedsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getImoMedsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUnitDoseMedsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getOtherMedsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllMedsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMedicationDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSignedNotesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUnsignedNotesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUncosignedNotesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getNoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getNotesWithTextOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDischargeSummariesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getConsultsForPatientOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAppointmentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMentalHealthAppointmentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMentalHealthVisitsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAppointmentTextOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getClinicalWarningsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAdvanceDirectivesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCrisisNotesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getImmunizationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getOutpatientRxProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMedsAdminHxOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMedsAdminLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getChemHemReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getChemHemReportsSimpleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCytologyReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMicrobiologyReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSurgicalPathologyReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBloodAvailabilityReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBloodTransfusionReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBloodBankReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getElectronMicroscopyReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCytopathologyReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAutopsyReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getOutpatientEncounterReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAdmissionsReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getExpandedAdtReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDischargeDiagnosisReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDischargesReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTransfersReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getFutureClinicVisitsReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPastClinicVisitsReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTreatingSpecialtyReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCompAndPenReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCareTeamReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getIcdProceduresReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getIcdSurgeryReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getNoteTitlesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getHospitalLocationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private addDataSourceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getFacadeVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private setVhaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getRpcsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.VANS.My.MySettings.Default.VANS_us_vacloud_devmdws_EmrSvc
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getImagingReportCompleted As getImagingReportCompletedEventHandler
        
        '''<remarks/>
        Public Event writeSimpleOrderByPolicyCompleted As writeSimpleOrderByPolicyCompletedEventHandler
        
        '''<remarks/>
        Public Event isValidEsigCompleted As isValidEsigCompletedEventHandler
        
        '''<remarks/>
        Public Event patientInquiryCompleted As patientInquiryCompletedEventHandler
        
        '''<remarks/>
        Public Event getWardsCompleted As getWardsCompletedEventHandler
        
        '''<remarks/>
        Public Event getPatientsByWardCompleted As getPatientsByWardCompletedEventHandler
        
        '''<remarks/>
        Public Event getClinicsCompleted As getClinicsCompletedEventHandler
        
        '''<remarks/>
        Public Event getPatientsByClinicCompleted As getPatientsByClinicCompletedEventHandler
        
        '''<remarks/>
        Public Event getSpecialtiesCompleted As getSpecialtiesCompletedEventHandler
        
        '''<remarks/>
        Public Event getPatientsBySpecialtyCompleted As getPatientsBySpecialtyCompletedEventHandler
        
        '''<remarks/>
        Public Event getTeamsCompleted As getTeamsCompletedEventHandler
        
        '''<remarks/>
        Public Event getPatientsByTeamCompleted As getPatientsByTeamCompletedEventHandler
        
        '''<remarks/>
        Public Event getPatientsByProviderCompleted As getPatientsByProviderCompletedEventHandler
        
        '''<remarks/>
        Public Event getAdmissionsCompleted As getAdmissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event getLocationsCompleted As getLocationsCompletedEventHandler
        
        '''<remarks/>
        Public Event getPrfNoteActionsCompleted As getPrfNoteActionsCompletedEventHandler
        
        '''<remarks/>
        Public Event getVisitsCompleted As getVisitsCompletedEventHandler
        
        '''<remarks/>
        Public Event isConsultNoteCompleted As isConsultNoteCompletedEventHandler
        
        '''<remarks/>
        Public Event isCosignerRequiredCompleted As isCosignerRequiredCompletedEventHandler
        
        '''<remarks/>
        Public Event isOneVisitNoteCompleted As isOneVisitNoteCompletedEventHandler
        
        '''<remarks/>
        Public Event isPrfNoteCompleted As isPrfNoteCompletedEventHandler
        
        '''<remarks/>
        Public Event isSurgeryNoteCompleted As isSurgeryNoteCompletedEventHandler
        
        '''<remarks/>
        Public Event writeNoteCompleted As writeNoteCompletedEventHandler
        
        '''<remarks/>
        Public Event signNoteCompleted As signNoteCompletedEventHandler
        
        '''<remarks/>
        Public Event closeNoteCompleted As closeNoteCompletedEventHandler
        
        '''<remarks/>
        Public Event getDemographicsCompleted As getDemographicsCompletedEventHandler
        
        '''<remarks/>
        Public Event mpiLookupCompleted As mpiLookupCompletedEventHandler
        
        '''<remarks/>
        Public Event nptLookupCompleted As nptLookupCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllOrdersCompleted As getAllOrdersCompletedEventHandler
        
        '''<remarks/>
        Public Event getReminderReportTemplatesCompleted As getReminderReportTemplatesCompletedEventHandler
        
        '''<remarks/>
        Public Event getActiveReminderReportsCompleted As getActiveReminderReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getPatientListForReminderReportCompleted As getPatientListForReminderReportCompletedEventHandler
        
        '''<remarks/>
        Public Event getPcpForPatientCompleted As getPcpForPatientCompletedEventHandler
        
        '''<remarks/>
        Public Event getSitesForStationCompleted As getSitesForStationCompletedEventHandler
        
        '''<remarks/>
        Public Event getClinicsByNameCompleted As getClinicsByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event getOrderableItemsByNameCompleted As getOrderableItemsByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event getOrderStatusForPatientCompleted As getOrderStatusForPatientCompletedEventHandler
        
        '''<remarks/>
        Public Event getOrderDialogsForDisplayGroupCompleted As getOrderDialogsForDisplayGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event getOrderDialogItemsCompleted As getOrderDialogItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event getUsersWithOptionCompleted As getUsersWithOptionCompletedEventHandler
        
        '''<remarks/>
        Public Event userHasPermissionCompleted As userHasPermissionCompletedEventHandler
        
        '''<remarks/>
        Public Event getUserSecurityKeysCompleted As getUserSecurityKeysCompletedEventHandler
        
        '''<remarks/>
        Public Event getVariableValueCompleted As getVariableValueCompletedEventHandler
        
        '''<remarks/>
        Public Event getMentalHealthInstrumentsForPatientCompleted As getMentalHealthInstrumentsForPatientCompletedEventHandler
        
        '''<remarks/>
        Public Event getMentalHealthInstrumentsForPatientBySurveyCompleted As getMentalHealthInstrumentsForPatientBySurveyCompletedEventHandler
        
        '''<remarks/>
        Public Event getMentalHealthInstrumentResultSetCompleted As getMentalHealthInstrumentResultSetCompletedEventHandler
        
        '''<remarks/>
        Public Event getMentalHealthInstrumentResultSetBySurveyCompleted As getMentalHealthInstrumentResultSetBySurveyCompletedEventHandler
        
        '''<remarks/>
        Public Event getNhinDataCompleted As getNhinDataCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllInstitutionsCompleted As getAllInstitutionsCompletedEventHandler
        
        '''<remarks/>
        Public Event getVistaTimestampsCompleted As getVistaTimestampsCompletedEventHandler
        
        '''<remarks/>
        Public Event getPatientCareTeamCompleted As getPatientCareTeamCompletedEventHandler
        
        '''<remarks/>
        Public Event getActiveDirectoryDomainsCompleted As getActiveDirectoryDomainsCompletedEventHandler
        
        '''<remarks/>
        Public Event loginActiveDirectoryCompleted As loginActiveDirectoryCompletedEventHandler
        
        '''<remarks/>
        Public Event ldapUserLookupCompleted As ldapUserLookupCompletedEventHandler
        
        '''<remarks/>
        Public Event getLabTestDescriptionCompleted As getLabTestDescriptionCompletedEventHandler
        
        '''<remarks/>
        Public Event getLabTestsCompleted As getLabTestsCompletedEventHandler
        
        '''<remarks/>
        Public Event getPatientAssociatesCompleted As getPatientAssociatesCompletedEventHandler
        
        '''<remarks/>
        Public Event getAdhocHealthSummaryByDisplayNameCompleted As getAdhocHealthSummaryByDisplayNameCompletedEventHandler
        
        '''<remarks/>
        Public Event EXPERIMENTALgetHealthSummaryCompleted As EXPERIMENTALgetHealthSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event getCorrespondingIdsCompleted As getCorrespondingIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event getVHACompleted As getVHACompletedEventHandler
        
        '''<remarks/>
        Public Event getVISNCompleted As getVISNCompletedEventHandler
        
        '''<remarks/>
        Public Event connectCompleted As connectCompletedEventHandler
        
        '''<remarks/>
        Public Event loginCompleted As loginCompletedEventHandler
        
        '''<remarks/>
        Public Event disconnectCompleted As disconnectCompletedEventHandler
        
        '''<remarks/>
        Public Event disconnectRemoteSitesCompleted As disconnectRemoteSitesCompletedEventHandler
        
        '''<remarks/>
        Public Event visitCompleted As visitCompletedEventHandler
        
        '''<remarks/>
        Public Event cprsLaunchCompleted As cprsLaunchCompletedEventHandler
        
        '''<remarks/>
        Public Event cprsUserLookupCompleted As cprsUserLookupCompletedEventHandler
        
        '''<remarks/>
        Public Event matchCompleted As matchCompletedEventHandler
        
        '''<remarks/>
        Public Event selectCompleted As selectCompletedEventHandler
        
        '''<remarks/>
        Public Event setupMultiSiteQueryCompleted As setupMultiSiteQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event getConfidentialityCompleted As getConfidentialityCompletedEventHandler
        
        '''<remarks/>
        Public Event issueConfidentialityBulletinCompleted As issueConfidentialityBulletinCompletedEventHandler
        
        '''<remarks/>
        Public Event getLatestVitalSignsCompleted As getLatestVitalSignsCompletedEventHandler
        
        '''<remarks/>
        Public Event getVitalSignsCompleted As getVitalSignsCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllergiesCompleted As getAllergiesCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllergiesBySiteCompleted As getAllergiesBySiteCompletedEventHandler
        
        '''<remarks/>
        Public Event getRadiologyReportsCompleted As getRadiologyReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getRadiologyReportsBySiteCompleted As getRadiologyReportsBySiteCompletedEventHandler
        
        '''<remarks/>
        Public Event getSurgeryReportsCompleted As getSurgeryReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getSurgeryReportsBySiteCompleted As getSurgeryReportsBySiteCompletedEventHandler
        
        '''<remarks/>
        Public Event getSurgeryReportTextCompleted As getSurgeryReportTextCompletedEventHandler
        
        '''<remarks/>
        Public Event getSurgeryReportsWithTextCompleted As getSurgeryReportsWithTextCompletedEventHandler
        
        '''<remarks/>
        Public Event getProblemListCompleted As getProblemListCompletedEventHandler
        
        '''<remarks/>
        Public Event getOutpatientMedsCompleted As getOutpatientMedsCompletedEventHandler
        
        '''<remarks/>
        Public Event getIvMedsCompleted As getIvMedsCompletedEventHandler
        
        '''<remarks/>
        Public Event getImoMedsCompleted As getImoMedsCompletedEventHandler
        
        '''<remarks/>
        Public Event getUnitDoseMedsCompleted As getUnitDoseMedsCompletedEventHandler
        
        '''<remarks/>
        Public Event getOtherMedsCompleted As getOtherMedsCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllMedsCompleted As getAllMedsCompletedEventHandler
        
        '''<remarks/>
        Public Event getMedicationDetailCompleted As getMedicationDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event getSignedNotesCompleted As getSignedNotesCompletedEventHandler
        
        '''<remarks/>
        Public Event getUnsignedNotesCompleted As getUnsignedNotesCompletedEventHandler
        
        '''<remarks/>
        Public Event getUncosignedNotesCompleted As getUncosignedNotesCompletedEventHandler
        
        '''<remarks/>
        Public Event getNoteCompleted As getNoteCompletedEventHandler
        
        '''<remarks/>
        Public Event getNotesWithTextCompleted As getNotesWithTextCompletedEventHandler
        
        '''<remarks/>
        Public Event getDischargeSummariesCompleted As getDischargeSummariesCompletedEventHandler
        
        '''<remarks/>
        Public Event getConsultsForPatientCompleted As getConsultsForPatientCompletedEventHandler
        
        '''<remarks/>
        Public Event getAppointmentsCompleted As getAppointmentsCompletedEventHandler
        
        '''<remarks/>
        Public Event getMentalHealthAppointmentsCompleted As getMentalHealthAppointmentsCompletedEventHandler
        
        '''<remarks/>
        Public Event getMentalHealthVisitsCompleted As getMentalHealthVisitsCompletedEventHandler
        
        '''<remarks/>
        Public Event getAppointmentTextCompleted As getAppointmentTextCompletedEventHandler
        
        '''<remarks/>
        Public Event getClinicalWarningsCompleted As getClinicalWarningsCompletedEventHandler
        
        '''<remarks/>
        Public Event getAdvanceDirectivesCompleted As getAdvanceDirectivesCompletedEventHandler
        
        '''<remarks/>
        Public Event getCrisisNotesCompleted As getCrisisNotesCompletedEventHandler
        
        '''<remarks/>
        Public Event getImmunizationsCompleted As getImmunizationsCompletedEventHandler
        
        '''<remarks/>
        Public Event getOutpatientRxProfileCompleted As getOutpatientRxProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event getMedsAdminHxCompleted As getMedsAdminHxCompletedEventHandler
        
        '''<remarks/>
        Public Event getMedsAdminLogCompleted As getMedsAdminLogCompletedEventHandler
        
        '''<remarks/>
        Public Event getChemHemReportsCompleted As getChemHemReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getChemHemReportsSimpleCompleted As getChemHemReportsSimpleCompletedEventHandler
        
        '''<remarks/>
        Public Event getCytologyReportsCompleted As getCytologyReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getMicrobiologyReportsCompleted As getMicrobiologyReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getSurgicalPathologyReportsCompleted As getSurgicalPathologyReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getBloodAvailabilityReportsCompleted As getBloodAvailabilityReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getBloodTransfusionReportsCompleted As getBloodTransfusionReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getBloodBankReportsCompleted As getBloodBankReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getElectronMicroscopyReportsCompleted As getElectronMicroscopyReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getCytopathologyReportsCompleted As getCytopathologyReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getAutopsyReportsCompleted As getAutopsyReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getOutpatientEncounterReportsCompleted As getOutpatientEncounterReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getAdmissionsReportsCompleted As getAdmissionsReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getExpandedAdtReportsCompleted As getExpandedAdtReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDischargeDiagnosisReportsCompleted As getDischargeDiagnosisReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDischargesReportsCompleted As getDischargesReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getTransfersReportsCompleted As getTransfersReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getFutureClinicVisitsReportsCompleted As getFutureClinicVisitsReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getPastClinicVisitsReportsCompleted As getPastClinicVisitsReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getTreatingSpecialtyReportsCompleted As getTreatingSpecialtyReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getCompAndPenReportsCompleted As getCompAndPenReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getCareTeamReportsCompleted As getCareTeamReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getIcdProceduresReportsCompleted As getIcdProceduresReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getIcdSurgeryReportsCompleted As getIcdSurgeryReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event getNoteTitlesCompleted As getNoteTitlesCompletedEventHandler
        
        '''<remarks/>
        Public Event getHospitalLocationsCompleted As getHospitalLocationsCompletedEventHandler
        
        '''<remarks/>
        Public Event getVersionCompleted As getVersionCompletedEventHandler
        
        '''<remarks/>
        Public Event addDataSourceCompleted As addDataSourceCompletedEventHandler
        
        '''<remarks/>
        Public Event getFacadeVersionCompleted As getFacadeVersionCompletedEventHandler
        
        '''<remarks/>
        Public Event setVhaCompleted As setVhaCompletedEventHandler
        
        '''<remarks/>
        Public Event getRpcsCompleted As getRpcsCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getImagingReport", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getImagingReport(ByVal SSN As String, ByVal accessionNumber As String) As RadiologyReportTO
            Dim results() As Object = Me.Invoke("getImagingReport", New Object() {SSN, accessionNumber})
            Return CType(results(0),RadiologyReportTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getImagingReportAsync(ByVal SSN As String, ByVal accessionNumber As String)
            Me.getImagingReportAsync(SSN, accessionNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getImagingReportAsync(ByVal SSN As String, ByVal accessionNumber As String, ByVal userState As Object)
            If (Me.getImagingReportOperationCompleted Is Nothing) Then
                Me.getImagingReportOperationCompleted = AddressOf Me.OngetImagingReportOperationCompleted
            End If
            Me.InvokeAsync("getImagingReport", New Object() {SSN, accessionNumber}, Me.getImagingReportOperationCompleted, userState)
        End Sub
        
        Private Sub OngetImagingReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.getImagingReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getImagingReportCompleted(Me, New getImagingReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/writeSimpleOrderByPolicy", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function writeSimpleOrderByPolicy(ByVal providerDUZ As String, ByVal esig As String, ByVal locationIEN As String, ByVal orderIEN As String, ByVal startDate As String) As OrderTO
            Dim results() As Object = Me.Invoke("writeSimpleOrderByPolicy", New Object() {providerDUZ, esig, locationIEN, orderIEN, startDate})
            Return CType(results(0),OrderTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub writeSimpleOrderByPolicyAsync(ByVal providerDUZ As String, ByVal esig As String, ByVal locationIEN As String, ByVal orderIEN As String, ByVal startDate As String)
            Me.writeSimpleOrderByPolicyAsync(providerDUZ, esig, locationIEN, orderIEN, startDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub writeSimpleOrderByPolicyAsync(ByVal providerDUZ As String, ByVal esig As String, ByVal locationIEN As String, ByVal orderIEN As String, ByVal startDate As String, ByVal userState As Object)
            If (Me.writeSimpleOrderByPolicyOperationCompleted Is Nothing) Then
                Me.writeSimpleOrderByPolicyOperationCompleted = AddressOf Me.OnwriteSimpleOrderByPolicyOperationCompleted
            End If
            Me.InvokeAsync("writeSimpleOrderByPolicy", New Object() {providerDUZ, esig, locationIEN, orderIEN, startDate}, Me.writeSimpleOrderByPolicyOperationCompleted, userState)
        End Sub
        
        Private Sub OnwriteSimpleOrderByPolicyOperationCompleted(ByVal arg As Object)
            If (Not (Me.writeSimpleOrderByPolicyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent writeSimpleOrderByPolicyCompleted(Me, New writeSimpleOrderByPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isValidEsig", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function isValidEsig(ByVal esig As String) As TextTO
            Dim results() As Object = Me.Invoke("isValidEsig", New Object() {esig})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub isValidEsigAsync(ByVal esig As String)
            Me.isValidEsigAsync(esig, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub isValidEsigAsync(ByVal esig As String, ByVal userState As Object)
            If (Me.isValidEsigOperationCompleted Is Nothing) Then
                Me.isValidEsigOperationCompleted = AddressOf Me.OnisValidEsigOperationCompleted
            End If
            Me.InvokeAsync("isValidEsig", New Object() {esig}, Me.isValidEsigOperationCompleted, userState)
        End Sub
        
        Private Sub OnisValidEsigOperationCompleted(ByVal arg As Object)
            If (Not (Me.isValidEsigCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent isValidEsigCompleted(Me, New isValidEsigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/patientInquiry", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function patientInquiry() As TextTO
            Dim results() As Object = Me.Invoke("patientInquiry", New Object(-1) {})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub patientInquiryAsync()
            Me.patientInquiryAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub patientInquiryAsync(ByVal userState As Object)
            If (Me.patientInquiryOperationCompleted Is Nothing) Then
                Me.patientInquiryOperationCompleted = AddressOf Me.OnpatientInquiryOperationCompleted
            End If
            Me.InvokeAsync("patientInquiry", New Object(-1) {}, Me.patientInquiryOperationCompleted, userState)
        End Sub
        
        Private Sub OnpatientInquiryOperationCompleted(ByVal arg As Object)
            If (Not (Me.patientInquiryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent patientInquiryCompleted(Me, New patientInquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getWards", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getWards() As TaggedHospitalLocationArray
            Dim results() As Object = Me.Invoke("getWards", New Object(-1) {})
            Return CType(results(0),TaggedHospitalLocationArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getWardsAsync()
            Me.getWardsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getWardsAsync(ByVal userState As Object)
            If (Me.getWardsOperationCompleted Is Nothing) Then
                Me.getWardsOperationCompleted = AddressOf Me.OngetWardsOperationCompleted
            End If
            Me.InvokeAsync("getWards", New Object(-1) {}, Me.getWardsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetWardsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getWardsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getWardsCompleted(Me, New getWardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientsByWard", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPatientsByWard(ByVal wardId As String) As TaggedPatientArray
            Dim results() As Object = Me.Invoke("getPatientsByWard", New Object() {wardId})
            Return CType(results(0),TaggedPatientArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPatientsByWardAsync(ByVal wardId As String)
            Me.getPatientsByWardAsync(wardId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPatientsByWardAsync(ByVal wardId As String, ByVal userState As Object)
            If (Me.getPatientsByWardOperationCompleted Is Nothing) Then
                Me.getPatientsByWardOperationCompleted = AddressOf Me.OngetPatientsByWardOperationCompleted
            End If
            Me.InvokeAsync("getPatientsByWard", New Object() {wardId}, Me.getPatientsByWardOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPatientsByWardOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPatientsByWardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPatientsByWardCompleted(Me, New getPatientsByWardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getClinics", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getClinics(ByVal target As String) As TaggedHospitalLocationArray
            Dim results() As Object = Me.Invoke("getClinics", New Object() {target})
            Return CType(results(0),TaggedHospitalLocationArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getClinicsAsync(ByVal target As String)
            Me.getClinicsAsync(target, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getClinicsAsync(ByVal target As String, ByVal userState As Object)
            If (Me.getClinicsOperationCompleted Is Nothing) Then
                Me.getClinicsOperationCompleted = AddressOf Me.OngetClinicsOperationCompleted
            End If
            Me.InvokeAsync("getClinics", New Object() {target}, Me.getClinicsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetClinicsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getClinicsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getClinicsCompleted(Me, New getClinicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientsByClinic", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPatientsByClinic(ByVal clinicId As String) As TaggedPatientArray
            Dim results() As Object = Me.Invoke("getPatientsByClinic", New Object() {clinicId})
            Return CType(results(0),TaggedPatientArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPatientsByClinicAsync(ByVal clinicId As String)
            Me.getPatientsByClinicAsync(clinicId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPatientsByClinicAsync(ByVal clinicId As String, ByVal userState As Object)
            If (Me.getPatientsByClinicOperationCompleted Is Nothing) Then
                Me.getPatientsByClinicOperationCompleted = AddressOf Me.OngetPatientsByClinicOperationCompleted
            End If
            Me.InvokeAsync("getPatientsByClinic", New Object() {clinicId}, Me.getPatientsByClinicOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPatientsByClinicOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPatientsByClinicCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPatientsByClinicCompleted(Me, New getPatientsByClinicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSpecialties", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSpecialties() As TaggedText
            Dim results() As Object = Me.Invoke("getSpecialties", New Object(-1) {})
            Return CType(results(0),TaggedText)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSpecialtiesAsync()
            Me.getSpecialtiesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSpecialtiesAsync(ByVal userState As Object)
            If (Me.getSpecialtiesOperationCompleted Is Nothing) Then
                Me.getSpecialtiesOperationCompleted = AddressOf Me.OngetSpecialtiesOperationCompleted
            End If
            Me.InvokeAsync("getSpecialties", New Object(-1) {}, Me.getSpecialtiesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSpecialtiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSpecialtiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSpecialtiesCompleted(Me, New getSpecialtiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientsBySpecialty", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPatientsBySpecialty(ByVal specialtyId As String) As TaggedPatientArray
            Dim results() As Object = Me.Invoke("getPatientsBySpecialty", New Object() {specialtyId})
            Return CType(results(0),TaggedPatientArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPatientsBySpecialtyAsync(ByVal specialtyId As String)
            Me.getPatientsBySpecialtyAsync(specialtyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPatientsBySpecialtyAsync(ByVal specialtyId As String, ByVal userState As Object)
            If (Me.getPatientsBySpecialtyOperationCompleted Is Nothing) Then
                Me.getPatientsBySpecialtyOperationCompleted = AddressOf Me.OngetPatientsBySpecialtyOperationCompleted
            End If
            Me.InvokeAsync("getPatientsBySpecialty", New Object() {specialtyId}, Me.getPatientsBySpecialtyOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPatientsBySpecialtyOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPatientsBySpecialtyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPatientsBySpecialtyCompleted(Me, New getPatientsBySpecialtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getTeams", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getTeams() As TaggedText
            Dim results() As Object = Me.Invoke("getTeams", New Object(-1) {})
            Return CType(results(0),TaggedText)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTeamsAsync()
            Me.getTeamsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTeamsAsync(ByVal userState As Object)
            If (Me.getTeamsOperationCompleted Is Nothing) Then
                Me.getTeamsOperationCompleted = AddressOf Me.OngetTeamsOperationCompleted
            End If
            Me.InvokeAsync("getTeams", New Object(-1) {}, Me.getTeamsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTeamsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTeamsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTeamsCompleted(Me, New getTeamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientsByTeam", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPatientsByTeam(ByVal teamId As String) As TaggedPatientArray
            Dim results() As Object = Me.Invoke("getPatientsByTeam", New Object() {teamId})
            Return CType(results(0),TaggedPatientArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPatientsByTeamAsync(ByVal teamId As String)
            Me.getPatientsByTeamAsync(teamId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPatientsByTeamAsync(ByVal teamId As String, ByVal userState As Object)
            If (Me.getPatientsByTeamOperationCompleted Is Nothing) Then
                Me.getPatientsByTeamOperationCompleted = AddressOf Me.OngetPatientsByTeamOperationCompleted
            End If
            Me.InvokeAsync("getPatientsByTeam", New Object() {teamId}, Me.getPatientsByTeamOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPatientsByTeamOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPatientsByTeamCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPatientsByTeamCompleted(Me, New getPatientsByTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientsByProvider", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPatientsByProvider(ByVal duz As String) As TaggedPatientArray
            Dim results() As Object = Me.Invoke("getPatientsByProvider", New Object() {duz})
            Return CType(results(0),TaggedPatientArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPatientsByProviderAsync(ByVal duz As String)
            Me.getPatientsByProviderAsync(duz, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPatientsByProviderAsync(ByVal duz As String, ByVal userState As Object)
            If (Me.getPatientsByProviderOperationCompleted Is Nothing) Then
                Me.getPatientsByProviderOperationCompleted = AddressOf Me.OngetPatientsByProviderOperationCompleted
            End If
            Me.InvokeAsync("getPatientsByProvider", New Object() {duz}, Me.getPatientsByProviderOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPatientsByProviderOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPatientsByProviderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPatientsByProviderCompleted(Me, New getPatientsByProviderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAdmissions", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAdmissions() As TaggedInpatientStayArray
            Dim results() As Object = Me.Invoke("getAdmissions", New Object(-1) {})
            Return CType(results(0),TaggedInpatientStayArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAdmissionsAsync()
            Me.getAdmissionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAdmissionsAsync(ByVal userState As Object)
            If (Me.getAdmissionsOperationCompleted Is Nothing) Then
                Me.getAdmissionsOperationCompleted = AddressOf Me.OngetAdmissionsOperationCompleted
            End If
            Me.InvokeAsync("getAdmissions", New Object(-1) {}, Me.getAdmissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAdmissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAdmissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAdmissionsCompleted(Me, New getAdmissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getLocations", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLocations(ByVal target As String, ByVal direction As String) As TaggedHospitalLocationArray
            Dim results() As Object = Me.Invoke("getLocations", New Object() {target, direction})
            Return CType(results(0),TaggedHospitalLocationArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLocationsAsync(ByVal target As String, ByVal direction As String)
            Me.getLocationsAsync(target, direction, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLocationsAsync(ByVal target As String, ByVal direction As String, ByVal userState As Object)
            If (Me.getLocationsOperationCompleted Is Nothing) Then
                Me.getLocationsOperationCompleted = AddressOf Me.OngetLocationsOperationCompleted
            End If
            Me.InvokeAsync("getLocations", New Object() {target, direction}, Me.getLocationsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLocationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLocationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLocationsCompleted(Me, New getLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPrfNoteActions", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPrfNoteActions(ByVal noteDefinitionIEN As String) As PatientRecordFlagArray
            Dim results() As Object = Me.Invoke("getPrfNoteActions", New Object() {noteDefinitionIEN})
            Return CType(results(0),PatientRecordFlagArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPrfNoteActionsAsync(ByVal noteDefinitionIEN As String)
            Me.getPrfNoteActionsAsync(noteDefinitionIEN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPrfNoteActionsAsync(ByVal noteDefinitionIEN As String, ByVal userState As Object)
            If (Me.getPrfNoteActionsOperationCompleted Is Nothing) Then
                Me.getPrfNoteActionsOperationCompleted = AddressOf Me.OngetPrfNoteActionsOperationCompleted
            End If
            Me.InvokeAsync("getPrfNoteActions", New Object() {noteDefinitionIEN}, Me.getPrfNoteActionsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPrfNoteActionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPrfNoteActionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPrfNoteActionsCompleted(Me, New getPrfNoteActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVisits", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getVisits(ByVal fromDate As String, ByVal toDate As String) As TaggedVisitArray
            Dim results() As Object = Me.Invoke("getVisits", New Object() {fromDate, toDate})
            Return CType(results(0),TaggedVisitArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getVisitsAsync(ByVal fromDate As String, ByVal toDate As String)
            Me.getVisitsAsync(fromDate, toDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getVisitsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal userState As Object)
            If (Me.getVisitsOperationCompleted Is Nothing) Then
                Me.getVisitsOperationCompleted = AddressOf Me.OngetVisitsOperationCompleted
            End If
            Me.InvokeAsync("getVisits", New Object() {fromDate, toDate}, Me.getVisitsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetVisitsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getVisitsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getVisitsCompleted(Me, New getVisitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isConsultNote", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function isConsultNote(ByVal noteDefinitionIEN As String) As TextTO
            Dim results() As Object = Me.Invoke("isConsultNote", New Object() {noteDefinitionIEN})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub isConsultNoteAsync(ByVal noteDefinitionIEN As String)
            Me.isConsultNoteAsync(noteDefinitionIEN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub isConsultNoteAsync(ByVal noteDefinitionIEN As String, ByVal userState As Object)
            If (Me.isConsultNoteOperationCompleted Is Nothing) Then
                Me.isConsultNoteOperationCompleted = AddressOf Me.OnisConsultNoteOperationCompleted
            End If
            Me.InvokeAsync("isConsultNote", New Object() {noteDefinitionIEN}, Me.isConsultNoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnisConsultNoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.isConsultNoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent isConsultNoteCompleted(Me, New isConsultNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isCosignerRequired", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function isCosignerRequired(ByVal noteDefinitionIEN As String, ByVal authorDUZ As String) As TextTO
            Dim results() As Object = Me.Invoke("isCosignerRequired", New Object() {noteDefinitionIEN, authorDUZ})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub isCosignerRequiredAsync(ByVal noteDefinitionIEN As String, ByVal authorDUZ As String)
            Me.isCosignerRequiredAsync(noteDefinitionIEN, authorDUZ, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub isCosignerRequiredAsync(ByVal noteDefinitionIEN As String, ByVal authorDUZ As String, ByVal userState As Object)
            If (Me.isCosignerRequiredOperationCompleted Is Nothing) Then
                Me.isCosignerRequiredOperationCompleted = AddressOf Me.OnisCosignerRequiredOperationCompleted
            End If
            Me.InvokeAsync("isCosignerRequired", New Object() {noteDefinitionIEN, authorDUZ}, Me.isCosignerRequiredOperationCompleted, userState)
        End Sub
        
        Private Sub OnisCosignerRequiredOperationCompleted(ByVal arg As Object)
            If (Not (Me.isCosignerRequiredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent isCosignerRequiredCompleted(Me, New isCosignerRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isOneVisitNote", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function isOneVisitNote(ByVal noteDefinitionIEN As String, ByVal noteTitle As String, ByVal visitString As String) As TaggedText
            Dim results() As Object = Me.Invoke("isOneVisitNote", New Object() {noteDefinitionIEN, noteTitle, visitString})
            Return CType(results(0),TaggedText)
        End Function
        
        '''<remarks/>
        Public Overloads Sub isOneVisitNoteAsync(ByVal noteDefinitionIEN As String, ByVal noteTitle As String, ByVal visitString As String)
            Me.isOneVisitNoteAsync(noteDefinitionIEN, noteTitle, visitString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub isOneVisitNoteAsync(ByVal noteDefinitionIEN As String, ByVal noteTitle As String, ByVal visitString As String, ByVal userState As Object)
            If (Me.isOneVisitNoteOperationCompleted Is Nothing) Then
                Me.isOneVisitNoteOperationCompleted = AddressOf Me.OnisOneVisitNoteOperationCompleted
            End If
            Me.InvokeAsync("isOneVisitNote", New Object() {noteDefinitionIEN, noteTitle, visitString}, Me.isOneVisitNoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnisOneVisitNoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.isOneVisitNoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent isOneVisitNoteCompleted(Me, New isOneVisitNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isPrfNote", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function isPrfNote(ByVal noteDefinitionIEN As String) As TextTO
            Dim results() As Object = Me.Invoke("isPrfNote", New Object() {noteDefinitionIEN})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub isPrfNoteAsync(ByVal noteDefinitionIEN As String)
            Me.isPrfNoteAsync(noteDefinitionIEN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub isPrfNoteAsync(ByVal noteDefinitionIEN As String, ByVal userState As Object)
            If (Me.isPrfNoteOperationCompleted Is Nothing) Then
                Me.isPrfNoteOperationCompleted = AddressOf Me.OnisPrfNoteOperationCompleted
            End If
            Me.InvokeAsync("isPrfNote", New Object() {noteDefinitionIEN}, Me.isPrfNoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnisPrfNoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.isPrfNoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent isPrfNoteCompleted(Me, New isPrfNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isSurgeryNote", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function isSurgeryNote(ByVal noteDefinitionIEN As String) As TaggedText
            Dim results() As Object = Me.Invoke("isSurgeryNote", New Object() {noteDefinitionIEN})
            Return CType(results(0),TaggedText)
        End Function
        
        '''<remarks/>
        Public Overloads Sub isSurgeryNoteAsync(ByVal noteDefinitionIEN As String)
            Me.isSurgeryNoteAsync(noteDefinitionIEN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub isSurgeryNoteAsync(ByVal noteDefinitionIEN As String, ByVal userState As Object)
            If (Me.isSurgeryNoteOperationCompleted Is Nothing) Then
                Me.isSurgeryNoteOperationCompleted = AddressOf Me.OnisSurgeryNoteOperationCompleted
            End If
            Me.InvokeAsync("isSurgeryNote", New Object() {noteDefinitionIEN}, Me.isSurgeryNoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnisSurgeryNoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.isSurgeryNoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent isSurgeryNoteCompleted(Me, New isSurgeryNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/writeNote", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function writeNote(ByVal titleIEN As String, ByVal encounterString As String, ByVal text As String, ByVal authorDUZ As String, ByVal cosignerDUZ As String, ByVal consultIEN As String, ByVal prfIEN As String) As NoteResultTO
            Dim results() As Object = Me.Invoke("writeNote", New Object() {titleIEN, encounterString, text, authorDUZ, cosignerDUZ, consultIEN, prfIEN})
            Return CType(results(0),NoteResultTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub writeNoteAsync(ByVal titleIEN As String, ByVal encounterString As String, ByVal text As String, ByVal authorDUZ As String, ByVal cosignerDUZ As String, ByVal consultIEN As String, ByVal prfIEN As String)
            Me.writeNoteAsync(titleIEN, encounterString, text, authorDUZ, cosignerDUZ, consultIEN, prfIEN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub writeNoteAsync(ByVal titleIEN As String, ByVal encounterString As String, ByVal text As String, ByVal authorDUZ As String, ByVal cosignerDUZ As String, ByVal consultIEN As String, ByVal prfIEN As String, ByVal userState As Object)
            If (Me.writeNoteOperationCompleted Is Nothing) Then
                Me.writeNoteOperationCompleted = AddressOf Me.OnwriteNoteOperationCompleted
            End If
            Me.InvokeAsync("writeNote", New Object() {titleIEN, encounterString, text, authorDUZ, cosignerDUZ, consultIEN, prfIEN}, Me.writeNoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnwriteNoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.writeNoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent writeNoteCompleted(Me, New writeNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/signNote", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function signNote(ByVal noteIEN As String, ByVal userDUZ As String, ByVal esig As String) As TextTO
            Dim results() As Object = Me.Invoke("signNote", New Object() {noteIEN, userDUZ, esig})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub signNoteAsync(ByVal noteIEN As String, ByVal userDUZ As String, ByVal esig As String)
            Me.signNoteAsync(noteIEN, userDUZ, esig, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub signNoteAsync(ByVal noteIEN As String, ByVal userDUZ As String, ByVal esig As String, ByVal userState As Object)
            If (Me.signNoteOperationCompleted Is Nothing) Then
                Me.signNoteOperationCompleted = AddressOf Me.OnsignNoteOperationCompleted
            End If
            Me.InvokeAsync("signNote", New Object() {noteIEN, userDUZ, esig}, Me.signNoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnsignNoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.signNoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent signNoteCompleted(Me, New signNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/closeNote", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function closeNote(ByVal noteIEN As String, ByVal consultIEN As String) As TextTO
            Dim results() As Object = Me.Invoke("closeNote", New Object() {noteIEN, consultIEN})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub closeNoteAsync(ByVal noteIEN As String, ByVal consultIEN As String)
            Me.closeNoteAsync(noteIEN, consultIEN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub closeNoteAsync(ByVal noteIEN As String, ByVal consultIEN As String, ByVal userState As Object)
            If (Me.closeNoteOperationCompleted Is Nothing) Then
                Me.closeNoteOperationCompleted = AddressOf Me.OncloseNoteOperationCompleted
            End If
            Me.InvokeAsync("closeNote", New Object() {noteIEN, consultIEN}, Me.closeNoteOperationCompleted, userState)
        End Sub
        
        Private Sub OncloseNoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.closeNoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent closeNoteCompleted(Me, New closeNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getDemographics", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDemographics() As PatientTO
            Dim results() As Object = Me.Invoke("getDemographics", New Object(-1) {})
            Return CType(results(0),PatientTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDemographicsAsync()
            Me.getDemographicsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDemographicsAsync(ByVal userState As Object)
            If (Me.getDemographicsOperationCompleted Is Nothing) Then
                Me.getDemographicsOperationCompleted = AddressOf Me.OngetDemographicsOperationCompleted
            End If
            Me.InvokeAsync("getDemographics", New Object(-1) {}, Me.getDemographicsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDemographicsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDemographicsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDemographicsCompleted(Me, New getDemographicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/mpiLookup", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mpiLookup(ByVal SSN As String) As PatientArray
            Dim results() As Object = Me.Invoke("mpiLookup", New Object() {SSN})
            Return CType(results(0),PatientArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mpiLookupAsync(ByVal SSN As String)
            Me.mpiLookupAsync(SSN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mpiLookupAsync(ByVal SSN As String, ByVal userState As Object)
            If (Me.mpiLookupOperationCompleted Is Nothing) Then
                Me.mpiLookupOperationCompleted = AddressOf Me.OnmpiLookupOperationCompleted
            End If
            Me.InvokeAsync("mpiLookup", New Object() {SSN}, Me.mpiLookupOperationCompleted, userState)
        End Sub
        
        Private Sub OnmpiLookupOperationCompleted(ByVal arg As Object)
            If (Not (Me.mpiLookupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mpiLookupCompleted(Me, New mpiLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/nptLookup", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function nptLookup(ByVal SSN As String) As PatientArray
            Dim results() As Object = Me.Invoke("nptLookup", New Object() {SSN})
            Return CType(results(0),PatientArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub nptLookupAsync(ByVal SSN As String)
            Me.nptLookupAsync(SSN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub nptLookupAsync(ByVal SSN As String, ByVal userState As Object)
            If (Me.nptLookupOperationCompleted Is Nothing) Then
                Me.nptLookupOperationCompleted = AddressOf Me.OnnptLookupOperationCompleted
            End If
            Me.InvokeAsync("nptLookup", New Object() {SSN}, Me.nptLookupOperationCompleted, userState)
        End Sub
        
        Private Sub OnnptLookupOperationCompleted(ByVal arg As Object)
            If (Not (Me.nptLookupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent nptLookupCompleted(Me, New nptLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAllOrders", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllOrders() As TaggedOrderArrays
            Dim results() As Object = Me.Invoke("getAllOrders", New Object(-1) {})
            Return CType(results(0),TaggedOrderArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllOrdersAsync()
            Me.getAllOrdersAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllOrdersAsync(ByVal userState As Object)
            If (Me.getAllOrdersOperationCompleted Is Nothing) Then
                Me.getAllOrdersOperationCompleted = AddressOf Me.OngetAllOrdersOperationCompleted
            End If
            Me.InvokeAsync("getAllOrders", New Object(-1) {}, Me.getAllOrdersOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllOrdersOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllOrdersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllOrdersCompleted(Me, New getAllOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getReminderReportTemplates", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getReminderReportTemplates() As TextArray
            Dim results() As Object = Me.Invoke("getReminderReportTemplates", New Object(-1) {})
            Return CType(results(0),TextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getReminderReportTemplatesAsync()
            Me.getReminderReportTemplatesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getReminderReportTemplatesAsync(ByVal userState As Object)
            If (Me.getReminderReportTemplatesOperationCompleted Is Nothing) Then
                Me.getReminderReportTemplatesOperationCompleted = AddressOf Me.OngetReminderReportTemplatesOperationCompleted
            End If
            Me.InvokeAsync("getReminderReportTemplates", New Object(-1) {}, Me.getReminderReportTemplatesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetReminderReportTemplatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getReminderReportTemplatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getReminderReportTemplatesCompleted(Me, New getReminderReportTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getActiveReminderReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getActiveReminderReports() As TaggedTextArray
            Dim results() As Object = Me.Invoke("getActiveReminderReports", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getActiveReminderReportsAsync()
            Me.getActiveReminderReportsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getActiveReminderReportsAsync(ByVal userState As Object)
            If (Me.getActiveReminderReportsOperationCompleted Is Nothing) Then
                Me.getActiveReminderReportsOperationCompleted = AddressOf Me.OngetActiveReminderReportsOperationCompleted
            End If
            Me.InvokeAsync("getActiveReminderReports", New Object(-1) {}, Me.getActiveReminderReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetActiveReminderReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getActiveReminderReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getActiveReminderReportsCompleted(Me, New getActiveReminderReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientListForReminderReport", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPatientListForReminderReport(ByVal rptId As String) As ReminderReportPatientListTO
            Dim results() As Object = Me.Invoke("getPatientListForReminderReport", New Object() {rptId})
            Return CType(results(0),ReminderReportPatientListTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPatientListForReminderReportAsync(ByVal rptId As String)
            Me.getPatientListForReminderReportAsync(rptId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPatientListForReminderReportAsync(ByVal rptId As String, ByVal userState As Object)
            If (Me.getPatientListForReminderReportOperationCompleted Is Nothing) Then
                Me.getPatientListForReminderReportOperationCompleted = AddressOf Me.OngetPatientListForReminderReportOperationCompleted
            End If
            Me.InvokeAsync("getPatientListForReminderReport", New Object() {rptId}, Me.getPatientListForReminderReportOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPatientListForReminderReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPatientListForReminderReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPatientListForReminderReportCompleted(Me, New getPatientListForReminderReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPcpForPatient", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPcpForPatient(ByVal pid As String) As TaggedText
            Dim results() As Object = Me.Invoke("getPcpForPatient", New Object() {pid})
            Return CType(results(0),TaggedText)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPcpForPatientAsync(ByVal pid As String)
            Me.getPcpForPatientAsync(pid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPcpForPatientAsync(ByVal pid As String, ByVal userState As Object)
            If (Me.getPcpForPatientOperationCompleted Is Nothing) Then
                Me.getPcpForPatientOperationCompleted = AddressOf Me.OngetPcpForPatientOperationCompleted
            End If
            Me.InvokeAsync("getPcpForPatient", New Object() {pid}, Me.getPcpForPatientOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPcpForPatientOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPcpForPatientCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPcpForPatientCompleted(Me, New getPcpForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSitesForStation", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSitesForStation() As TaggedTextArray
            Dim results() As Object = Me.Invoke("getSitesForStation", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSitesForStationAsync()
            Me.getSitesForStationAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSitesForStationAsync(ByVal userState As Object)
            If (Me.getSitesForStationOperationCompleted Is Nothing) Then
                Me.getSitesForStationOperationCompleted = AddressOf Me.OngetSitesForStationOperationCompleted
            End If
            Me.InvokeAsync("getSitesForStation", New Object(-1) {}, Me.getSitesForStationOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSitesForStationOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSitesForStationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSitesForStationCompleted(Me, New getSitesForStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getClinicsByName", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getClinicsByName(ByVal name As String) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getClinicsByName", New Object() {name})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getClinicsByNameAsync(ByVal name As String)
            Me.getClinicsByNameAsync(name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getClinicsByNameAsync(ByVal name As String, ByVal userState As Object)
            If (Me.getClinicsByNameOperationCompleted Is Nothing) Then
                Me.getClinicsByNameOperationCompleted = AddressOf Me.OngetClinicsByNameOperationCompleted
            End If
            Me.InvokeAsync("getClinicsByName", New Object() {name}, Me.getClinicsByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetClinicsByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getClinicsByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getClinicsByNameCompleted(Me, New getClinicsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOrderableItemsByName", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getOrderableItemsByName(ByVal name As String) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getOrderableItemsByName", New Object() {name})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOrderableItemsByNameAsync(ByVal name As String)
            Me.getOrderableItemsByNameAsync(name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOrderableItemsByNameAsync(ByVal name As String, ByVal userState As Object)
            If (Me.getOrderableItemsByNameOperationCompleted Is Nothing) Then
                Me.getOrderableItemsByNameOperationCompleted = AddressOf Me.OngetOrderableItemsByNameOperationCompleted
            End If
            Me.InvokeAsync("getOrderableItemsByName", New Object() {name}, Me.getOrderableItemsByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOrderableItemsByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOrderableItemsByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOrderableItemsByNameCompleted(Me, New getOrderableItemsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOrderStatusForPatient", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getOrderStatusForPatient(ByVal pid As String, ByVal orderableItemId As String) As TextTO
            Dim results() As Object = Me.Invoke("getOrderStatusForPatient", New Object() {pid, orderableItemId})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOrderStatusForPatientAsync(ByVal pid As String, ByVal orderableItemId As String)
            Me.getOrderStatusForPatientAsync(pid, orderableItemId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOrderStatusForPatientAsync(ByVal pid As String, ByVal orderableItemId As String, ByVal userState As Object)
            If (Me.getOrderStatusForPatientOperationCompleted Is Nothing) Then
                Me.getOrderStatusForPatientOperationCompleted = AddressOf Me.OngetOrderStatusForPatientOperationCompleted
            End If
            Me.InvokeAsync("getOrderStatusForPatient", New Object() {pid, orderableItemId}, Me.getOrderStatusForPatientOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOrderStatusForPatientOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOrderStatusForPatientCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOrderStatusForPatientCompleted(Me, New getOrderStatusForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOrderDialogsForDisplayGroup", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getOrderDialogsForDisplayGroup(ByVal displayGroupId As String) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getOrderDialogsForDisplayGroup", New Object() {displayGroupId})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOrderDialogsForDisplayGroupAsync(ByVal displayGroupId As String)
            Me.getOrderDialogsForDisplayGroupAsync(displayGroupId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOrderDialogsForDisplayGroupAsync(ByVal displayGroupId As String, ByVal userState As Object)
            If (Me.getOrderDialogsForDisplayGroupOperationCompleted Is Nothing) Then
                Me.getOrderDialogsForDisplayGroupOperationCompleted = AddressOf Me.OngetOrderDialogsForDisplayGroupOperationCompleted
            End If
            Me.InvokeAsync("getOrderDialogsForDisplayGroup", New Object() {displayGroupId}, Me.getOrderDialogsForDisplayGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOrderDialogsForDisplayGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOrderDialogsForDisplayGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOrderDialogsForDisplayGroupCompleted(Me, New getOrderDialogsForDisplayGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOrderDialogItems", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getOrderDialogItems(ByVal dialogId As String) As OrderDialogItemArray
            Dim results() As Object = Me.Invoke("getOrderDialogItems", New Object() {dialogId})
            Return CType(results(0),OrderDialogItemArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOrderDialogItemsAsync(ByVal dialogId As String)
            Me.getOrderDialogItemsAsync(dialogId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOrderDialogItemsAsync(ByVal dialogId As String, ByVal userState As Object)
            If (Me.getOrderDialogItemsOperationCompleted Is Nothing) Then
                Me.getOrderDialogItemsOperationCompleted = AddressOf Me.OngetOrderDialogItemsOperationCompleted
            End If
            Me.InvokeAsync("getOrderDialogItems", New Object() {dialogId}, Me.getOrderDialogItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOrderDialogItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOrderDialogItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOrderDialogItemsCompleted(Me, New getOrderDialogItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getUsersWithOption", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUsersWithOption(ByVal optionName As String) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getUsersWithOption", New Object() {optionName})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUsersWithOptionAsync(ByVal optionName As String)
            Me.getUsersWithOptionAsync(optionName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUsersWithOptionAsync(ByVal optionName As String, ByVal userState As Object)
            If (Me.getUsersWithOptionOperationCompleted Is Nothing) Then
                Me.getUsersWithOptionOperationCompleted = AddressOf Me.OngetUsersWithOptionOperationCompleted
            End If
            Me.InvokeAsync("getUsersWithOption", New Object() {optionName}, Me.getUsersWithOptionOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUsersWithOptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUsersWithOptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUsersWithOptionCompleted(Me, New getUsersWithOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/userHasPermission", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function userHasPermission(ByVal uid As String, ByVal permissionName As String) As BoolTO
            Dim results() As Object = Me.Invoke("userHasPermission", New Object() {uid, permissionName})
            Return CType(results(0),BoolTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub userHasPermissionAsync(ByVal uid As String, ByVal permissionName As String)
            Me.userHasPermissionAsync(uid, permissionName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub userHasPermissionAsync(ByVal uid As String, ByVal permissionName As String, ByVal userState As Object)
            If (Me.userHasPermissionOperationCompleted Is Nothing) Then
                Me.userHasPermissionOperationCompleted = AddressOf Me.OnuserHasPermissionOperationCompleted
            End If
            Me.InvokeAsync("userHasPermission", New Object() {uid, permissionName}, Me.userHasPermissionOperationCompleted, userState)
        End Sub
        
        Private Sub OnuserHasPermissionOperationCompleted(ByVal arg As Object)
            If (Not (Me.userHasPermissionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent userHasPermissionCompleted(Me, New userHasPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getUserSecurityKeys", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUserSecurityKeys(ByVal uid As String) As UserSecurityKeyArray
            Dim results() As Object = Me.Invoke("getUserSecurityKeys", New Object() {uid})
            Return CType(results(0),UserSecurityKeyArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUserSecurityKeysAsync(ByVal uid As String)
            Me.getUserSecurityKeysAsync(uid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUserSecurityKeysAsync(ByVal uid As String, ByVal userState As Object)
            If (Me.getUserSecurityKeysOperationCompleted Is Nothing) Then
                Me.getUserSecurityKeysOperationCompleted = AddressOf Me.OngetUserSecurityKeysOperationCompleted
            End If
            Me.InvokeAsync("getUserSecurityKeys", New Object() {uid}, Me.getUserSecurityKeysOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUserSecurityKeysOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUserSecurityKeysCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUserSecurityKeysCompleted(Me, New getUserSecurityKeysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVariableValue", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getVariableValue(ByVal arg As String) As TextTO
            Dim results() As Object = Me.Invoke("getVariableValue", New Object() {arg})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getVariableValueAsync(ByVal arg As String)
            Me.getVariableValueAsync(arg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getVariableValueAsync(ByVal arg As String, ByVal userState As Object)
            If (Me.getVariableValueOperationCompleted Is Nothing) Then
                Me.getVariableValueOperationCompleted = AddressOf Me.OngetVariableValueOperationCompleted
            End If
            Me.InvokeAsync("getVariableValue", New Object() {arg}, Me.getVariableValueOperationCompleted, userState)
        End Sub
        
        Private Sub OngetVariableValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.getVariableValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getVariableValueCompleted(Me, New getVariableValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMentalHealthInstrumentsForPatient", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMentalHealthInstrumentsForPatient() As TaggedMentalHealthInstrumentAdministrationArrays
            Dim results() As Object = Me.Invoke("getMentalHealthInstrumentsForPatient", New Object(-1) {})
            Return CType(results(0),TaggedMentalHealthInstrumentAdministrationArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthInstrumentsForPatientAsync()
            Me.getMentalHealthInstrumentsForPatientAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthInstrumentsForPatientAsync(ByVal userState As Object)
            If (Me.getMentalHealthInstrumentsForPatientOperationCompleted Is Nothing) Then
                Me.getMentalHealthInstrumentsForPatientOperationCompleted = AddressOf Me.OngetMentalHealthInstrumentsForPatientOperationCompleted
            End If
            Me.InvokeAsync("getMentalHealthInstrumentsForPatient", New Object(-1) {}, Me.getMentalHealthInstrumentsForPatientOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMentalHealthInstrumentsForPatientOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMentalHealthInstrumentsForPatientCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMentalHealthInstrumentsForPatientCompleted(Me, New getMentalHealthInstrumentsForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMentalHealthInstrumentsForPatientBySurvey", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMentalHealthInstrumentsForPatientBySurvey(ByVal surveyName As String) As TaggedMentalHealthInstrumentAdministrationArrays
            Dim results() As Object = Me.Invoke("getMentalHealthInstrumentsForPatientBySurvey", New Object() {surveyName})
            Return CType(results(0),TaggedMentalHealthInstrumentAdministrationArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthInstrumentsForPatientBySurveyAsync(ByVal surveyName As String)
            Me.getMentalHealthInstrumentsForPatientBySurveyAsync(surveyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthInstrumentsForPatientBySurveyAsync(ByVal surveyName As String, ByVal userState As Object)
            If (Me.getMentalHealthInstrumentsForPatientBySurveyOperationCompleted Is Nothing) Then
                Me.getMentalHealthInstrumentsForPatientBySurveyOperationCompleted = AddressOf Me.OngetMentalHealthInstrumentsForPatientBySurveyOperationCompleted
            End If
            Me.InvokeAsync("getMentalHealthInstrumentsForPatientBySurvey", New Object() {surveyName}, Me.getMentalHealthInstrumentsForPatientBySurveyOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMentalHealthInstrumentsForPatientBySurveyOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMentalHealthInstrumentsForPatientBySurveyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMentalHealthInstrumentsForPatientBySurveyCompleted(Me, New getMentalHealthInstrumentsForPatientBySurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMentalHealthInstrumentResultSet", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMentalHealthInstrumentResultSet(ByVal sitecode As String, ByVal administrationId As String) As MentalHealthInstrumentResultSetTO
            Dim results() As Object = Me.Invoke("getMentalHealthInstrumentResultSet", New Object() {sitecode, administrationId})
            Return CType(results(0),MentalHealthInstrumentResultSetTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthInstrumentResultSetAsync(ByVal sitecode As String, ByVal administrationId As String)
            Me.getMentalHealthInstrumentResultSetAsync(sitecode, administrationId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthInstrumentResultSetAsync(ByVal sitecode As String, ByVal administrationId As String, ByVal userState As Object)
            If (Me.getMentalHealthInstrumentResultSetOperationCompleted Is Nothing) Then
                Me.getMentalHealthInstrumentResultSetOperationCompleted = AddressOf Me.OngetMentalHealthInstrumentResultSetOperationCompleted
            End If
            Me.InvokeAsync("getMentalHealthInstrumentResultSet", New Object() {sitecode, administrationId}, Me.getMentalHealthInstrumentResultSetOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMentalHealthInstrumentResultSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMentalHealthInstrumentResultSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMentalHealthInstrumentResultSetCompleted(Me, New getMentalHealthInstrumentResultSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMentalHealthInstrumentResultSetBySurvey", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMentalHealthInstrumentResultSetBySurvey(ByVal siteCode As String, ByVal surveyName As String) As TaggedMentalHealthResultSetArray
            Dim results() As Object = Me.Invoke("getMentalHealthInstrumentResultSetBySurvey", New Object() {siteCode, surveyName})
            Return CType(results(0),TaggedMentalHealthResultSetArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthInstrumentResultSetBySurveyAsync(ByVal siteCode As String, ByVal surveyName As String)
            Me.getMentalHealthInstrumentResultSetBySurveyAsync(siteCode, surveyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthInstrumentResultSetBySurveyAsync(ByVal siteCode As String, ByVal surveyName As String, ByVal userState As Object)
            If (Me.getMentalHealthInstrumentResultSetBySurveyOperationCompleted Is Nothing) Then
                Me.getMentalHealthInstrumentResultSetBySurveyOperationCompleted = AddressOf Me.OngetMentalHealthInstrumentResultSetBySurveyOperationCompleted
            End If
            Me.InvokeAsync("getMentalHealthInstrumentResultSetBySurvey", New Object() {siteCode, surveyName}, Me.getMentalHealthInstrumentResultSetBySurveyOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMentalHealthInstrumentResultSetBySurveyOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMentalHealthInstrumentResultSetBySurveyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMentalHealthInstrumentResultSetBySurveyCompleted(Me, New getMentalHealthInstrumentResultSetBySurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getNhinData", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getNhinData(ByVal types As String) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getNhinData", New Object() {types})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getNhinDataAsync(ByVal types As String)
            Me.getNhinDataAsync(types, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getNhinDataAsync(ByVal types As String, ByVal userState As Object)
            If (Me.getNhinDataOperationCompleted Is Nothing) Then
                Me.getNhinDataOperationCompleted = AddressOf Me.OngetNhinDataOperationCompleted
            End If
            Me.InvokeAsync("getNhinData", New Object() {types}, Me.getNhinDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetNhinDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getNhinDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getNhinDataCompleted(Me, New getNhinDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAllInstitutions", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllInstitutions() As SiteArray
            Dim results() As Object = Me.Invoke("getAllInstitutions", New Object(-1) {})
            Return CType(results(0),SiteArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllInstitutionsAsync()
            Me.getAllInstitutionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllInstitutionsAsync(ByVal userState As Object)
            If (Me.getAllInstitutionsOperationCompleted Is Nothing) Then
                Me.getAllInstitutionsOperationCompleted = AddressOf Me.OngetAllInstitutionsOperationCompleted
            End If
            Me.InvokeAsync("getAllInstitutions", New Object(-1) {}, Me.getAllInstitutionsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllInstitutionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllInstitutionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllInstitutionsCompleted(Me, New getAllInstitutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVistaTimestamps", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getVistaTimestamps() As TaggedTextArray
            Dim results() As Object = Me.Invoke("getVistaTimestamps", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getVistaTimestampsAsync()
            Me.getVistaTimestampsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getVistaTimestampsAsync(ByVal userState As Object)
            If (Me.getVistaTimestampsOperationCompleted Is Nothing) Then
                Me.getVistaTimestampsOperationCompleted = AddressOf Me.OngetVistaTimestampsOperationCompleted
            End If
            Me.InvokeAsync("getVistaTimestamps", New Object(-1) {}, Me.getVistaTimestampsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetVistaTimestampsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getVistaTimestampsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getVistaTimestampsCompleted(Me, New getVistaTimestampsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientCareTeam", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPatientCareTeam(ByVal station As String) As PatientCareTeamTO
            Dim results() As Object = Me.Invoke("getPatientCareTeam", New Object() {station})
            Return CType(results(0),PatientCareTeamTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPatientCareTeamAsync(ByVal station As String)
            Me.getPatientCareTeamAsync(station, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPatientCareTeamAsync(ByVal station As String, ByVal userState As Object)
            If (Me.getPatientCareTeamOperationCompleted Is Nothing) Then
                Me.getPatientCareTeamOperationCompleted = AddressOf Me.OngetPatientCareTeamOperationCompleted
            End If
            Me.InvokeAsync("getPatientCareTeam", New Object() {station}, Me.getPatientCareTeamOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPatientCareTeamOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPatientCareTeamCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPatientCareTeamCompleted(Me, New getPatientCareTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getActiveDirectoryDomains", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getActiveDirectoryDomains() As DomainArray
            Dim results() As Object = Me.Invoke("getActiveDirectoryDomains", New Object(-1) {})
            Return CType(results(0),DomainArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getActiveDirectoryDomainsAsync()
            Me.getActiveDirectoryDomainsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getActiveDirectoryDomainsAsync(ByVal userState As Object)
            If (Me.getActiveDirectoryDomainsOperationCompleted Is Nothing) Then
                Me.getActiveDirectoryDomainsOperationCompleted = AddressOf Me.OngetActiveDirectoryDomainsOperationCompleted
            End If
            Me.InvokeAsync("getActiveDirectoryDomains", New Object(-1) {}, Me.getActiveDirectoryDomainsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetActiveDirectoryDomainsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getActiveDirectoryDomainsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getActiveDirectoryDomainsCompleted(Me, New getActiveDirectoryDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/loginActiveDirectory", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function loginActiveDirectory(ByVal domain As String, ByVal username As String, ByVal password As String) As UserTO
            Dim results() As Object = Me.Invoke("loginActiveDirectory", New Object() {domain, username, password})
            Return CType(results(0),UserTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub loginActiveDirectoryAsync(ByVal domain As String, ByVal username As String, ByVal password As String)
            Me.loginActiveDirectoryAsync(domain, username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub loginActiveDirectoryAsync(ByVal domain As String, ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.loginActiveDirectoryOperationCompleted Is Nothing) Then
                Me.loginActiveDirectoryOperationCompleted = AddressOf Me.OnloginActiveDirectoryOperationCompleted
            End If
            Me.InvokeAsync("loginActiveDirectory", New Object() {domain, username, password}, Me.loginActiveDirectoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnloginActiveDirectoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.loginActiveDirectoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent loginActiveDirectoryCompleted(Me, New loginActiveDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/ldapUserLookup", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ldapUserLookup(ByVal uid As String, ByVal domainSearchRoot As String) As UserArray
            Dim results() As Object = Me.Invoke("ldapUserLookup", New Object() {uid, domainSearchRoot})
            Return CType(results(0),UserArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ldapUserLookupAsync(ByVal uid As String, ByVal domainSearchRoot As String)
            Me.ldapUserLookupAsync(uid, domainSearchRoot, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ldapUserLookupAsync(ByVal uid As String, ByVal domainSearchRoot As String, ByVal userState As Object)
            If (Me.ldapUserLookupOperationCompleted Is Nothing) Then
                Me.ldapUserLookupOperationCompleted = AddressOf Me.OnldapUserLookupOperationCompleted
            End If
            Me.InvokeAsync("ldapUserLookup", New Object() {uid, domainSearchRoot}, Me.ldapUserLookupOperationCompleted, userState)
        End Sub
        
        Private Sub OnldapUserLookupOperationCompleted(ByVal arg As Object)
            If (Not (Me.ldapUserLookupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ldapUserLookupCompleted(Me, New ldapUserLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getLabTestDescription", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLabTestDescription(ByVal identifierString As String) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getLabTestDescription", New Object() {identifierString})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLabTestDescriptionAsync(ByVal identifierString As String)
            Me.getLabTestDescriptionAsync(identifierString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLabTestDescriptionAsync(ByVal identifierString As String, ByVal userState As Object)
            If (Me.getLabTestDescriptionOperationCompleted Is Nothing) Then
                Me.getLabTestDescriptionOperationCompleted = AddressOf Me.OngetLabTestDescriptionOperationCompleted
            End If
            Me.InvokeAsync("getLabTestDescription", New Object() {identifierString}, Me.getLabTestDescriptionOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLabTestDescriptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLabTestDescriptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLabTestDescriptionCompleted(Me, New getLabTestDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getLabTests", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLabTests(ByVal target As String) As TaggedLabTestArrays
            Dim results() As Object = Me.Invoke("getLabTests", New Object() {target})
            Return CType(results(0),TaggedLabTestArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLabTestsAsync(ByVal target As String)
            Me.getLabTestsAsync(target, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLabTestsAsync(ByVal target As String, ByVal userState As Object)
            If (Me.getLabTestsOperationCompleted Is Nothing) Then
                Me.getLabTestsOperationCompleted = AddressOf Me.OngetLabTestsOperationCompleted
            End If
            Me.InvokeAsync("getLabTests", New Object() {target}, Me.getLabTestsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLabTestsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLabTestsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLabTestsCompleted(Me, New getLabTestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientAssociates", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPatientAssociates() As TaggedPatientAssociateArrays
            Dim results() As Object = Me.Invoke("getPatientAssociates", New Object(-1) {})
            Return CType(results(0),TaggedPatientAssociateArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPatientAssociatesAsync()
            Me.getPatientAssociatesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPatientAssociatesAsync(ByVal userState As Object)
            If (Me.getPatientAssociatesOperationCompleted Is Nothing) Then
                Me.getPatientAssociatesOperationCompleted = AddressOf Me.OngetPatientAssociatesOperationCompleted
            End If
            Me.InvokeAsync("getPatientAssociates", New Object(-1) {}, Me.getPatientAssociatesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPatientAssociatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPatientAssociatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPatientAssociatesCompleted(Me, New getPatientAssociatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAdhocHealthSummaryByDisplayName", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAdhocHealthSummaryByDisplayName(ByVal displayName As String) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getAdhocHealthSummaryByDisplayName", New Object() {displayName})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAdhocHealthSummaryByDisplayNameAsync(ByVal displayName As String)
            Me.getAdhocHealthSummaryByDisplayNameAsync(displayName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAdhocHealthSummaryByDisplayNameAsync(ByVal displayName As String, ByVal userState As Object)
            If (Me.getAdhocHealthSummaryByDisplayNameOperationCompleted Is Nothing) Then
                Me.getAdhocHealthSummaryByDisplayNameOperationCompleted = AddressOf Me.OngetAdhocHealthSummaryByDisplayNameOperationCompleted
            End If
            Me.InvokeAsync("getAdhocHealthSummaryByDisplayName", New Object() {displayName}, Me.getAdhocHealthSummaryByDisplayNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAdhocHealthSummaryByDisplayNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAdhocHealthSummaryByDisplayNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAdhocHealthSummaryByDisplayNameCompleted(Me, New getAdhocHealthSummaryByDisplayNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/EXPERIMENTALgetHealthSummary", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EXPERIMENTALgetHealthSummary(ByVal healthSummaryId As String, ByVal healthSummaryName As String) As TaggedHealthSummaryArray
            Dim results() As Object = Me.Invoke("EXPERIMENTALgetHealthSummary", New Object() {healthSummaryId, healthSummaryName})
            Return CType(results(0),TaggedHealthSummaryArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EXPERIMENTALgetHealthSummaryAsync(ByVal healthSummaryId As String, ByVal healthSummaryName As String)
            Me.EXPERIMENTALgetHealthSummaryAsync(healthSummaryId, healthSummaryName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EXPERIMENTALgetHealthSummaryAsync(ByVal healthSummaryId As String, ByVal healthSummaryName As String, ByVal userState As Object)
            If (Me.EXPERIMENTALgetHealthSummaryOperationCompleted Is Nothing) Then
                Me.EXPERIMENTALgetHealthSummaryOperationCompleted = AddressOf Me.OnEXPERIMENTALgetHealthSummaryOperationCompleted
            End If
            Me.InvokeAsync("EXPERIMENTALgetHealthSummary", New Object() {healthSummaryId, healthSummaryName}, Me.EXPERIMENTALgetHealthSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnEXPERIMENTALgetHealthSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.EXPERIMENTALgetHealthSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EXPERIMENTALgetHealthSummaryCompleted(Me, New EXPERIMENTALgetHealthSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCorrespondingIds", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCorrespondingIds(ByVal sitecode As String, ByVal patientId As String, ByVal idType As String) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getCorrespondingIds", New Object() {sitecode, patientId, idType})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCorrespondingIdsAsync(ByVal sitecode As String, ByVal patientId As String, ByVal idType As String)
            Me.getCorrespondingIdsAsync(sitecode, patientId, idType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCorrespondingIdsAsync(ByVal sitecode As String, ByVal patientId As String, ByVal idType As String, ByVal userState As Object)
            If (Me.getCorrespondingIdsOperationCompleted Is Nothing) Then
                Me.getCorrespondingIdsOperationCompleted = AddressOf Me.OngetCorrespondingIdsOperationCompleted
            End If
            Me.InvokeAsync("getCorrespondingIds", New Object() {sitecode, patientId, idType}, Me.getCorrespondingIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCorrespondingIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCorrespondingIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCorrespondingIdsCompleted(Me, New getCorrespondingIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVHA", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getVHA() As RegionArray
            Dim results() As Object = Me.Invoke("getVHA", New Object(-1) {})
            Return CType(results(0),RegionArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getVHAAsync()
            Me.getVHAAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getVHAAsync(ByVal userState As Object)
            If (Me.getVHAOperationCompleted Is Nothing) Then
                Me.getVHAOperationCompleted = AddressOf Me.OngetVHAOperationCompleted
            End If
            Me.InvokeAsync("getVHA", New Object(-1) {}, Me.getVHAOperationCompleted, userState)
        End Sub
        
        Private Sub OngetVHAOperationCompleted(ByVal arg As Object)
            If (Not (Me.getVHACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getVHACompleted(Me, New getVHACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVISN", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getVISN(ByVal regionId As String) As RegionTO
            Dim results() As Object = Me.Invoke("getVISN", New Object() {regionId})
            Return CType(results(0),RegionTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getVISNAsync(ByVal regionId As String)
            Me.getVISNAsync(regionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getVISNAsync(ByVal regionId As String, ByVal userState As Object)
            If (Me.getVISNOperationCompleted Is Nothing) Then
                Me.getVISNOperationCompleted = AddressOf Me.OngetVISNOperationCompleted
            End If
            Me.InvokeAsync("getVISN", New Object() {regionId}, Me.getVISNOperationCompleted, userState)
        End Sub
        
        Private Sub OngetVISNOperationCompleted(ByVal arg As Object)
            If (Not (Me.getVISNCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getVISNCompleted(Me, New getVISNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/connect", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function connect(ByVal sitelist As String) As DataSourceArray
            Dim results() As Object = Me.Invoke("connect", New Object() {sitelist})
            Return CType(results(0),DataSourceArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub connectAsync(ByVal sitelist As String)
            Me.connectAsync(sitelist, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub connectAsync(ByVal sitelist As String, ByVal userState As Object)
            If (Me.connectOperationCompleted Is Nothing) Then
                Me.connectOperationCompleted = AddressOf Me.OnconnectOperationCompleted
            End If
            Me.InvokeAsync("connect", New Object() {sitelist}, Me.connectOperationCompleted, userState)
        End Sub
        
        Private Sub OnconnectOperationCompleted(ByVal arg As Object)
            If (Not (Me.connectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent connectCompleted(Me, New connectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/login", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function login(ByVal username As String, ByVal pwd As String, ByVal context As String) As UserTO
            Dim results() As Object = Me.Invoke("login", New Object() {username, pwd, context})
            Return CType(results(0),UserTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub loginAsync(ByVal username As String, ByVal pwd As String, ByVal context As String)
            Me.loginAsync(username, pwd, context, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub loginAsync(ByVal username As String, ByVal pwd As String, ByVal context As String, ByVal userState As Object)
            If (Me.loginOperationCompleted Is Nothing) Then
                Me.loginOperationCompleted = AddressOf Me.OnloginOperationCompleted
            End If
            Me.InvokeAsync("login", New Object() {username, pwd, context}, Me.loginOperationCompleted, userState)
        End Sub
        
        Private Sub OnloginOperationCompleted(ByVal arg As Object)
            If (Not (Me.loginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent loginCompleted(Me, New loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/disconnect", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function disconnect() As TaggedTextArray
            Dim results() As Object = Me.Invoke("disconnect", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub disconnectAsync()
            Me.disconnectAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub disconnectAsync(ByVal userState As Object)
            If (Me.disconnectOperationCompleted Is Nothing) Then
                Me.disconnectOperationCompleted = AddressOf Me.OndisconnectOperationCompleted
            End If
            Me.InvokeAsync("disconnect", New Object(-1) {}, Me.disconnectOperationCompleted, userState)
        End Sub
        
        Private Sub OndisconnectOperationCompleted(ByVal arg As Object)
            If (Not (Me.disconnectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent disconnectCompleted(Me, New disconnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/disconnectRemoteSites", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function disconnectRemoteSites() As TaggedTextArray
            Dim results() As Object = Me.Invoke("disconnectRemoteSites", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub disconnectRemoteSitesAsync()
            Me.disconnectRemoteSitesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub disconnectRemoteSitesAsync(ByVal userState As Object)
            If (Me.disconnectRemoteSitesOperationCompleted Is Nothing) Then
                Me.disconnectRemoteSitesOperationCompleted = AddressOf Me.OndisconnectRemoteSitesOperationCompleted
            End If
            Me.InvokeAsync("disconnectRemoteSites", New Object(-1) {}, Me.disconnectRemoteSitesOperationCompleted, userState)
        End Sub
        
        Private Sub OndisconnectRemoteSitesOperationCompleted(ByVal arg As Object)
            If (Not (Me.disconnectRemoteSitesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent disconnectRemoteSitesCompleted(Me, New disconnectRemoteSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/visit", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function visit(ByVal pwd As String, ByVal sitelist As String, ByVal userSitecode As String, ByVal userName As String, ByVal DUZ As String, ByVal SSN As String, ByVal context As String) As TaggedTextArray
            Dim results() As Object = Me.Invoke("visit", New Object() {pwd, sitelist, userSitecode, userName, DUZ, SSN, context})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub visitAsync(ByVal pwd As String, ByVal sitelist As String, ByVal userSitecode As String, ByVal userName As String, ByVal DUZ As String, ByVal SSN As String, ByVal context As String)
            Me.visitAsync(pwd, sitelist, userSitecode, userName, DUZ, SSN, context, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub visitAsync(ByVal pwd As String, ByVal sitelist As String, ByVal userSitecode As String, ByVal userName As String, ByVal DUZ As String, ByVal SSN As String, ByVal context As String, ByVal userState As Object)
            If (Me.visitOperationCompleted Is Nothing) Then
                Me.visitOperationCompleted = AddressOf Me.OnvisitOperationCompleted
            End If
            Me.InvokeAsync("visit", New Object() {pwd, sitelist, userSitecode, userName, DUZ, SSN, context}, Me.visitOperationCompleted, userState)
        End Sub
        
        Private Sub OnvisitOperationCompleted(ByVal arg As Object)
            If (Not (Me.visitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent visitCompleted(Me, New visitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/cprsLaunch", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function cprsLaunch(ByVal pwd As String, ByVal sitecode As String, ByVal DUZ As String, ByVal DFN As String) As PersonsTO
            Dim results() As Object = Me.Invoke("cprsLaunch", New Object() {pwd, sitecode, DUZ, DFN})
            Return CType(results(0),PersonsTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub cprsLaunchAsync(ByVal pwd As String, ByVal sitecode As String, ByVal DUZ As String, ByVal DFN As String)
            Me.cprsLaunchAsync(pwd, sitecode, DUZ, DFN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub cprsLaunchAsync(ByVal pwd As String, ByVal sitecode As String, ByVal DUZ As String, ByVal DFN As String, ByVal userState As Object)
            If (Me.cprsLaunchOperationCompleted Is Nothing) Then
                Me.cprsLaunchOperationCompleted = AddressOf Me.OncprsLaunchOperationCompleted
            End If
            Me.InvokeAsync("cprsLaunch", New Object() {pwd, sitecode, DUZ, DFN}, Me.cprsLaunchOperationCompleted, userState)
        End Sub
        
        Private Sub OncprsLaunchOperationCompleted(ByVal arg As Object)
            If (Not (Me.cprsLaunchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent cprsLaunchCompleted(Me, New cprsLaunchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/cprsUserLookup", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function cprsUserLookup(ByVal target As String) As UserArray
            Dim results() As Object = Me.Invoke("cprsUserLookup", New Object() {target})
            Return CType(results(0),UserArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub cprsUserLookupAsync(ByVal target As String)
            Me.cprsUserLookupAsync(target, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub cprsUserLookupAsync(ByVal target As String, ByVal userState As Object)
            If (Me.cprsUserLookupOperationCompleted Is Nothing) Then
                Me.cprsUserLookupOperationCompleted = AddressOf Me.OncprsUserLookupOperationCompleted
            End If
            Me.InvokeAsync("cprsUserLookup", New Object() {target}, Me.cprsUserLookupOperationCompleted, userState)
        End Sub
        
        Private Sub OncprsUserLookupOperationCompleted(ByVal arg As Object)
            If (Not (Me.cprsUserLookupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent cprsUserLookupCompleted(Me, New cprsUserLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/match", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function match(ByVal target As String) As TaggedPatientArrays
            Dim results() As Object = Me.Invoke("match", New Object() {target})
            Return CType(results(0),TaggedPatientArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub matchAsync(ByVal target As String)
            Me.matchAsync(target, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub matchAsync(ByVal target As String, ByVal userState As Object)
            If (Me.matchOperationCompleted Is Nothing) Then
                Me.matchOperationCompleted = AddressOf Me.OnmatchOperationCompleted
            End If
            Me.InvokeAsync("match", New Object() {target}, Me.matchOperationCompleted, userState)
        End Sub
        
        Private Sub OnmatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.matchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent matchCompleted(Me, New matchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/select", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function [select](ByVal DFN As String) As PatientTO
            Dim results() As Object = Me.Invoke("select", New Object() {DFN})
            Return CType(results(0),PatientTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub selectAsync(ByVal DFN As String)
            Me.selectAsync(DFN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub selectAsync(ByVal DFN As String, ByVal userState As Object)
            If (Me.selectOperationCompleted Is Nothing) Then
                Me.selectOperationCompleted = AddressOf Me.OnselectOperationCompleted
            End If
            Me.InvokeAsync("select", New Object() {DFN}, Me.selectOperationCompleted, userState)
        End Sub
        
        Private Sub OnselectOperationCompleted(ByVal arg As Object)
            If (Not (Me.selectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent selectCompleted(Me, New selectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/setupMultiSiteQuery", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function setupMultiSiteQuery(ByVal appPwd As String) As SiteArray
            Dim results() As Object = Me.Invoke("setupMultiSiteQuery", New Object() {appPwd})
            Return CType(results(0),SiteArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub setupMultiSiteQueryAsync(ByVal appPwd As String)
            Me.setupMultiSiteQueryAsync(appPwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub setupMultiSiteQueryAsync(ByVal appPwd As String, ByVal userState As Object)
            If (Me.setupMultiSiteQueryOperationCompleted Is Nothing) Then
                Me.setupMultiSiteQueryOperationCompleted = AddressOf Me.OnsetupMultiSiteQueryOperationCompleted
            End If
            Me.InvokeAsync("setupMultiSiteQuery", New Object() {appPwd}, Me.setupMultiSiteQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnsetupMultiSiteQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.setupMultiSiteQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent setupMultiSiteQueryCompleted(Me, New setupMultiSiteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getConfidentiality", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getConfidentiality() As TaggedTextArray
            Dim results() As Object = Me.Invoke("getConfidentiality", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getConfidentialityAsync()
            Me.getConfidentialityAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getConfidentialityAsync(ByVal userState As Object)
            If (Me.getConfidentialityOperationCompleted Is Nothing) Then
                Me.getConfidentialityOperationCompleted = AddressOf Me.OngetConfidentialityOperationCompleted
            End If
            Me.InvokeAsync("getConfidentiality", New Object(-1) {}, Me.getConfidentialityOperationCompleted, userState)
        End Sub
        
        Private Sub OngetConfidentialityOperationCompleted(ByVal arg As Object)
            If (Not (Me.getConfidentialityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getConfidentialityCompleted(Me, New getConfidentialityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/issueConfidentialityBulletin", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function issueConfidentialityBulletin() As TaggedTextArray
            Dim results() As Object = Me.Invoke("issueConfidentialityBulletin", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub issueConfidentialityBulletinAsync()
            Me.issueConfidentialityBulletinAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub issueConfidentialityBulletinAsync(ByVal userState As Object)
            If (Me.issueConfidentialityBulletinOperationCompleted Is Nothing) Then
                Me.issueConfidentialityBulletinOperationCompleted = AddressOf Me.OnissueConfidentialityBulletinOperationCompleted
            End If
            Me.InvokeAsync("issueConfidentialityBulletin", New Object(-1) {}, Me.issueConfidentialityBulletinOperationCompleted, userState)
        End Sub
        
        Private Sub OnissueConfidentialityBulletinOperationCompleted(ByVal arg As Object)
            If (Not (Me.issueConfidentialityBulletinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent issueConfidentialityBulletinCompleted(Me, New issueConfidentialityBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getLatestVitalSigns", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLatestVitalSigns() As TaggedVitalSignArrays
            Dim results() As Object = Me.Invoke("getLatestVitalSigns", New Object(-1) {})
            Return CType(results(0),TaggedVitalSignArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLatestVitalSignsAsync()
            Me.getLatestVitalSignsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLatestVitalSignsAsync(ByVal userState As Object)
            If (Me.getLatestVitalSignsOperationCompleted Is Nothing) Then
                Me.getLatestVitalSignsOperationCompleted = AddressOf Me.OngetLatestVitalSignsOperationCompleted
            End If
            Me.InvokeAsync("getLatestVitalSigns", New Object(-1) {}, Me.getLatestVitalSignsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLatestVitalSignsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLatestVitalSignsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLatestVitalSignsCompleted(Me, New getLatestVitalSignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVitalSigns", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getVitalSigns() As TaggedVitalSignSetArrays
            Dim results() As Object = Me.Invoke("getVitalSigns", New Object(-1) {})
            Return CType(results(0),TaggedVitalSignSetArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getVitalSignsAsync()
            Me.getVitalSignsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getVitalSignsAsync(ByVal userState As Object)
            If (Me.getVitalSignsOperationCompleted Is Nothing) Then
                Me.getVitalSignsOperationCompleted = AddressOf Me.OngetVitalSignsOperationCompleted
            End If
            Me.InvokeAsync("getVitalSigns", New Object(-1) {}, Me.getVitalSignsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetVitalSignsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getVitalSignsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getVitalSignsCompleted(Me, New getVitalSignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAllergies", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllergies() As TaggedAllergyArrays
            Dim results() As Object = Me.Invoke("getAllergies", New Object(-1) {})
            Return CType(results(0),TaggedAllergyArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllergiesAsync()
            Me.getAllergiesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllergiesAsync(ByVal userState As Object)
            If (Me.getAllergiesOperationCompleted Is Nothing) Then
                Me.getAllergiesOperationCompleted = AddressOf Me.OngetAllergiesOperationCompleted
            End If
            Me.InvokeAsync("getAllergies", New Object(-1) {}, Me.getAllergiesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllergiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllergiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllergiesCompleted(Me, New getAllergiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAllergiesBySite", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllergiesBySite(ByVal siteCode As String) As TaggedAllergyArrays
            Dim results() As Object = Me.Invoke("getAllergiesBySite", New Object() {siteCode})
            Return CType(results(0),TaggedAllergyArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllergiesBySiteAsync(ByVal siteCode As String)
            Me.getAllergiesBySiteAsync(siteCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllergiesBySiteAsync(ByVal siteCode As String, ByVal userState As Object)
            If (Me.getAllergiesBySiteOperationCompleted Is Nothing) Then
                Me.getAllergiesBySiteOperationCompleted = AddressOf Me.OngetAllergiesBySiteOperationCompleted
            End If
            Me.InvokeAsync("getAllergiesBySite", New Object() {siteCode}, Me.getAllergiesBySiteOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllergiesBySiteOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllergiesBySiteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllergiesBySiteCompleted(Me, New getAllergiesBySiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getRadiologyReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getRadiologyReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedRadiologyReportArrays
            Dim results() As Object = Me.Invoke("getRadiologyReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedRadiologyReportArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getRadiologyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getRadiologyReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getRadiologyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getRadiologyReportsOperationCompleted Is Nothing) Then
                Me.getRadiologyReportsOperationCompleted = AddressOf Me.OngetRadiologyReportsOperationCompleted
            End If
            Me.InvokeAsync("getRadiologyReports", New Object() {fromDate, toDate, nrpts}, Me.getRadiologyReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetRadiologyReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getRadiologyReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getRadiologyReportsCompleted(Me, New getRadiologyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getRadiologyReportsBySite", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getRadiologyReportsBySite(ByVal fromDate As String, ByVal toDate As String, ByVal siteCode As String) As TaggedRadiologyReportArrays
            Dim results() As Object = Me.Invoke("getRadiologyReportsBySite", New Object() {fromDate, toDate, siteCode})
            Return CType(results(0),TaggedRadiologyReportArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getRadiologyReportsBySiteAsync(ByVal fromDate As String, ByVal toDate As String, ByVal siteCode As String)
            Me.getRadiologyReportsBySiteAsync(fromDate, toDate, siteCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getRadiologyReportsBySiteAsync(ByVal fromDate As String, ByVal toDate As String, ByVal siteCode As String, ByVal userState As Object)
            If (Me.getRadiologyReportsBySiteOperationCompleted Is Nothing) Then
                Me.getRadiologyReportsBySiteOperationCompleted = AddressOf Me.OngetRadiologyReportsBySiteOperationCompleted
            End If
            Me.InvokeAsync("getRadiologyReportsBySite", New Object() {fromDate, toDate, siteCode}, Me.getRadiologyReportsBySiteOperationCompleted, userState)
        End Sub
        
        Private Sub OngetRadiologyReportsBySiteOperationCompleted(ByVal arg As Object)
            If (Not (Me.getRadiologyReportsBySiteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getRadiologyReportsBySiteCompleted(Me, New getRadiologyReportsBySiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSurgeryReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSurgeryReports() As TaggedSurgeryReportArrays
            Dim results() As Object = Me.Invoke("getSurgeryReports", New Object(-1) {})
            Return CType(results(0),TaggedSurgeryReportArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSurgeryReportsAsync()
            Me.getSurgeryReportsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSurgeryReportsAsync(ByVal userState As Object)
            If (Me.getSurgeryReportsOperationCompleted Is Nothing) Then
                Me.getSurgeryReportsOperationCompleted = AddressOf Me.OngetSurgeryReportsOperationCompleted
            End If
            Me.InvokeAsync("getSurgeryReports", New Object(-1) {}, Me.getSurgeryReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSurgeryReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSurgeryReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSurgeryReportsCompleted(Me, New getSurgeryReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSurgeryReportsBySite", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSurgeryReportsBySite(ByVal siteCode As String) As TaggedSurgeryReportArrays
            Dim results() As Object = Me.Invoke("getSurgeryReportsBySite", New Object() {siteCode})
            Return CType(results(0),TaggedSurgeryReportArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSurgeryReportsBySiteAsync(ByVal siteCode As String)
            Me.getSurgeryReportsBySiteAsync(siteCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSurgeryReportsBySiteAsync(ByVal siteCode As String, ByVal userState As Object)
            If (Me.getSurgeryReportsBySiteOperationCompleted Is Nothing) Then
                Me.getSurgeryReportsBySiteOperationCompleted = AddressOf Me.OngetSurgeryReportsBySiteOperationCompleted
            End If
            Me.InvokeAsync("getSurgeryReportsBySite", New Object() {siteCode}, Me.getSurgeryReportsBySiteOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSurgeryReportsBySiteOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSurgeryReportsBySiteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSurgeryReportsBySiteCompleted(Me, New getSurgeryReportsBySiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSurgeryReportText", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSurgeryReportText(ByVal siteId As String, ByVal rptId As String) As TextTO
            Dim results() As Object = Me.Invoke("getSurgeryReportText", New Object() {siteId, rptId})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSurgeryReportTextAsync(ByVal siteId As String, ByVal rptId As String)
            Me.getSurgeryReportTextAsync(siteId, rptId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSurgeryReportTextAsync(ByVal siteId As String, ByVal rptId As String, ByVal userState As Object)
            If (Me.getSurgeryReportTextOperationCompleted Is Nothing) Then
                Me.getSurgeryReportTextOperationCompleted = AddressOf Me.OngetSurgeryReportTextOperationCompleted
            End If
            Me.InvokeAsync("getSurgeryReportText", New Object() {siteId, rptId}, Me.getSurgeryReportTextOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSurgeryReportTextOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSurgeryReportTextCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSurgeryReportTextCompleted(Me, New getSurgeryReportTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSurgeryReportsWithText", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSurgeryReportsWithText() As TaggedSurgeryReportArrays
            Dim results() As Object = Me.Invoke("getSurgeryReportsWithText", New Object(-1) {})
            Return CType(results(0),TaggedSurgeryReportArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSurgeryReportsWithTextAsync()
            Me.getSurgeryReportsWithTextAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSurgeryReportsWithTextAsync(ByVal userState As Object)
            If (Me.getSurgeryReportsWithTextOperationCompleted Is Nothing) Then
                Me.getSurgeryReportsWithTextOperationCompleted = AddressOf Me.OngetSurgeryReportsWithTextOperationCompleted
            End If
            Me.InvokeAsync("getSurgeryReportsWithText", New Object(-1) {}, Me.getSurgeryReportsWithTextOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSurgeryReportsWithTextOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSurgeryReportsWithTextCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSurgeryReportsWithTextCompleted(Me, New getSurgeryReportsWithTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getProblemList", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getProblemList(ByVal type As String) As TaggedProblemArrays
            Dim results() As Object = Me.Invoke("getProblemList", New Object() {type})
            Return CType(results(0),TaggedProblemArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProblemListAsync(ByVal type As String)
            Me.getProblemListAsync(type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProblemListAsync(ByVal type As String, ByVal userState As Object)
            If (Me.getProblemListOperationCompleted Is Nothing) Then
                Me.getProblemListOperationCompleted = AddressOf Me.OngetProblemListOperationCompleted
            End If
            Me.InvokeAsync("getProblemList", New Object() {type}, Me.getProblemListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProblemListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProblemListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProblemListCompleted(Me, New getProblemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOutpatientMeds", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getOutpatientMeds() As TaggedMedicationArrays
            Dim results() As Object = Me.Invoke("getOutpatientMeds", New Object(-1) {})
            Return CType(results(0),TaggedMedicationArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOutpatientMedsAsync()
            Me.getOutpatientMedsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOutpatientMedsAsync(ByVal userState As Object)
            If (Me.getOutpatientMedsOperationCompleted Is Nothing) Then
                Me.getOutpatientMedsOperationCompleted = AddressOf Me.OngetOutpatientMedsOperationCompleted
            End If
            Me.InvokeAsync("getOutpatientMeds", New Object(-1) {}, Me.getOutpatientMedsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOutpatientMedsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOutpatientMedsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOutpatientMedsCompleted(Me, New getOutpatientMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getIvMeds", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getIvMeds() As TaggedMedicationArrays
            Dim results() As Object = Me.Invoke("getIvMeds", New Object(-1) {})
            Return CType(results(0),TaggedMedicationArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getIvMedsAsync()
            Me.getIvMedsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getIvMedsAsync(ByVal userState As Object)
            If (Me.getIvMedsOperationCompleted Is Nothing) Then
                Me.getIvMedsOperationCompleted = AddressOf Me.OngetIvMedsOperationCompleted
            End If
            Me.InvokeAsync("getIvMeds", New Object(-1) {}, Me.getIvMedsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetIvMedsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getIvMedsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getIvMedsCompleted(Me, New getIvMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getImoMeds", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getImoMeds() As TaggedMedicationArrays
            Dim results() As Object = Me.Invoke("getImoMeds", New Object(-1) {})
            Return CType(results(0),TaggedMedicationArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getImoMedsAsync()
            Me.getImoMedsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getImoMedsAsync(ByVal userState As Object)
            If (Me.getImoMedsOperationCompleted Is Nothing) Then
                Me.getImoMedsOperationCompleted = AddressOf Me.OngetImoMedsOperationCompleted
            End If
            Me.InvokeAsync("getImoMeds", New Object(-1) {}, Me.getImoMedsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetImoMedsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getImoMedsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getImoMedsCompleted(Me, New getImoMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getUnitDoseMeds", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUnitDoseMeds() As TaggedMedicationArrays
            Dim results() As Object = Me.Invoke("getUnitDoseMeds", New Object(-1) {})
            Return CType(results(0),TaggedMedicationArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUnitDoseMedsAsync()
            Me.getUnitDoseMedsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUnitDoseMedsAsync(ByVal userState As Object)
            If (Me.getUnitDoseMedsOperationCompleted Is Nothing) Then
                Me.getUnitDoseMedsOperationCompleted = AddressOf Me.OngetUnitDoseMedsOperationCompleted
            End If
            Me.InvokeAsync("getUnitDoseMeds", New Object(-1) {}, Me.getUnitDoseMedsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUnitDoseMedsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUnitDoseMedsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUnitDoseMedsCompleted(Me, New getUnitDoseMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOtherMeds", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getOtherMeds() As TaggedMedicationArrays
            Dim results() As Object = Me.Invoke("getOtherMeds", New Object(-1) {})
            Return CType(results(0),TaggedMedicationArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOtherMedsAsync()
            Me.getOtherMedsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOtherMedsAsync(ByVal userState As Object)
            If (Me.getOtherMedsOperationCompleted Is Nothing) Then
                Me.getOtherMedsOperationCompleted = AddressOf Me.OngetOtherMedsOperationCompleted
            End If
            Me.InvokeAsync("getOtherMeds", New Object(-1) {}, Me.getOtherMedsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOtherMedsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOtherMedsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOtherMedsCompleted(Me, New getOtherMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAllMeds", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllMeds() As TaggedMedicationArrays
            Dim results() As Object = Me.Invoke("getAllMeds", New Object(-1) {})
            Return CType(results(0),TaggedMedicationArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllMedsAsync()
            Me.getAllMedsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllMedsAsync(ByVal userState As Object)
            If (Me.getAllMedsOperationCompleted Is Nothing) Then
                Me.getAllMedsOperationCompleted = AddressOf Me.OngetAllMedsOperationCompleted
            End If
            Me.InvokeAsync("getAllMeds", New Object(-1) {}, Me.getAllMedsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllMedsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllMedsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllMedsCompleted(Me, New getAllMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMedicationDetail", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMedicationDetail(ByVal siteId As String, ByVal medId As String) As TextTO
            Dim results() As Object = Me.Invoke("getMedicationDetail", New Object() {siteId, medId})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMedicationDetailAsync(ByVal siteId As String, ByVal medId As String)
            Me.getMedicationDetailAsync(siteId, medId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMedicationDetailAsync(ByVal siteId As String, ByVal medId As String, ByVal userState As Object)
            If (Me.getMedicationDetailOperationCompleted Is Nothing) Then
                Me.getMedicationDetailOperationCompleted = AddressOf Me.OngetMedicationDetailOperationCompleted
            End If
            Me.InvokeAsync("getMedicationDetail", New Object() {siteId, medId}, Me.getMedicationDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMedicationDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMedicationDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMedicationDetailCompleted(Me, New getMedicationDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSignedNotes", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSignedNotes(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer) As TaggedNoteArrays
            Dim results() As Object = Me.Invoke("getSignedNotes", New Object() {fromDate, toDate, nNotes})
            Return CType(results(0),TaggedNoteArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSignedNotesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer)
            Me.getSignedNotesAsync(fromDate, toDate, nNotes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSignedNotesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer, ByVal userState As Object)
            If (Me.getSignedNotesOperationCompleted Is Nothing) Then
                Me.getSignedNotesOperationCompleted = AddressOf Me.OngetSignedNotesOperationCompleted
            End If
            Me.InvokeAsync("getSignedNotes", New Object() {fromDate, toDate, nNotes}, Me.getSignedNotesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSignedNotesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSignedNotesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSignedNotesCompleted(Me, New getSignedNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getUnsignedNotes", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUnsignedNotes(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer) As TaggedNoteArrays
            Dim results() As Object = Me.Invoke("getUnsignedNotes", New Object() {fromDate, toDate, nNotes})
            Return CType(results(0),TaggedNoteArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUnsignedNotesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer)
            Me.getUnsignedNotesAsync(fromDate, toDate, nNotes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUnsignedNotesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer, ByVal userState As Object)
            If (Me.getUnsignedNotesOperationCompleted Is Nothing) Then
                Me.getUnsignedNotesOperationCompleted = AddressOf Me.OngetUnsignedNotesOperationCompleted
            End If
            Me.InvokeAsync("getUnsignedNotes", New Object() {fromDate, toDate, nNotes}, Me.getUnsignedNotesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUnsignedNotesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUnsignedNotesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUnsignedNotesCompleted(Me, New getUnsignedNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getUncosignedNotes", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUncosignedNotes(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer) As TaggedNoteArrays
            Dim results() As Object = Me.Invoke("getUncosignedNotes", New Object() {fromDate, toDate, nNotes})
            Return CType(results(0),TaggedNoteArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUncosignedNotesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer)
            Me.getUncosignedNotesAsync(fromDate, toDate, nNotes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUncosignedNotesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer, ByVal userState As Object)
            If (Me.getUncosignedNotesOperationCompleted Is Nothing) Then
                Me.getUncosignedNotesOperationCompleted = AddressOf Me.OngetUncosignedNotesOperationCompleted
            End If
            Me.InvokeAsync("getUncosignedNotes", New Object() {fromDate, toDate, nNotes}, Me.getUncosignedNotesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUncosignedNotesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUncosignedNotesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUncosignedNotesCompleted(Me, New getUncosignedNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getNote", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getNote(ByVal siteId As String, ByVal noteId As String) As TextTO
            Dim results() As Object = Me.Invoke("getNote", New Object() {siteId, noteId})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getNoteAsync(ByVal siteId As String, ByVal noteId As String)
            Me.getNoteAsync(siteId, noteId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getNoteAsync(ByVal siteId As String, ByVal noteId As String, ByVal userState As Object)
            If (Me.getNoteOperationCompleted Is Nothing) Then
                Me.getNoteOperationCompleted = AddressOf Me.OngetNoteOperationCompleted
            End If
            Me.InvokeAsync("getNote", New Object() {siteId, noteId}, Me.getNoteOperationCompleted, userState)
        End Sub
        
        Private Sub OngetNoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.getNoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getNoteCompleted(Me, New getNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getNotesWithText", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getNotesWithText(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer) As TaggedNoteArrays
            Dim results() As Object = Me.Invoke("getNotesWithText", New Object() {fromDate, toDate, nNotes})
            Return CType(results(0),TaggedNoteArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getNotesWithTextAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer)
            Me.getNotesWithTextAsync(fromDate, toDate, nNotes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getNotesWithTextAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer, ByVal userState As Object)
            If (Me.getNotesWithTextOperationCompleted Is Nothing) Then
                Me.getNotesWithTextOperationCompleted = AddressOf Me.OngetNotesWithTextOperationCompleted
            End If
            Me.InvokeAsync("getNotesWithText", New Object() {fromDate, toDate, nNotes}, Me.getNotesWithTextOperationCompleted, userState)
        End Sub
        
        Private Sub OngetNotesWithTextOperationCompleted(ByVal arg As Object)
            If (Not (Me.getNotesWithTextCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getNotesWithTextCompleted(Me, New getNotesWithTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getDischargeSummaries", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDischargeSummaries(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer) As TaggedNoteArrays
            Dim results() As Object = Me.Invoke("getDischargeSummaries", New Object() {fromDate, toDate, nNotes})
            Return CType(results(0),TaggedNoteArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDischargeSummariesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer)
            Me.getDischargeSummariesAsync(fromDate, toDate, nNotes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDischargeSummariesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nNotes As Integer, ByVal userState As Object)
            If (Me.getDischargeSummariesOperationCompleted Is Nothing) Then
                Me.getDischargeSummariesOperationCompleted = AddressOf Me.OngetDischargeSummariesOperationCompleted
            End If
            Me.InvokeAsync("getDischargeSummaries", New Object() {fromDate, toDate, nNotes}, Me.getDischargeSummariesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDischargeSummariesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDischargeSummariesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDischargeSummariesCompleted(Me, New getDischargeSummariesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getConsultsForPatient", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getConsultsForPatient() As TaggedConsultArrays
            Dim results() As Object = Me.Invoke("getConsultsForPatient", New Object(-1) {})
            Return CType(results(0),TaggedConsultArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getConsultsForPatientAsync()
            Me.getConsultsForPatientAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getConsultsForPatientAsync(ByVal userState As Object)
            If (Me.getConsultsForPatientOperationCompleted Is Nothing) Then
                Me.getConsultsForPatientOperationCompleted = AddressOf Me.OngetConsultsForPatientOperationCompleted
            End If
            Me.InvokeAsync("getConsultsForPatient", New Object(-1) {}, Me.getConsultsForPatientOperationCompleted, userState)
        End Sub
        
        Private Sub OngetConsultsForPatientOperationCompleted(ByVal arg As Object)
            If (Not (Me.getConsultsForPatientCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getConsultsForPatientCompleted(Me, New getConsultsForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAppointments", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAppointments() As TaggedAppointmentArrays
            Dim results() As Object = Me.Invoke("getAppointments", New Object(-1) {})
            Return CType(results(0),TaggedAppointmentArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAppointmentsAsync()
            Me.getAppointmentsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAppointmentsAsync(ByVal userState As Object)
            If (Me.getAppointmentsOperationCompleted Is Nothing) Then
                Me.getAppointmentsOperationCompleted = AddressOf Me.OngetAppointmentsOperationCompleted
            End If
            Me.InvokeAsync("getAppointments", New Object(-1) {}, Me.getAppointmentsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAppointmentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAppointmentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAppointmentsCompleted(Me, New getAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMentalHealthAppointments", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMentalHealthAppointments() As TaggedAppointmentArrays
            Dim results() As Object = Me.Invoke("getMentalHealthAppointments", New Object(-1) {})
            Return CType(results(0),TaggedAppointmentArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthAppointmentsAsync()
            Me.getMentalHealthAppointmentsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthAppointmentsAsync(ByVal userState As Object)
            If (Me.getMentalHealthAppointmentsOperationCompleted Is Nothing) Then
                Me.getMentalHealthAppointmentsOperationCompleted = AddressOf Me.OngetMentalHealthAppointmentsOperationCompleted
            End If
            Me.InvokeAsync("getMentalHealthAppointments", New Object(-1) {}, Me.getMentalHealthAppointmentsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMentalHealthAppointmentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMentalHealthAppointmentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMentalHealthAppointmentsCompleted(Me, New getMentalHealthAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMentalHealthVisits", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMentalHealthVisits() As TaggedVisitArrays
            Dim results() As Object = Me.Invoke("getMentalHealthVisits", New Object(-1) {})
            Return CType(results(0),TaggedVisitArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthVisitsAsync()
            Me.getMentalHealthVisitsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMentalHealthVisitsAsync(ByVal userState As Object)
            If (Me.getMentalHealthVisitsOperationCompleted Is Nothing) Then
                Me.getMentalHealthVisitsOperationCompleted = AddressOf Me.OngetMentalHealthVisitsOperationCompleted
            End If
            Me.InvokeAsync("getMentalHealthVisits", New Object(-1) {}, Me.getMentalHealthVisitsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMentalHealthVisitsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMentalHealthVisitsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMentalHealthVisitsCompleted(Me, New getMentalHealthVisitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAppointmentText", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAppointmentText(ByVal siteId As String, ByVal apptId As String) As TextTO
            Dim results() As Object = Me.Invoke("getAppointmentText", New Object() {siteId, apptId})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAppointmentTextAsync(ByVal siteId As String, ByVal apptId As String)
            Me.getAppointmentTextAsync(siteId, apptId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAppointmentTextAsync(ByVal siteId As String, ByVal apptId As String, ByVal userState As Object)
            If (Me.getAppointmentTextOperationCompleted Is Nothing) Then
                Me.getAppointmentTextOperationCompleted = AddressOf Me.OngetAppointmentTextOperationCompleted
            End If
            Me.InvokeAsync("getAppointmentText", New Object() {siteId, apptId}, Me.getAppointmentTextOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAppointmentTextOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAppointmentTextCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAppointmentTextCompleted(Me, New getAppointmentTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getClinicalWarnings", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getClinicalWarnings(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getClinicalWarnings", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getClinicalWarningsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getClinicalWarningsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getClinicalWarningsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getClinicalWarningsOperationCompleted Is Nothing) Then
                Me.getClinicalWarningsOperationCompleted = AddressOf Me.OngetClinicalWarningsOperationCompleted
            End If
            Me.InvokeAsync("getClinicalWarnings", New Object() {fromDate, toDate, nrpts}, Me.getClinicalWarningsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetClinicalWarningsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getClinicalWarningsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getClinicalWarningsCompleted(Me, New getClinicalWarningsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAdvanceDirectives", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAdvanceDirectives(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getAdvanceDirectives", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAdvanceDirectivesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getAdvanceDirectivesAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAdvanceDirectivesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getAdvanceDirectivesOperationCompleted Is Nothing) Then
                Me.getAdvanceDirectivesOperationCompleted = AddressOf Me.OngetAdvanceDirectivesOperationCompleted
            End If
            Me.InvokeAsync("getAdvanceDirectives", New Object() {fromDate, toDate, nrpts}, Me.getAdvanceDirectivesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAdvanceDirectivesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAdvanceDirectivesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAdvanceDirectivesCompleted(Me, New getAdvanceDirectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCrisisNotes", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCrisisNotes(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getCrisisNotes", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCrisisNotesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getCrisisNotesAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCrisisNotesAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getCrisisNotesOperationCompleted Is Nothing) Then
                Me.getCrisisNotesOperationCompleted = AddressOf Me.OngetCrisisNotesOperationCompleted
            End If
            Me.InvokeAsync("getCrisisNotes", New Object() {fromDate, toDate, nrpts}, Me.getCrisisNotesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCrisisNotesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCrisisNotesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCrisisNotesCompleted(Me, New getCrisisNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getImmunizations", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getImmunizations(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getImmunizations", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getImmunizationsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getImmunizationsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getImmunizationsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getImmunizationsOperationCompleted Is Nothing) Then
                Me.getImmunizationsOperationCompleted = AddressOf Me.OngetImmunizationsOperationCompleted
            End If
            Me.InvokeAsync("getImmunizations", New Object() {fromDate, toDate, nrpts}, Me.getImmunizationsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetImmunizationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getImmunizationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getImmunizationsCompleted(Me, New getImmunizationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOutpatientRxProfile", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getOutpatientRxProfile() As TaggedTextArray
            Dim results() As Object = Me.Invoke("getOutpatientRxProfile", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOutpatientRxProfileAsync()
            Me.getOutpatientRxProfileAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOutpatientRxProfileAsync(ByVal userState As Object)
            If (Me.getOutpatientRxProfileOperationCompleted Is Nothing) Then
                Me.getOutpatientRxProfileOperationCompleted = AddressOf Me.OngetOutpatientRxProfileOperationCompleted
            End If
            Me.InvokeAsync("getOutpatientRxProfile", New Object(-1) {}, Me.getOutpatientRxProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOutpatientRxProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOutpatientRxProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOutpatientRxProfileCompleted(Me, New getOutpatientRxProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMedsAdminHx", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMedsAdminHx(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getMedsAdminHx", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMedsAdminHxAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getMedsAdminHxAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMedsAdminHxAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getMedsAdminHxOperationCompleted Is Nothing) Then
                Me.getMedsAdminHxOperationCompleted = AddressOf Me.OngetMedsAdminHxOperationCompleted
            End If
            Me.InvokeAsync("getMedsAdminHx", New Object() {fromDate, toDate, nrpts}, Me.getMedsAdminHxOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMedsAdminHxOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMedsAdminHxCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMedsAdminHxCompleted(Me, New getMedsAdminHxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMedsAdminLog", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMedsAdminLog(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getMedsAdminLog", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMedsAdminLogAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getMedsAdminLogAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMedsAdminLogAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getMedsAdminLogOperationCompleted Is Nothing) Then
                Me.getMedsAdminLogOperationCompleted = AddressOf Me.OngetMedsAdminLogOperationCompleted
            End If
            Me.InvokeAsync("getMedsAdminLog", New Object() {fromDate, toDate, nrpts}, Me.getMedsAdminLogOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMedsAdminLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMedsAdminLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMedsAdminLogCompleted(Me, New getMedsAdminLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getChemHemReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getChemHemReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedChemHemRptArrays
            Dim results() As Object = Me.Invoke("getChemHemReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedChemHemRptArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getChemHemReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getChemHemReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getChemHemReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getChemHemReportsOperationCompleted Is Nothing) Then
                Me.getChemHemReportsOperationCompleted = AddressOf Me.OngetChemHemReportsOperationCompleted
            End If
            Me.InvokeAsync("getChemHemReports", New Object() {fromDate, toDate, nrpts}, Me.getChemHemReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetChemHemReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getChemHemReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getChemHemReportsCompleted(Me, New getChemHemReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getChemHemReportsSimple", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getChemHemReportsSimple(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedChemHemRptArrays
            Dim results() As Object = Me.Invoke("getChemHemReportsSimple", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedChemHemRptArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getChemHemReportsSimpleAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getChemHemReportsSimpleAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getChemHemReportsSimpleAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getChemHemReportsSimpleOperationCompleted Is Nothing) Then
                Me.getChemHemReportsSimpleOperationCompleted = AddressOf Me.OngetChemHemReportsSimpleOperationCompleted
            End If
            Me.InvokeAsync("getChemHemReportsSimple", New Object() {fromDate, toDate, nrpts}, Me.getChemHemReportsSimpleOperationCompleted, userState)
        End Sub
        
        Private Sub OngetChemHemReportsSimpleOperationCompleted(ByVal arg As Object)
            If (Not (Me.getChemHemReportsSimpleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getChemHemReportsSimpleCompleted(Me, New getChemHemReportsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCytologyReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCytologyReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedCytologyRptArrays
            Dim results() As Object = Me.Invoke("getCytologyReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedCytologyRptArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCytologyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getCytologyReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCytologyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getCytologyReportsOperationCompleted Is Nothing) Then
                Me.getCytologyReportsOperationCompleted = AddressOf Me.OngetCytologyReportsOperationCompleted
            End If
            Me.InvokeAsync("getCytologyReports", New Object() {fromDate, toDate, nrpts}, Me.getCytologyReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCytologyReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCytologyReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCytologyReportsCompleted(Me, New getCytologyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMicrobiologyReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMicrobiologyReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedMicrobiologyRptArrays
            Dim results() As Object = Me.Invoke("getMicrobiologyReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedMicrobiologyRptArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMicrobiologyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getMicrobiologyReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMicrobiologyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getMicrobiologyReportsOperationCompleted Is Nothing) Then
                Me.getMicrobiologyReportsOperationCompleted = AddressOf Me.OngetMicrobiologyReportsOperationCompleted
            End If
            Me.InvokeAsync("getMicrobiologyReports", New Object() {fromDate, toDate, nrpts}, Me.getMicrobiologyReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMicrobiologyReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMicrobiologyReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMicrobiologyReportsCompleted(Me, New getMicrobiologyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSurgicalPathologyReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getSurgicalPathologyReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedSurgicalPathologyRptArrays
            Dim results() As Object = Me.Invoke("getSurgicalPathologyReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedSurgicalPathologyRptArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getSurgicalPathologyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getSurgicalPathologyReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSurgicalPathologyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getSurgicalPathologyReportsOperationCompleted Is Nothing) Then
                Me.getSurgicalPathologyReportsOperationCompleted = AddressOf Me.OngetSurgicalPathologyReportsOperationCompleted
            End If
            Me.InvokeAsync("getSurgicalPathologyReports", New Object() {fromDate, toDate, nrpts}, Me.getSurgicalPathologyReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSurgicalPathologyReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSurgicalPathologyReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSurgicalPathologyReportsCompleted(Me, New getSurgicalPathologyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getBloodAvailabilityReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getBloodAvailabilityReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getBloodAvailabilityReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBloodAvailabilityReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getBloodAvailabilityReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBloodAvailabilityReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getBloodAvailabilityReportsOperationCompleted Is Nothing) Then
                Me.getBloodAvailabilityReportsOperationCompleted = AddressOf Me.OngetBloodAvailabilityReportsOperationCompleted
            End If
            Me.InvokeAsync("getBloodAvailabilityReports", New Object() {fromDate, toDate, nrpts}, Me.getBloodAvailabilityReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBloodAvailabilityReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBloodAvailabilityReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBloodAvailabilityReportsCompleted(Me, New getBloodAvailabilityReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getBloodTransfusionReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getBloodTransfusionReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getBloodTransfusionReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBloodTransfusionReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getBloodTransfusionReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBloodTransfusionReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getBloodTransfusionReportsOperationCompleted Is Nothing) Then
                Me.getBloodTransfusionReportsOperationCompleted = AddressOf Me.OngetBloodTransfusionReportsOperationCompleted
            End If
            Me.InvokeAsync("getBloodTransfusionReports", New Object() {fromDate, toDate, nrpts}, Me.getBloodTransfusionReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBloodTransfusionReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBloodTransfusionReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBloodTransfusionReportsCompleted(Me, New getBloodTransfusionReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getBloodBankReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getBloodBankReports() As TaggedTextArray
            Dim results() As Object = Me.Invoke("getBloodBankReports", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBloodBankReportsAsync()
            Me.getBloodBankReportsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBloodBankReportsAsync(ByVal userState As Object)
            If (Me.getBloodBankReportsOperationCompleted Is Nothing) Then
                Me.getBloodBankReportsOperationCompleted = AddressOf Me.OngetBloodBankReportsOperationCompleted
            End If
            Me.InvokeAsync("getBloodBankReports", New Object(-1) {}, Me.getBloodBankReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBloodBankReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBloodBankReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBloodBankReportsCompleted(Me, New getBloodBankReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getElectronMicroscopyReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getElectronMicroscopyReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getElectronMicroscopyReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getElectronMicroscopyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getElectronMicroscopyReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getElectronMicroscopyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getElectronMicroscopyReportsOperationCompleted Is Nothing) Then
                Me.getElectronMicroscopyReportsOperationCompleted = AddressOf Me.OngetElectronMicroscopyReportsOperationCompleted
            End If
            Me.InvokeAsync("getElectronMicroscopyReports", New Object() {fromDate, toDate, nrpts}, Me.getElectronMicroscopyReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetElectronMicroscopyReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getElectronMicroscopyReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getElectronMicroscopyReportsCompleted(Me, New getElectronMicroscopyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCytopathologyReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCytopathologyReports() As TaggedTextArray
            Dim results() As Object = Me.Invoke("getCytopathologyReports", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCytopathologyReportsAsync()
            Me.getCytopathologyReportsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCytopathologyReportsAsync(ByVal userState As Object)
            If (Me.getCytopathologyReportsOperationCompleted Is Nothing) Then
                Me.getCytopathologyReportsOperationCompleted = AddressOf Me.OngetCytopathologyReportsOperationCompleted
            End If
            Me.InvokeAsync("getCytopathologyReports", New Object(-1) {}, Me.getCytopathologyReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCytopathologyReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCytopathologyReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCytopathologyReportsCompleted(Me, New getCytopathologyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAutopsyReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAutopsyReports() As TaggedTextArray
            Dim results() As Object = Me.Invoke("getAutopsyReports", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAutopsyReportsAsync()
            Me.getAutopsyReportsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAutopsyReportsAsync(ByVal userState As Object)
            If (Me.getAutopsyReportsOperationCompleted Is Nothing) Then
                Me.getAutopsyReportsOperationCompleted = AddressOf Me.OngetAutopsyReportsOperationCompleted
            End If
            Me.InvokeAsync("getAutopsyReports", New Object(-1) {}, Me.getAutopsyReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAutopsyReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAutopsyReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAutopsyReportsCompleted(Me, New getAutopsyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOutpatientEncounterReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getOutpatientEncounterReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getOutpatientEncounterReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getOutpatientEncounterReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getOutpatientEncounterReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getOutpatientEncounterReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getOutpatientEncounterReportsOperationCompleted Is Nothing) Then
                Me.getOutpatientEncounterReportsOperationCompleted = AddressOf Me.OngetOutpatientEncounterReportsOperationCompleted
            End If
            Me.InvokeAsync("getOutpatientEncounterReports", New Object() {fromDate, toDate, nrpts}, Me.getOutpatientEncounterReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetOutpatientEncounterReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getOutpatientEncounterReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getOutpatientEncounterReportsCompleted(Me, New getOutpatientEncounterReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAdmissionsReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAdmissionsReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getAdmissionsReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAdmissionsReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getAdmissionsReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAdmissionsReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getAdmissionsReportsOperationCompleted Is Nothing) Then
                Me.getAdmissionsReportsOperationCompleted = AddressOf Me.OngetAdmissionsReportsOperationCompleted
            End If
            Me.InvokeAsync("getAdmissionsReports", New Object() {fromDate, toDate, nrpts}, Me.getAdmissionsReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAdmissionsReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAdmissionsReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAdmissionsReportsCompleted(Me, New getAdmissionsReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getExpandedAdtReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getExpandedAdtReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getExpandedAdtReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getExpandedAdtReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getExpandedAdtReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getExpandedAdtReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getExpandedAdtReportsOperationCompleted Is Nothing) Then
                Me.getExpandedAdtReportsOperationCompleted = AddressOf Me.OngetExpandedAdtReportsOperationCompleted
            End If
            Me.InvokeAsync("getExpandedAdtReports", New Object() {fromDate, toDate, nrpts}, Me.getExpandedAdtReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetExpandedAdtReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getExpandedAdtReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getExpandedAdtReportsCompleted(Me, New getExpandedAdtReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getDischargeDiagnosisReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDischargeDiagnosisReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getDischargeDiagnosisReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDischargeDiagnosisReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getDischargeDiagnosisReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDischargeDiagnosisReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getDischargeDiagnosisReportsOperationCompleted Is Nothing) Then
                Me.getDischargeDiagnosisReportsOperationCompleted = AddressOf Me.OngetDischargeDiagnosisReportsOperationCompleted
            End If
            Me.InvokeAsync("getDischargeDiagnosisReports", New Object() {fromDate, toDate, nrpts}, Me.getDischargeDiagnosisReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDischargeDiagnosisReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDischargeDiagnosisReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDischargeDiagnosisReportsCompleted(Me, New getDischargeDiagnosisReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getDischargesReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDischargesReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getDischargesReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDischargesReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getDischargesReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDischargesReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getDischargesReportsOperationCompleted Is Nothing) Then
                Me.getDischargesReportsOperationCompleted = AddressOf Me.OngetDischargesReportsOperationCompleted
            End If
            Me.InvokeAsync("getDischargesReports", New Object() {fromDate, toDate, nrpts}, Me.getDischargesReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDischargesReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDischargesReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDischargesReportsCompleted(Me, New getDischargesReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getTransfersReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getTransfersReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getTransfersReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTransfersReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getTransfersReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTransfersReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getTransfersReportsOperationCompleted Is Nothing) Then
                Me.getTransfersReportsOperationCompleted = AddressOf Me.OngetTransfersReportsOperationCompleted
            End If
            Me.InvokeAsync("getTransfersReports", New Object() {fromDate, toDate, nrpts}, Me.getTransfersReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTransfersReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTransfersReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTransfersReportsCompleted(Me, New getTransfersReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getFutureClinicVisitsReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getFutureClinicVisitsReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getFutureClinicVisitsReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getFutureClinicVisitsReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getFutureClinicVisitsReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getFutureClinicVisitsReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getFutureClinicVisitsReportsOperationCompleted Is Nothing) Then
                Me.getFutureClinicVisitsReportsOperationCompleted = AddressOf Me.OngetFutureClinicVisitsReportsOperationCompleted
            End If
            Me.InvokeAsync("getFutureClinicVisitsReports", New Object() {fromDate, toDate, nrpts}, Me.getFutureClinicVisitsReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetFutureClinicVisitsReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getFutureClinicVisitsReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getFutureClinicVisitsReportsCompleted(Me, New getFutureClinicVisitsReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPastClinicVisitsReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPastClinicVisitsReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getPastClinicVisitsReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPastClinicVisitsReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getPastClinicVisitsReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPastClinicVisitsReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getPastClinicVisitsReportsOperationCompleted Is Nothing) Then
                Me.getPastClinicVisitsReportsOperationCompleted = AddressOf Me.OngetPastClinicVisitsReportsOperationCompleted
            End If
            Me.InvokeAsync("getPastClinicVisitsReports", New Object() {fromDate, toDate, nrpts}, Me.getPastClinicVisitsReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPastClinicVisitsReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPastClinicVisitsReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPastClinicVisitsReportsCompleted(Me, New getPastClinicVisitsReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getTreatingSpecialtyReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getTreatingSpecialtyReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getTreatingSpecialtyReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTreatingSpecialtyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getTreatingSpecialtyReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTreatingSpecialtyReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getTreatingSpecialtyReportsOperationCompleted Is Nothing) Then
                Me.getTreatingSpecialtyReportsOperationCompleted = AddressOf Me.OngetTreatingSpecialtyReportsOperationCompleted
            End If
            Me.InvokeAsync("getTreatingSpecialtyReports", New Object() {fromDate, toDate, nrpts}, Me.getTreatingSpecialtyReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTreatingSpecialtyReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTreatingSpecialtyReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTreatingSpecialtyReportsCompleted(Me, New getTreatingSpecialtyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCompAndPenReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCompAndPenReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getCompAndPenReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCompAndPenReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getCompAndPenReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCompAndPenReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getCompAndPenReportsOperationCompleted Is Nothing) Then
                Me.getCompAndPenReportsOperationCompleted = AddressOf Me.OngetCompAndPenReportsOperationCompleted
            End If
            Me.InvokeAsync("getCompAndPenReports", New Object() {fromDate, toDate, nrpts}, Me.getCompAndPenReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCompAndPenReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCompAndPenReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCompAndPenReportsCompleted(Me, New getCompAndPenReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCareTeamReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCareTeamReports() As TaggedTextArray
            Dim results() As Object = Me.Invoke("getCareTeamReports", New Object(-1) {})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCareTeamReportsAsync()
            Me.getCareTeamReportsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCareTeamReportsAsync(ByVal userState As Object)
            If (Me.getCareTeamReportsOperationCompleted Is Nothing) Then
                Me.getCareTeamReportsOperationCompleted = AddressOf Me.OngetCareTeamReportsOperationCompleted
            End If
            Me.InvokeAsync("getCareTeamReports", New Object(-1) {}, Me.getCareTeamReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCareTeamReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCareTeamReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCareTeamReportsCompleted(Me, New getCareTeamReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getIcdProceduresReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getIcdProceduresReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedIcdRptArrays
            Dim results() As Object = Me.Invoke("getIcdProceduresReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedIcdRptArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getIcdProceduresReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getIcdProceduresReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getIcdProceduresReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getIcdProceduresReportsOperationCompleted Is Nothing) Then
                Me.getIcdProceduresReportsOperationCompleted = AddressOf Me.OngetIcdProceduresReportsOperationCompleted
            End If
            Me.InvokeAsync("getIcdProceduresReports", New Object() {fromDate, toDate, nrpts}, Me.getIcdProceduresReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetIcdProceduresReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getIcdProceduresReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getIcdProceduresReportsCompleted(Me, New getIcdProceduresReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getIcdSurgeryReports", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getIcdSurgeryReports(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer) As TaggedIcdRptArrays
            Dim results() As Object = Me.Invoke("getIcdSurgeryReports", New Object() {fromDate, toDate, nrpts})
            Return CType(results(0),TaggedIcdRptArrays)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getIcdSurgeryReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer)
            Me.getIcdSurgeryReportsAsync(fromDate, toDate, nrpts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getIcdSurgeryReportsAsync(ByVal fromDate As String, ByVal toDate As String, ByVal nrpts As Integer, ByVal userState As Object)
            If (Me.getIcdSurgeryReportsOperationCompleted Is Nothing) Then
                Me.getIcdSurgeryReportsOperationCompleted = AddressOf Me.OngetIcdSurgeryReportsOperationCompleted
            End If
            Me.InvokeAsync("getIcdSurgeryReports", New Object() {fromDate, toDate, nrpts}, Me.getIcdSurgeryReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetIcdSurgeryReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getIcdSurgeryReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getIcdSurgeryReportsCompleted(Me, New getIcdSurgeryReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getNoteTitles", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getNoteTitles(ByVal target As String, ByVal direction As String) As TaggedTextArray
            Dim results() As Object = Me.Invoke("getNoteTitles", New Object() {target, direction})
            Return CType(results(0),TaggedTextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getNoteTitlesAsync(ByVal target As String, ByVal direction As String)
            Me.getNoteTitlesAsync(target, direction, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getNoteTitlesAsync(ByVal target As String, ByVal direction As String, ByVal userState As Object)
            If (Me.getNoteTitlesOperationCompleted Is Nothing) Then
                Me.getNoteTitlesOperationCompleted = AddressOf Me.OngetNoteTitlesOperationCompleted
            End If
            Me.InvokeAsync("getNoteTitles", New Object() {target, direction}, Me.getNoteTitlesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetNoteTitlesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getNoteTitlesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getNoteTitlesCompleted(Me, New getNoteTitlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getHospitalLocations", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getHospitalLocations(ByVal target As String, ByVal direction As String) As TaggedHospitalLocationArray
            Dim results() As Object = Me.Invoke("getHospitalLocations", New Object() {target, direction})
            Return CType(results(0),TaggedHospitalLocationArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getHospitalLocationsAsync(ByVal target As String, ByVal direction As String)
            Me.getHospitalLocationsAsync(target, direction, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getHospitalLocationsAsync(ByVal target As String, ByVal direction As String, ByVal userState As Object)
            If (Me.getHospitalLocationsOperationCompleted Is Nothing) Then
                Me.getHospitalLocationsOperationCompleted = AddressOf Me.OngetHospitalLocationsOperationCompleted
            End If
            Me.InvokeAsync("getHospitalLocations", New Object() {target, direction}, Me.getHospitalLocationsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetHospitalLocationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getHospitalLocationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getHospitalLocationsCompleted(Me, New getHospitalLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVersion", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getVersion() As String
            Dim results() As Object = Me.Invoke("getVersion", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getVersionAsync()
            Me.getVersionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getVersionAsync(ByVal userState As Object)
            If (Me.getVersionOperationCompleted Is Nothing) Then
                Me.getVersionOperationCompleted = AddressOf Me.OngetVersionOperationCompleted
            End If
            Me.InvokeAsync("getVersion", New Object(-1) {}, Me.getVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OngetVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.getVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getVersionCompleted(Me, New getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/addDataSource", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function addDataSource(ByVal id As String, ByVal name As String, ByVal datasource As String, ByVal port As String, ByVal modality As String, ByVal protocol As String, ByVal region As String) As SiteTO
            Dim results() As Object = Me.Invoke("addDataSource", New Object() {id, name, datasource, port, modality, protocol, region})
            Return CType(results(0),SiteTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub addDataSourceAsync(ByVal id As String, ByVal name As String, ByVal datasource As String, ByVal port As String, ByVal modality As String, ByVal protocol As String, ByVal region As String)
            Me.addDataSourceAsync(id, name, datasource, port, modality, protocol, region, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub addDataSourceAsync(ByVal id As String, ByVal name As String, ByVal datasource As String, ByVal port As String, ByVal modality As String, ByVal protocol As String, ByVal region As String, ByVal userState As Object)
            If (Me.addDataSourceOperationCompleted Is Nothing) Then
                Me.addDataSourceOperationCompleted = AddressOf Me.OnaddDataSourceOperationCompleted
            End If
            Me.InvokeAsync("addDataSource", New Object() {id, name, datasource, port, modality, protocol, region}, Me.addDataSourceOperationCompleted, userState)
        End Sub
        
        Private Sub OnaddDataSourceOperationCompleted(ByVal arg As Object)
            If (Not (Me.addDataSourceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent addDataSourceCompleted(Me, New addDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getFacadeVersion", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getFacadeVersion() As TextTO
            Dim results() As Object = Me.Invoke("getFacadeVersion", New Object(-1) {})
            Return CType(results(0),TextTO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getFacadeVersionAsync()
            Me.getFacadeVersionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getFacadeVersionAsync(ByVal userState As Object)
            If (Me.getFacadeVersionOperationCompleted Is Nothing) Then
                Me.getFacadeVersionOperationCompleted = AddressOf Me.OngetFacadeVersionOperationCompleted
            End If
            Me.InvokeAsync("getFacadeVersion", New Object(-1) {}, Me.getFacadeVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OngetFacadeVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.getFacadeVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getFacadeVersionCompleted(Me, New getFacadeVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/setVha", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function setVha(ByVal sitesFileName As String) As SiteArray
            Dim results() As Object = Me.Invoke("setVha", New Object() {sitesFileName})
            Return CType(results(0),SiteArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub setVhaAsync(ByVal sitesFileName As String)
            Me.setVhaAsync(sitesFileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub setVhaAsync(ByVal sitesFileName As String, ByVal userState As Object)
            If (Me.setVhaOperationCompleted Is Nothing) Then
                Me.setVhaOperationCompleted = AddressOf Me.OnsetVhaOperationCompleted
            End If
            Me.InvokeAsync("setVha", New Object() {sitesFileName}, Me.setVhaOperationCompleted, userState)
        End Sub
        
        Private Sub OnsetVhaOperationCompleted(ByVal arg As Object)
            If (Not (Me.setVhaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent setVhaCompleted(Me, New setVhaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getRpcs", RequestNamespace:="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace:="http://mdws.medora.va.gov/EmrSvc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getRpcs() As TextArray
            Dim results() As Object = Me.Invoke("getRpcs", New Object(-1) {})
            Return CType(results(0),TextArray)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getRpcsAsync()
            Me.getRpcsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getRpcsAsync(ByVal userState As Object)
            If (Me.getRpcsOperationCompleted Is Nothing) Then
                Me.getRpcsOperationCompleted = AddressOf Me.OngetRpcsOperationCompleted
            End If
            Me.InvokeAsync("getRpcs", New Object(-1) {}, Me.getRpcsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetRpcsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getRpcsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getRpcsCompleted(Me, New getRpcsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class RadiologyReportTO
        Inherits AbstractTO
        
        Private accessionNumberField As String
        
        Private caseNumberField As String
        
        Private idField As String
        
        Private titleField As String
        
        Private timestampField As String
        
        Private authorField As AuthorTO
        
        Private textField As String
        
        Private facilityField As TaggedText
        
        Private statusField As String
        
        Private cptCodeField As String
        
        Private clinicalHxField As String
        
        Private impressionField As String
        
        '''<remarks/>
        Public Property accessionNumber() As String
            Get
                Return Me.accessionNumberField
            End Get
            Set
                Me.accessionNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property caseNumber() As String
            Get
                Return Me.caseNumberField
            End Get
            Set
                Me.caseNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property author() As AuthorTO
            Get
                Return Me.authorField
            End Get
            Set
                Me.authorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cptCode() As String
            Get
                Return Me.cptCodeField
            End Get
            Set
                Me.cptCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property clinicalHx() As String
            Get
                Return Me.clinicalHxField
            End Get
            Set
                Me.clinicalHxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property impression() As String
            Get
                Return Me.impressionField
            End Get
            Set
                Me.impressionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class AuthorTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private nameField As String
        
        Private signatureField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property signature() As String
            Get
                Return Me.signatureField
            End Get
            Set
                Me.signatureField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(PersonsTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientCareTeamMemberTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientCareTeamTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BoolTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientListEntryTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ReminderReportPatientListTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(NoteResultTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TextTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(OrderTypeTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(RegionTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(HealthSummaryTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DomainTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserSecurityKeyTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(OrderDialogItemTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientRecordFlagTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(IcdRpt)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SurgicalPathologyRpt)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(MicrobiologyRpt)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CytologyRpt)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ChemHemRpt)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AppointmentTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(MedicationTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(NoteTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ProblemTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SurgeryReportTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SymptomTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AllergyTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(VitalSignSetTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ObservationTypeTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(VitalSignTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(LabSpecimenTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(LabResultTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(LabTestTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(MentalHealthInstrumentResultSetTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(MentalHealthInstrumentAdministrationTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(VisitTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AdtTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DischargeDiagnosesTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(InpatientStayTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TeamTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PhoneNumTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AddressTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PersonTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientAssociateTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TimeSlotTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DataSourceTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SiteTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(HospitalLocationTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AbstractArrayTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedIcdRptArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedSurgicalPathologyRptArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMicrobiologyRptArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedCytologyRptArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedChemHemRptArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVisitArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedAppointmentArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedConsultArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedNoteArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMedicationArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedProblemArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedSurgeryReportArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedRadiologyReportArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedAllergyArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVitalSignSetArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVitalSignArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedPatientArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(RegionArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedHealthSummaryArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedPatientAssociateArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedLabTestArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DomainArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMentalHealthInstrumentAdministrationArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserSecurityKeyArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(OrderDialogItemArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TextArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedOrderArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientRecordFlagArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(LabTestArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PersonArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SiteArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DataSourceArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AbstractTaggedArrayTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedIcdRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedSurgicalPathologyRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMicrobiologyRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedCytologyRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedChemHemRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedAppointmentArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedConsultArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMedicationArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedNoteArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedProblemArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedSurgeryReportArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedRadiologyReportArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedAllergyArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVitalSignSetArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVitalSignArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedPatientAssociateArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedLabTestArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMentalHealthResultSetArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMentalHealthInstrumentAdministrationArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedOrderArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVisitArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedInpatientStayArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedPatientArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TimeSlotArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedHospitalLocationArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedTextArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(OrderTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ConsultTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedText)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AuthorTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(RadiologyReportTO)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public MustInherit Class AbstractTO
        
        Private faultField As FaultTO
        
        '''<remarks/>
        Public Property fault() As FaultTO
            Get
                Return Me.faultField
            End Get
            Set
                Me.faultField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class FaultTO
        
        Private typeField As String
        
        Private messageField As String
        
        Private stackTraceField As String
        
        Private innerTypeField As String
        
        Private innerMessageField As String
        
        Private innerStackTraceField As String
        
        Private suggestionField As String
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stackTrace() As String
            Get
                Return Me.stackTraceField
            End Get
            Set
                Me.stackTraceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property innerType() As String
            Get
                Return Me.innerTypeField
            End Get
            Set
                Me.innerTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property innerMessage() As String
            Get
                Return Me.innerMessageField
            End Get
            Set
                Me.innerMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property innerStackTrace() As String
            Get
                Return Me.innerStackTraceField
            End Get
            Set
                Me.innerStackTraceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property suggestion() As String
            Get
                Return Me.suggestionField
            End Get
            Set
                Me.suggestionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class DemographicSetTO
        
        Private tagField As String
        
        Private addressesField() As AddressTO
        
        Private phonesField() As PhoneNumTO
        
        Private emailAddressesField() As String
        
        Private namesField() As String
        
        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set
                Me.tagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property addresses() As AddressTO()
            Get
                Return Me.addressesField
            End Get
            Set
                Me.addressesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phones() As PhoneNumTO()
            Get
                Return Me.phonesField
            End Get
            Set
                Me.phonesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property emailAddresses() As String()
            Get
                Return Me.emailAddressesField
            End Get
            Set
                Me.emailAddressesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property names() As String()
            Get
                Return Me.namesField
            End Get
            Set
                Me.namesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class AddressTO
        Inherits AbstractTO
        
        Private validFromField As String
        
        Private validToField As String
        
        Private descriptionField As String
        
        Private typeField As String
        
        Private streetAddress1Field As String
        
        Private streetAddress2Field As String
        
        Private streetAddress3Field As String
        
        Private cityField As String
        
        Private countyField As String
        
        Private stateField As String
        
        Private zipcodeField As String
        
        Private countryField As String
        
        '''<remarks/>
        Public Property validFrom() As String
            Get
                Return Me.validFromField
            End Get
            Set
                Me.validFromField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property validTo() As String
            Get
                Return Me.validToField
            End Get
            Set
                Me.validToField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property streetAddress1() As String
            Get
                Return Me.streetAddress1Field
            End Get
            Set
                Me.streetAddress1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property streetAddress2() As String
            Get
                Return Me.streetAddress2Field
            End Get
            Set
                Me.streetAddress2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property streetAddress3() As String
            Get
                Return Me.streetAddress3Field
            End Get
            Set
                Me.streetAddress3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property city() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property county() As String
            Get
                Return Me.countyField
            End Get
            Set
                Me.countyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property state() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property zipcode() As String
            Get
                Return Me.zipcodeField
            End Get
            Set
                Me.zipcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PhoneNumTO
        Inherits AbstractTO
        
        Private typeField As String
        
        Private areaCodeField As String
        
        Private exchangeField As String
        
        Private numberField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property areaCode() As String
            Get
                Return Me.areaCodeField
            End Get
            Set
                Me.areaCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property exchange() As String
            Get
                Return Me.exchangeField
            End Get
            Set
                Me.exchangeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property number() As String
            Get
                Return Me.numberField
            End Get
            Set
                Me.numberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PersonsTO
        Inherits AbstractTO
        
        Private userField As UserTO
        
        Private patientField As PatientTO
        
        '''<remarks/>
        Public Property user() As UserTO
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patient() As PatientTO
            Get
                Return Me.patientField
            End Get
            Set
                Me.patientField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class UserTO
        Inherits AbstractTO
        
        Private nameField As String
        
        Private sSNField As String
        
        Private dUZField As String
        
        Private siteIdField As String
        
        Private officeField As String
        
        Private phoneField As String
        
        Private pagerField As String
        
        Private serviceField As String
        
        Private titleField As String
        
        Private orderRoleField As String
        
        Private userClassField As String
        
        Private greetingField As String
        
        Private siteMessageField As String
        
        Private idsField As TaggedTextArray
        
        Private emailAddressField As String
        
        Private usernameField As String
        
        Private demographicsField As DemographicSetTO
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SSN() As String
            Get
                Return Me.sSNField
            End Get
            Set
                Me.sSNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DUZ() As String
            Get
                Return Me.dUZField
            End Get
            Set
                Me.dUZField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property siteId() As String
            Get
                Return Me.siteIdField
            End Get
            Set
                Me.siteIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property office() As String
            Get
                Return Me.officeField
            End Get
            Set
                Me.officeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pager() As String
            Get
                Return Me.pagerField
            End Get
            Set
                Me.pagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property service() As String
            Get
                Return Me.serviceField
            End Get
            Set
                Me.serviceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderRole() As String
            Get
                Return Me.orderRoleField
            End Get
            Set
                Me.orderRoleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property userClass() As String
            Get
                Return Me.userClassField
            End Get
            Set
                Me.userClassField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property greeting() As String
            Get
                Return Me.greetingField
            End Get
            Set
                Me.greetingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property siteMessage() As String
            Get
                Return Me.siteMessageField
            End Get
            Set
                Me.siteMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ids() As TaggedTextArray
            Get
                Return Me.idsField
            End Get
            Set
                Me.idsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property emailAddress() As String
            Get
                Return Me.emailAddressField
            End Get
            Set
                Me.emailAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property demographics() As DemographicSetTO
            Get
                Return Me.demographicsField
            End Get
            Set
                Me.demographicsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedTextArray
        Inherits AbstractArrayTO
        
        Private resultsField() As TaggedText
        
        '''<remarks/>
        Public Property results() As TaggedText()
            Get
                Return Me.resultsField
            End Get
            Set
                Me.resultsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedText
        Inherits AbstractTO
        
        Private tagField As String
        
        Private textField As String
        
        Private textArrayField() As String
        
        Private taggedResultsField() As TaggedText
        
        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set
                Me.tagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property textArray() As String()
            Get
                Return Me.textArrayField
            End Get
            Set
                Me.textArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property taggedResults() As TaggedText()
            Get
                Return Me.taggedResultsField
            End Get
            Set
                Me.taggedResultsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedIcdRptArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedSurgicalPathologyRptArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMicrobiologyRptArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedCytologyRptArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedChemHemRptArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVisitArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedAppointmentArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedConsultArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedNoteArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMedicationArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedProblemArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedSurgeryReportArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedRadiologyReportArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedAllergyArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVitalSignSetArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVitalSignArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedPatientArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(RegionArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedHealthSummaryArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedPatientAssociateArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedLabTestArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DomainArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMentalHealthInstrumentAdministrationArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserSecurityKeyArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(OrderDialogItemArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TextArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedOrderArrays)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientRecordFlagArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(LabTestArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PersonArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SiteArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DataSourceArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AbstractTaggedArrayTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedIcdRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedSurgicalPathologyRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMicrobiologyRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedCytologyRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedChemHemRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedAppointmentArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedConsultArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMedicationArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedNoteArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedProblemArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedSurgeryReportArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedRadiologyReportArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedAllergyArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVitalSignSetArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVitalSignArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedPatientAssociateArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedLabTestArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMentalHealthResultSetArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMentalHealthInstrumentAdministrationArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedOrderArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVisitArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedInpatientStayArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedPatientArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TimeSlotArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedHospitalLocationArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedTextArray)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class AbstractArrayTO
        Inherits AbstractTO
        
        Private countField As Integer
        
        '''<remarks/>
        Public Property count() As Integer
            Get
                Return Me.countField
            End Get
            Set
                Me.countField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedIcdRptArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedIcdRptArray
        
        '''<remarks/>
        Public Property arrays() As TaggedIcdRptArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedIcdRptArray
        Inherits AbstractTaggedArrayTO
        
        Private rptsField() As IcdRpt
        
        '''<remarks/>
        Public Property rpts() As IcdRpt()
            Get
                Return Me.rptsField
            End Get
            Set
                Me.rptsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class IcdRpt
        Inherits AbstractTO
        
        Private titleField As String
        
        Private timestampField As String
        
        Private facilityField As TaggedText
        
        Private icdCodeField As String
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property icdCode() As String
            Get
                Return Me.icdCodeField
            End Get
            Set
                Me.icdCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedIcdRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedSurgicalPathologyRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMicrobiologyRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedCytologyRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedChemHemRptArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedAppointmentArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedConsultArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMedicationArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedNoteArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedProblemArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedSurgeryReportArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedRadiologyReportArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedAllergyArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVitalSignSetArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVitalSignArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedPatientAssociateArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedLabTestArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMentalHealthResultSetArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedMentalHealthInstrumentAdministrationArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedOrderArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedVisitArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedInpatientStayArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedPatientArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TimeSlotArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TaggedHospitalLocationArray)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class AbstractTaggedArrayTO
        Inherits AbstractArrayTO
        
        Private tagField As String
        
        '''<remarks/>
        Public Property tag() As String
            Get
                Return Me.tagField
            End Get
            Set
                Me.tagField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedSurgicalPathologyRptArray
        Inherits AbstractTaggedArrayTO
        
        Private rptsField() As SurgicalPathologyRpt
        
        '''<remarks/>
        Public Property rpts() As SurgicalPathologyRpt()
            Get
                Return Me.rptsField
            End Get
            Set
                Me.rptsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class SurgicalPathologyRpt
        Inherits AbstractTO
        
        Private idField As String
        
        Private titleField As String
        
        Private timestampField As String
        
        Private authorField As AuthorTO
        
        Private facilityField As TaggedText
        
        Private specimenField As LabSpecimenTO
        
        Private clinicalHxField As String
        
        Private descriptionField As String
        
        Private examField As String
        
        Private diagnosisField As String
        
        Private commentField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property author() As AuthorTO
            Get
                Return Me.authorField
            End Get
            Set
                Me.authorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property specimen() As LabSpecimenTO
            Get
                Return Me.specimenField
            End Get
            Set
                Me.specimenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property clinicalHx() As String
            Get
                Return Me.clinicalHxField
            End Get
            Set
                Me.clinicalHxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property exam() As String
            Get
                Return Me.examField
            End Get
            Set
                Me.examField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property diagnosis() As String
            Get
                Return Me.diagnosisField
            End Get
            Set
                Me.diagnosisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class LabSpecimenTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private nameField As String
        
        Private collectionDateField As String
        
        Private accessionNumField As String
        
        Private siteField As String
        
        Private facilityField As TaggedText
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property collectionDate() As String
            Get
                Return Me.collectionDateField
            End Get
            Set
                Me.collectionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property accessionNum() As String
            Get
                Return Me.accessionNumField
            End Get
            Set
                Me.accessionNumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property site() As String
            Get
                Return Me.siteField
            End Get
            Set
                Me.siteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedMicrobiologyRptArray
        Inherits AbstractTaggedArrayTO
        
        Private rptsField() As MicrobiologyRpt
        
        '''<remarks/>
        Public Property rpts() As MicrobiologyRpt()
            Get
                Return Me.rptsField
            End Get
            Set
                Me.rptsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class MicrobiologyRpt
        Inherits AbstractTO
        
        Private idField As String
        
        Private titleField As String
        
        Private timestampField As String
        
        Private authorField As AuthorTO
        
        Private facilityField As TaggedText
        
        Private specimenField As LabSpecimenTO
        
        Private commentField As String
        
        Private sampleField As String
        
        Private textField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property author() As AuthorTO
            Get
                Return Me.authorField
            End Get
            Set
                Me.authorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property specimen() As LabSpecimenTO
            Get
                Return Me.specimenField
            End Get
            Set
                Me.specimenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sample() As String
            Get
                Return Me.sampleField
            End Get
            Set
                Me.sampleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedCytologyRptArray
        Inherits AbstractTaggedArrayTO
        
        Private rptsField() As CytologyRpt
        
        '''<remarks/>
        Public Property rpts() As CytologyRpt()
            Get
                Return Me.rptsField
            End Get
            Set
                Me.rptsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class CytologyRpt
        Inherits AbstractTO
        
        Private idField As String
        
        Private titleField As String
        
        Private timestampField As String
        
        Private authorField As AuthorTO
        
        Private facilityField As TaggedText
        
        Private specimenField As LabSpecimenTO
        
        Private clinicalHxField As String
        
        Private descriptionField As String
        
        Private examField As String
        
        Private diagnosisField As String
        
        Private commentField As String
        
        Private supplementalRptField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property author() As AuthorTO
            Get
                Return Me.authorField
            End Get
            Set
                Me.authorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property specimen() As LabSpecimenTO
            Get
                Return Me.specimenField
            End Get
            Set
                Me.specimenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property clinicalHx() As String
            Get
                Return Me.clinicalHxField
            End Get
            Set
                Me.clinicalHxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property exam() As String
            Get
                Return Me.examField
            End Get
            Set
                Me.examField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property diagnosis() As String
            Get
                Return Me.diagnosisField
            End Get
            Set
                Me.diagnosisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property supplementalRpt() As String
            Get
                Return Me.supplementalRptField
            End Get
            Set
                Me.supplementalRptField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedChemHemRptArray
        Inherits AbstractTaggedArrayTO
        
        Private rptsField() As ChemHemRpt
        
        '''<remarks/>
        Public Property rpts() As ChemHemRpt()
            Get
                Return Me.rptsField
            End Get
            Set
                Me.rptsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class ChemHemRpt
        Inherits AbstractTO
        
        Private idField As String
        
        Private titleField As String
        
        Private timestampField As String
        
        Private authorField As AuthorTO
        
        Private facilityField As TaggedText
        
        Private specimenField As LabSpecimenTO
        
        Private commentField As String
        
        Private resultsField() As LabResultTO
        
        Private labSitesField() As SiteTO
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property author() As AuthorTO
            Get
                Return Me.authorField
            End Get
            Set
                Me.authorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property specimen() As LabSpecimenTO
            Get
                Return Me.specimenField
            End Get
            Set
                Me.specimenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property results() As LabResultTO()
            Get
                Return Me.resultsField
            End Get
            Set
                Me.resultsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property labSites() As SiteTO()
            Get
                Return Me.labSitesField
            End Get
            Set
                Me.labSitesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class LabResultTO
        Inherits AbstractTO
        
        Private timestampField As String
        
        Private testField As LabTestTO
        
        Private specimenTypeField As String
        
        Private commentField As String
        
        Private valueField As String
        
        Private boundaryStatusField As String
        
        Private labSiteIdField As String
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property test() As LabTestTO
            Get
                Return Me.testField
            End Get
            Set
                Me.testField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property specimenType() As String
            Get
                Return Me.specimenTypeField
            End Get
            Set
                Me.specimenTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property boundaryStatus() As String
            Get
                Return Me.boundaryStatusField
            End Get
            Set
                Me.boundaryStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property labSiteId() As String
            Get
                Return Me.labSiteIdField
            End Get
            Set
                Me.labSiteIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class LabTestTO
        Inherits AbstractTO
        
        Private resultField As LabResultTO
        
        Private specimenField As LabSpecimenTO
        
        Private idField As String
        
        Private nameField As String
        
        Private categoryField As String
        
        Private unitsField As String
        
        Private lowRefField As String
        
        Private hiRefField As String
        
        Private refRangeField As String
        
        Private loincField As String
        
        '''<remarks/>
        Public Property result() As LabResultTO
            Get
                Return Me.resultField
            End Get
            Set
                Me.resultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property specimen() As LabSpecimenTO
            Get
                Return Me.specimenField
            End Get
            Set
                Me.specimenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property category() As String
            Get
                Return Me.categoryField
            End Get
            Set
                Me.categoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property units() As String
            Get
                Return Me.unitsField
            End Get
            Set
                Me.unitsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lowRef() As String
            Get
                Return Me.lowRefField
            End Get
            Set
                Me.lowRefField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hiRef() As String
            Get
                Return Me.hiRefField
            End Get
            Set
                Me.hiRefField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property refRange() As String
            Get
                Return Me.refRangeField
            End Get
            Set
                Me.refRangeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property loinc() As String
            Get
                Return Me.loincField
            End Get
            Set
                Me.loincField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class SiteTO
        Inherits AbstractTO
        
        Private sitecodeField As String
        
        Private nameField As String
        
        Private displayNameField As String
        
        Private monikerField As String
        
        Private regionIDField As String
        
        Private lastEventTimestampField As String
        
        Private lastEventReasonField As String
        
        Private uidField As String
        
        Private pidField As String
        
        Private dataSourcesField As DataSourceArray
        
        Private parentSiteIdField As String
        
        Private childSitesField As SiteArray
        
        Private addressField As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private systemNameField As String
        
        Private siteTypeField As String
        
        '''<remarks/>
        Public Property sitecode() As String
            Get
                Return Me.sitecodeField
            End Get
            Set
                Me.sitecodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property displayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property moniker() As String
            Get
                Return Me.monikerField
            End Get
            Set
                Me.monikerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property regionID() As String
            Get
                Return Me.regionIDField
            End Get
            Set
                Me.regionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastEventTimestamp() As String
            Get
                Return Me.lastEventTimestampField
            End Get
            Set
                Me.lastEventTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastEventReason() As String
            Get
                Return Me.lastEventReasonField
            End Get
            Set
                Me.lastEventReasonField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property uid() As String
            Get
                Return Me.uidField
            End Get
            Set
                Me.uidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pid() As String
            Get
                Return Me.pidField
            End Get
            Set
                Me.pidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dataSources() As DataSourceArray
            Get
                Return Me.dataSourcesField
            End Get
            Set
                Me.dataSourcesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property parentSiteId() As String
            Get
                Return Me.parentSiteIdField
            End Get
            Set
                Me.parentSiteIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property childSites() As SiteArray
            Get
                Return Me.childSitesField
            End Get
            Set
                Me.childSitesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property city() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property state() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property systemName() As String
            Get
                Return Me.systemNameField
            End Get
            Set
                Me.systemNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property siteType() As String
            Get
                Return Me.siteTypeField
            End Get
            Set
                Me.siteTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class DataSourceArray
        Inherits AbstractArrayTO
        
        Private itemsField() As DataSourceTO
        
        '''<remarks/>
        Public Property items() As DataSourceTO()
            Get
                Return Me.itemsField
            End Get
            Set
                Me.itemsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class DataSourceTO
        Inherits AbstractTO
        
        Private protocolField As String
        
        Private modalityField As String
        
        Private timeoutField As Integer
        
        Private portField As Integer
        
        Private providerField As String
        
        Private statusField As String
        
        Private descriptionField As String
        
        Private contextField As String
        
        Private testSourceField As Boolean
        
        Private vendorField As String
        
        Private versionField As String
        
        Private siteIdField As TaggedText
        
        Private welcomeMessageField As String
        
        '''<remarks/>
        Public Property protocol() As String
            Get
                Return Me.protocolField
            End Get
            Set
                Me.protocolField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property modality() As String
            Get
                Return Me.modalityField
            End Get
            Set
                Me.modalityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timeout() As Integer
            Get
                Return Me.timeoutField
            End Get
            Set
                Me.timeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property port() As Integer
            Get
                Return Me.portField
            End Get
            Set
                Me.portField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property provider() As String
            Get
                Return Me.providerField
            End Get
            Set
                Me.providerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property context() As String
            Get
                Return Me.contextField
            End Get
            Set
                Me.contextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property testSource() As Boolean
            Get
                Return Me.testSourceField
            End Get
            Set
                Me.testSourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property vendor() As String
            Get
                Return Me.vendorField
            End Get
            Set
                Me.vendorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property version() As String
            Get
                Return Me.versionField
            End Get
            Set
                Me.versionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property siteId() As TaggedText
            Get
                Return Me.siteIdField
            End Get
            Set
                Me.siteIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property welcomeMessage() As String
            Get
                Return Me.welcomeMessageField
            End Get
            Set
                Me.welcomeMessageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class SiteArray
        Inherits AbstractArrayTO
        
        Private sitesField() As SiteTO
        
        '''<remarks/>
        Public Property sites() As SiteTO()
            Get
                Return Me.sitesField
            End Get
            Set
                Me.sitesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedAppointmentArray
        Inherits AbstractTaggedArrayTO
        
        Private apptsField() As AppointmentTO
        
        '''<remarks/>
        Public Property appts() As AppointmentTO()
            Get
                Return Me.apptsField
            End Get
            Set
                Me.apptsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class AppointmentTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private timestampField As String
        
        Private titleField As String
        
        Private statusField As String
        
        Private textField As String
        
        Private facilityField As TaggedText
        
        Private clinicField As HospitalLocationTO
        
        Private labDateTimeField As String
        
        Private xrayDateTimeField As String
        
        Private ekgDateTimeField As String
        
        Private purposeField As String
        
        Private typeField As String
        
        Private currentStatusField As String
        
        Private visitIdField As String
        
        Private providerNameField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property clinic() As HospitalLocationTO
            Get
                Return Me.clinicField
            End Get
            Set
                Me.clinicField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property labDateTime() As String
            Get
                Return Me.labDateTimeField
            End Get
            Set
                Me.labDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property xrayDateTime() As String
            Get
                Return Me.xrayDateTimeField
            End Get
            Set
                Me.xrayDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ekgDateTime() As String
            Get
                Return Me.ekgDateTimeField
            End Get
            Set
                Me.ekgDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property purpose() As String
            Get
                Return Me.purposeField
            End Get
            Set
                Me.purposeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property currentStatus() As String
            Get
                Return Me.currentStatusField
            End Get
            Set
                Me.currentStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property visitId() As String
            Get
                Return Me.visitIdField
            End Get
            Set
                Me.visitIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property providerName() As String
            Get
                Return Me.providerNameField
            End Get
            Set
                Me.providerNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class HospitalLocationTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private nameField As String
        
        Private departmentField As TaggedText
        
        Private serviceField As TaggedText
        
        Private specialtyField As TaggedText
        
        Private stopCodeField As TaggedText
        
        Private facilityField As SiteTO
        
        Private buildingField As String
        
        Private floorField As String
        
        Private roomField As String
        
        Private bedField As String
        
        Private statusField As String
        
        Private phoneField As String
        
        Private appointmentTimestampField As String
        
        Private typeField As String
        
        Private physicalLocationField As String
        
        Private askForCheckInField As Boolean
        
        Private appointmentLengthField As String
        
        Private clinicDisplayStartTimeField As String
        
        Private displayIncrementsField As String
        
        Private availabilityField As TimeSlotArray
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property department() As TaggedText
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property service() As TaggedText
            Get
                Return Me.serviceField
            End Get
            Set
                Me.serviceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property specialty() As TaggedText
            Get
                Return Me.specialtyField
            End Get
            Set
                Me.specialtyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stopCode() As TaggedText
            Get
                Return Me.stopCodeField
            End Get
            Set
                Me.stopCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As SiteTO
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property building() As String
            Get
                Return Me.buildingField
            End Get
            Set
                Me.buildingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property floor() As String
            Get
                Return Me.floorField
            End Get
            Set
                Me.floorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property room() As String
            Get
                Return Me.roomField
            End Get
            Set
                Me.roomField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property bed() As String
            Get
                Return Me.bedField
            End Get
            Set
                Me.bedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property appointmentTimestamp() As String
            Get
                Return Me.appointmentTimestampField
            End Get
            Set
                Me.appointmentTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property physicalLocation() As String
            Get
                Return Me.physicalLocationField
            End Get
            Set
                Me.physicalLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property askForCheckIn() As Boolean
            Get
                Return Me.askForCheckInField
            End Get
            Set
                Me.askForCheckInField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property appointmentLength() As String
            Get
                Return Me.appointmentLengthField
            End Get
            Set
                Me.appointmentLengthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property clinicDisplayStartTime() As String
            Get
                Return Me.clinicDisplayStartTimeField
            End Get
            Set
                Me.clinicDisplayStartTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property displayIncrements() As String
            Get
                Return Me.displayIncrementsField
            End Get
            Set
                Me.displayIncrementsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property availability() As TimeSlotArray
            Get
                Return Me.availabilityField
            End Get
            Set
                Me.availabilityField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TimeSlotArray
        Inherits AbstractTaggedArrayTO
        
        Private slotsField() As TimeSlotTO
        
        '''<remarks/>
        Public Property slots() As TimeSlotTO()
            Get
                Return Me.slotsField
            End Get
            Set
                Me.slotsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TimeSlotTO
        Inherits AbstractTO
        
        Private startField As Date
        
        Private endField As Date
        
        Private textField As String
        
        Private availableField As Boolean
        
        '''<remarks/>
        Public Property start() As Date
            Get
                Return Me.startField
            End Get
            Set
                Me.startField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [end]() As Date
            Get
                Return Me.endField
            End Get
            Set
                Me.endField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property available() As Boolean
            Get
                Return Me.availableField
            End Get
            Set
                Me.availableField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedConsultArray
        Inherits AbstractTaggedArrayTO
        
        Private consultsField() As ConsultTO
        
        '''<remarks/>
        Public Property consults() As ConsultTO()
            Get
                Return Me.consultsField
            End Get
            Set
                Me.consultsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class ConsultTO
        Inherits OrderTO
        
        Private toServiceField As TaggedText
        
        Private titleField As String
        
        '''<remarks/>
        Public Property toService() As TaggedText
            Get
                Return Me.toServiceField
            End Get
            Set
                Me.toServiceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(ConsultTO)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class OrderTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private timestampField As String
        
        Private orderingServiceNameField As String
        
        Private treatingSpecialtyField As String
        
        Private startDateField As String
        
        Private stopDateField As String
        
        Private statusField As String
        
        Private sigStatusField As String
        
        Private dateSignedField As String
        
        Private verifyingNurseField As String
        
        Private dateVerifiedField As String
        
        Private verifyingClerkField As String
        
        Private chartReviewerField As String
        
        Private dateReviewedField As String
        
        Private providerField As UserTO
        
        Private textField As String
        
        Private detailField As String
        
        Private errMsgField As String
        
        Private flagField As Boolean
        
        Private typeField As OrderTypeTO
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderingServiceName() As String
            Get
                Return Me.orderingServiceNameField
            End Get
            Set
                Me.orderingServiceNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property treatingSpecialty() As String
            Get
                Return Me.treatingSpecialtyField
            End Get
            Set
                Me.treatingSpecialtyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startDate() As String
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stopDate() As String
            Get
                Return Me.stopDateField
            End Get
            Set
                Me.stopDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sigStatus() As String
            Get
                Return Me.sigStatusField
            End Get
            Set
                Me.sigStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateSigned() As String
            Get
                Return Me.dateSignedField
            End Get
            Set
                Me.dateSignedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property verifyingNurse() As String
            Get
                Return Me.verifyingNurseField
            End Get
            Set
                Me.verifyingNurseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateVerified() As String
            Get
                Return Me.dateVerifiedField
            End Get
            Set
                Me.dateVerifiedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property verifyingClerk() As String
            Get
                Return Me.verifyingClerkField
            End Get
            Set
                Me.verifyingClerkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property chartReviewer() As String
            Get
                Return Me.chartReviewerField
            End Get
            Set
                Me.chartReviewerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateReviewed() As String
            Get
                Return Me.dateReviewedField
            End Get
            Set
                Me.dateReviewedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property provider() As UserTO
            Get
                Return Me.providerField
            End Get
            Set
                Me.providerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property detail() As String
            Get
                Return Me.detailField
            End Get
            Set
                Me.detailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errMsg() As String
            Get
                Return Me.errMsgField
            End Get
            Set
                Me.errMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property flag() As Boolean
            Get
                Return Me.flagField
            End Get
            Set
                Me.flagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As OrderTypeTO
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class OrderTypeTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private name1Field As String
        
        Private name2Field As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name1() As String
            Get
                Return Me.name1Field
            End Get
            Set
                Me.name1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name2() As String
            Get
                Return Me.name2Field
            End Get
            Set
                Me.name2Field = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedMedicationArray
        Inherits AbstractTaggedArrayTO
        
        Private medsField() As MedicationTO
        
        '''<remarks/>
        Public Property meds() As MedicationTO()
            Get
                Return Me.medsField
            End Get
            Set
                Me.medsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class MedicationTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private nameField As String
        
        Private rxNumField As String
        
        Private quantityField As String
        
        Private expirationDateField As String
        
        Private issueDateField As String
        
        Private startDateField As String
        
        Private stopDateField As String
        
        Private orderIdField As String
        
        Private statusField As String
        
        Private refillsField As String
        
        Private isOutpatientField As Boolean
        
        Private isInpatientField As Boolean
        
        Private isIVField As Boolean
        
        Private isUnitDoseField As Boolean
        
        Private isNonVAField As Boolean
        
        Private isImoField As Boolean
        
        Private lastFillDateField As String
        
        Private remainingField As String
        
        Private facilityField As TaggedText
        
        Private providerField As AuthorTO
        
        Private costField As String
        
        Private sigField As String
        
        Private typeField As String
        
        Private additivesField As String
        
        Private solutionField As String
        
        Private rateField As String
        
        Private routeField As String
        
        Private doseField As String
        
        Private instructionField As String
        
        Private commentField As String
        
        Private dateDocumentedField As String
        
        Private documentorField As AuthorTO
        
        Private detailField As String
        
        Private scheduleField As String
        
        Private daysSupplyField As String
        
        Private hospitalField As TaggedText
        
        Private drugField As TaggedText
        
        Private isSupplyField As Boolean
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rxNum() As String
            Get
                Return Me.rxNumField
            End Get
            Set
                Me.rxNumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property quantity() As String
            Get
                Return Me.quantityField
            End Get
            Set
                Me.quantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property expirationDate() As String
            Get
                Return Me.expirationDateField
            End Get
            Set
                Me.expirationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property issueDate() As String
            Get
                Return Me.issueDateField
            End Get
            Set
                Me.issueDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property startDate() As String
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property stopDate() As String
            Get
                Return Me.stopDateField
            End Get
            Set
                Me.stopDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderId() As String
            Get
                Return Me.orderIdField
            End Get
            Set
                Me.orderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property refills() As String
            Get
                Return Me.refillsField
            End Get
            Set
                Me.refillsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isOutpatient() As Boolean
            Get
                Return Me.isOutpatientField
            End Get
            Set
                Me.isOutpatientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isInpatient() As Boolean
            Get
                Return Me.isInpatientField
            End Get
            Set
                Me.isInpatientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isIV() As Boolean
            Get
                Return Me.isIVField
            End Get
            Set
                Me.isIVField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isUnitDose() As Boolean
            Get
                Return Me.isUnitDoseField
            End Get
            Set
                Me.isUnitDoseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isNonVA() As Boolean
            Get
                Return Me.isNonVAField
            End Get
            Set
                Me.isNonVAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isImo() As Boolean
            Get
                Return Me.isImoField
            End Get
            Set
                Me.isImoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastFillDate() As String
            Get
                Return Me.lastFillDateField
            End Get
            Set
                Me.lastFillDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property remaining() As String
            Get
                Return Me.remainingField
            End Get
            Set
                Me.remainingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property provider() As AuthorTO
            Get
                Return Me.providerField
            End Get
            Set
                Me.providerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cost() As String
            Get
                Return Me.costField
            End Get
            Set
                Me.costField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sig() As String
            Get
                Return Me.sigField
            End Get
            Set
                Me.sigField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property additives() As String
            Get
                Return Me.additivesField
            End Get
            Set
                Me.additivesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property solution() As String
            Get
                Return Me.solutionField
            End Get
            Set
                Me.solutionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rate() As String
            Get
                Return Me.rateField
            End Get
            Set
                Me.rateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property route() As String
            Get
                Return Me.routeField
            End Get
            Set
                Me.routeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dose() As String
            Get
                Return Me.doseField
            End Get
            Set
                Me.doseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property instruction() As String
            Get
                Return Me.instructionField
            End Get
            Set
                Me.instructionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateDocumented() As String
            Get
                Return Me.dateDocumentedField
            End Get
            Set
                Me.dateDocumentedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property documentor() As AuthorTO
            Get
                Return Me.documentorField
            End Get
            Set
                Me.documentorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property detail() As String
            Get
                Return Me.detailField
            End Get
            Set
                Me.detailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property schedule() As String
            Get
                Return Me.scheduleField
            End Get
            Set
                Me.scheduleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property daysSupply() As String
            Get
                Return Me.daysSupplyField
            End Get
            Set
                Me.daysSupplyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hospital() As TaggedText
            Get
                Return Me.hospitalField
            End Get
            Set
                Me.hospitalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property drug() As TaggedText
            Get
                Return Me.drugField
            End Get
            Set
                Me.drugField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isSupply() As Boolean
            Get
                Return Me.isSupplyField
            End Get
            Set
                Me.isSupplyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedNoteArray
        Inherits AbstractTaggedArrayTO
        
        Private notesField() As NoteTO
        
        '''<remarks/>
        Public Property notes() As NoteTO()
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class NoteTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private timestampField As String
        
        Private admitTimestampField As String
        
        Private dischargeTimestampField As String
        
        Private serviceCategoryField As String
        
        Private localTitleField As String
        
        Private standardTitleField As String
        
        Private authorField As AuthorTO
        
        Private locationField As HospitalLocationTO
        
        Private textField As String
        
        Private hasAddendumField As Boolean
        
        Private isAddendumField As Boolean
        
        Private originalNoteIDField As String
        
        Private hasImagesField As Boolean
        
        Private itemIdField As String
        
        Private approvedByField As AuthorTO
        
        Private statusField As String
        
        Private typeField As String
        
        Private signatureTimestampField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admitTimestamp() As String
            Get
                Return Me.admitTimestampField
            End Get
            Set
                Me.admitTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dischargeTimestamp() As String
            Get
                Return Me.dischargeTimestampField
            End Get
            Set
                Me.dischargeTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serviceCategory() As String
            Get
                Return Me.serviceCategoryField
            End Get
            Set
                Me.serviceCategoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property localTitle() As String
            Get
                Return Me.localTitleField
            End Get
            Set
                Me.localTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property standardTitle() As String
            Get
                Return Me.standardTitleField
            End Get
            Set
                Me.standardTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property author() As AuthorTO
            Get
                Return Me.authorField
            End Get
            Set
                Me.authorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property location() As HospitalLocationTO
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hasAddendum() As Boolean
            Get
                Return Me.hasAddendumField
            End Get
            Set
                Me.hasAddendumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isAddendum() As Boolean
            Get
                Return Me.isAddendumField
            End Get
            Set
                Me.isAddendumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property originalNoteID() As String
            Get
                Return Me.originalNoteIDField
            End Get
            Set
                Me.originalNoteIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hasImages() As Boolean
            Get
                Return Me.hasImagesField
            End Get
            Set
                Me.hasImagesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property itemId() As String
            Get
                Return Me.itemIdField
            End Get
            Set
                Me.itemIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property approvedBy() As AuthorTO
            Get
                Return Me.approvedByField
            End Get
            Set
                Me.approvedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property signatureTimestamp() As String
            Get
                Return Me.signatureTimestampField
            End Get
            Set
                Me.signatureTimestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedProblemArray
        Inherits AbstractTaggedArrayTO
        
        Private problemsField() As ProblemTO
        
        '''<remarks/>
        Public Property problems() As ProblemTO()
            Get
                Return Me.problemsField
            End Get
            Set
                Me.problemsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class ProblemTO
        Inherits AbstractTO
        
        Private removedField As Boolean
        
        Private verifiedField As Boolean
        
        Private commentsField As TaggedNoteArray
        
        Private acuityField As TaggedText
        
        Private idField As String
        
        Private statusField As String
        
        Private providerNarrativeField As String
        
        Private onsetDateField As String
        
        Private modifiedDateField As String
        
        Private resolvedDateField As String
        
        Private exposuresField As String
        
        Private noteNarrativeField As String
        
        Private priorityField As String
        
        Private observerField As AuthorTO
        
        Private facilityField As TaggedText
        
        Private typeField As ObservationTypeTO
        
        Private commentField As String
        
        Private organizationalPropertiesField As TaggedTextArray
        
        Private timestampField As String
        
        '''<remarks/>
        Public Property removed() As Boolean
            Get
                Return Me.removedField
            End Get
            Set
                Me.removedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property verified() As Boolean
            Get
                Return Me.verifiedField
            End Get
            Set
                Me.verifiedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comments() As TaggedNoteArray
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property acuity() As TaggedText
            Get
                Return Me.acuityField
            End Get
            Set
                Me.acuityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property providerNarrative() As String
            Get
                Return Me.providerNarrativeField
            End Get
            Set
                Me.providerNarrativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property onsetDate() As String
            Get
                Return Me.onsetDateField
            End Get
            Set
                Me.onsetDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property modifiedDate() As String
            Get
                Return Me.modifiedDateField
            End Get
            Set
                Me.modifiedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resolvedDate() As String
            Get
                Return Me.resolvedDateField
            End Get
            Set
                Me.resolvedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property exposures() As String
            Get
                Return Me.exposuresField
            End Get
            Set
                Me.exposuresField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noteNarrative() As String
            Get
                Return Me.noteNarrativeField
            End Get
            Set
                Me.noteNarrativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priority() As String
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property observer() As AuthorTO
            Get
                Return Me.observerField
            End Get
            Set
                Me.observerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As ObservationTypeTO
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property organizationalProperties() As TaggedTextArray
            Get
                Return Me.organizationalPropertiesField
            End Get
            Set
                Me.organizationalPropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class ObservationTypeTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private categoryField As String
        
        Private nameField As String
        
        Private shortNameField As String
        
        Private dataIdField As String
        
        Private dataNameField As String
        
        Private dataTypeField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property category() As String
            Get
                Return Me.categoryField
            End Get
            Set
                Me.categoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property shortName() As String
            Get
                Return Me.shortNameField
            End Get
            Set
                Me.shortNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dataId() As String
            Get
                Return Me.dataIdField
            End Get
            Set
                Me.dataIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dataName() As String
            Get
                Return Me.dataNameField
            End Get
            Set
                Me.dataNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dataType() As String
            Get
                Return Me.dataTypeField
            End Get
            Set
                Me.dataTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedSurgeryReportArray
        Inherits AbstractTaggedArrayTO
        
        Private rptsField() As SurgeryReportTO
        
        '''<remarks/>
        Public Property rpts() As SurgeryReportTO()
            Get
                Return Me.rptsField
            End Get
            Set
                Me.rptsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class SurgeryReportTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private titleField As String
        
        Private timestampField As String
        
        Private authorField As AuthorTO
        
        Private textField As String
        
        Private facilityField As TaggedText
        
        Private statusField As String
        
        Private specialtyField As TaggedText
        
        Private preOpDxField As String
        
        Private postOpDxField As String
        
        Private labWorkField As String
        
        Private dictationTimestampField As String
        
        Private transcriptionTimestampField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property author() As AuthorTO
            Get
                Return Me.authorField
            End Get
            Set
                Me.authorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property specialty() As TaggedText
            Get
                Return Me.specialtyField
            End Get
            Set
                Me.specialtyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property preOpDx() As String
            Get
                Return Me.preOpDxField
            End Get
            Set
                Me.preOpDxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property postOpDx() As String
            Get
                Return Me.postOpDxField
            End Get
            Set
                Me.postOpDxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property labWork() As String
            Get
                Return Me.labWorkField
            End Get
            Set
                Me.labWorkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dictationTimestamp() As String
            Get
                Return Me.dictationTimestampField
            End Get
            Set
                Me.dictationTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property transcriptionTimestamp() As String
            Get
                Return Me.transcriptionTimestampField
            End Get
            Set
                Me.transcriptionTimestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedRadiologyReportArray
        Inherits AbstractTaggedArrayTO
        
        Private rptsField() As RadiologyReportTO
        
        '''<remarks/>
        Public Property rpts() As RadiologyReportTO()
            Get
                Return Me.rptsField
            End Get
            Set
                Me.rptsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedAllergyArray
        Inherits AbstractTaggedArrayTO
        
        Private allergiesField() As AllergyTO
        
        '''<remarks/>
        Public Property allergies() As AllergyTO()
            Get
                Return Me.allergiesField
            End Get
            Set
                Me.allergiesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class AllergyTO
        Inherits AbstractTO
        
        Private allergenIdField As String
        
        Private allergenNameField As String
        
        Private allergenTypeField As String
        
        Private reactionField As String
        
        Private severityField As String
        
        Private commentField As String
        
        Private timestampField As String
        
        Private facilityField As TaggedText
        
        Private locationField As HospitalLocationTO
        
        Private typeField As ObservationTypeTO
        
        Private observerField As AuthorTO
        
        Private recorderField As AuthorTO
        
        Private reactionsField() As SymptomTO
        
        Private drugIngredientsField() As TaggedText
        
        Private drugClassesField() As TaggedText
        
        '''<remarks/>
        Public Property allergenId() As String
            Get
                Return Me.allergenIdField
            End Get
            Set
                Me.allergenIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property allergenName() As String
            Get
                Return Me.allergenNameField
            End Get
            Set
                Me.allergenNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property allergenType() As String
            Get
                Return Me.allergenTypeField
            End Get
            Set
                Me.allergenTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reaction() As String
            Get
                Return Me.reactionField
            End Get
            Set
                Me.reactionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property severity() As String
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property location() As HospitalLocationTO
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As ObservationTypeTO
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property observer() As AuthorTO
            Get
                Return Me.observerField
            End Get
            Set
                Me.observerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property recorder() As AuthorTO
            Get
                Return Me.recorderField
            End Get
            Set
                Me.recorderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reactions() As SymptomTO()
            Get
                Return Me.reactionsField
            End Get
            Set
                Me.reactionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property drugIngredients() As TaggedText()
            Get
                Return Me.drugIngredientsField
            End Get
            Set
                Me.drugIngredientsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property drugClasses() As TaggedText()
            Get
                Return Me.drugClassesField
            End Get
            Set
                Me.drugClassesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class SymptomTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private nameField As String
        
        Private isNationalField As Boolean
        
        Private vuidField As String
        
        Private typeField As ObservationTypeTO
        
        Private observerField As AuthorTO
        
        Private timestampField As String
        
        Private facilityField As TaggedText
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isNational() As Boolean
            Get
                Return Me.isNationalField
            End Get
            Set
                Me.isNationalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property vuid() As String
            Get
                Return Me.vuidField
            End Get
            Set
                Me.vuidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As ObservationTypeTO
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property observer() As AuthorTO
            Get
                Return Me.observerField
            End Get
            Set
                Me.observerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedVitalSignSetArray
        Inherits AbstractTaggedArrayTO
        
        Private setsField() As VitalSignSetTO
        
        '''<remarks/>
        Public Property sets() As VitalSignSetTO()
            Get
                Return Me.setsField
            End Get
            Set
                Me.setsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class VitalSignSetTO
        Inherits AbstractTO
        
        Private timestampField As String
        
        Private facilityField As TaggedText
        
        Private vitalSignsField() As VitalSignTO
        
        Private unitsField As String
        
        Private qualifiersField As String
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property vitalSigns() As VitalSignTO()
            Get
                Return Me.vitalSignsField
            End Get
            Set
                Me.vitalSignsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property units() As String
            Get
                Return Me.unitsField
            End Get
            Set
                Me.unitsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property qualifiers() As String
            Get
                Return Me.qualifiersField
            End Get
            Set
                Me.qualifiersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class VitalSignTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private typeField As ObservationTypeTO
        
        Private value1Field As String
        
        Private value2Field As String
        
        Private observerField As AuthorTO
        
        Private recorderField As AuthorTO
        
        Private timestampField As String
        
        Private facilityField As TaggedText
        
        Private locationField As HospitalLocationTO
        
        Private commentField As String
        
        Private unitsField As String
        
        Private qualifiersField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As ObservationTypeTO
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property value1() As String
            Get
                Return Me.value1Field
            End Get
            Set
                Me.value1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property value2() As String
            Get
                Return Me.value2Field
            End Get
            Set
                Me.value2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property observer() As AuthorTO
            Get
                Return Me.observerField
            End Get
            Set
                Me.observerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property recorder() As AuthorTO
            Get
                Return Me.recorderField
            End Get
            Set
                Me.recorderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As TaggedText
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property location() As HospitalLocationTO
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property units() As String
            Get
                Return Me.unitsField
            End Get
            Set
                Me.unitsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property qualifiers() As String
            Get
                Return Me.qualifiersField
            End Get
            Set
                Me.qualifiersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedVitalSignArray
        Inherits AbstractTaggedArrayTO
        
        Private vitalsField() As VitalSignTO
        
        '''<remarks/>
        Public Property vitals() As VitalSignTO()
            Get
                Return Me.vitalsField
            End Get
            Set
                Me.vitalsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedPatientAssociateArray
        Inherits AbstractTaggedArrayTO
        
        Private pasField() As PatientAssociateTO
        
        '''<remarks/>
        Public Property pas() As PatientAssociateTO()
            Get
                Return Me.pasField
            End Get
            Set
                Me.pasField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PatientAssociateTO
        Inherits PersonTO
        
        Private associationField As String
        
        Private relationshipToPatientField As String
        
        Private facilityNameField As String
        
        '''<remarks/>
        Public Property association() As String
            Get
                Return Me.associationField
            End Get
            Set
                Me.associationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property relationshipToPatient() As String
            Get
                Return Me.relationshipToPatientField
            End Get
            Set
                Me.relationshipToPatientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facilityName() As String
            Get
                Return Me.facilityNameField
            End Get
            Set
                Me.facilityNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientAssociateTO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PatientTO)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PersonTO
        Inherits AbstractTO
        
        Private occupationField As String
        
        Private employmentStatusField As String
        
        Private relationshipsField As PersonArray
        
        Private descriptionField As String
        
        Private religionField As String
        
        Private nameField As String
        
        Private ssnField As String
        
        Private genderField As String
        
        Private dobField As String
        
        Private ethnicityField As String
        
        Private ageField As Integer
        
        Private maritalStatusField As String
        
        Private homeAddressField As AddressTO
        
        Private homePhoneField As PhoneNumTO
        
        Private cellPhoneField As PhoneNumTO
        
        Private demographicsField() As DemographicSetTO
        
        '''<remarks/>
        Public Property occupation() As String
            Get
                Return Me.occupationField
            End Get
            Set
                Me.occupationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property employmentStatus() As String
            Get
                Return Me.employmentStatusField
            End Get
            Set
                Me.employmentStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property relationships() As PersonArray
            Get
                Return Me.relationshipsField
            End Get
            Set
                Me.relationshipsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property religion() As String
            Get
                Return Me.religionField
            End Get
            Set
                Me.religionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ssn() As String
            Get
                Return Me.ssnField
            End Get
            Set
                Me.ssnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dob() As String
            Get
                Return Me.dobField
            End Get
            Set
                Me.dobField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ethnicity() As String
            Get
                Return Me.ethnicityField
            End Get
            Set
                Me.ethnicityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property age() As Integer
            Get
                Return Me.ageField
            End Get
            Set
                Me.ageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property maritalStatus() As String
            Get
                Return Me.maritalStatusField
            End Get
            Set
                Me.maritalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property homeAddress() As AddressTO
            Get
                Return Me.homeAddressField
            End Get
            Set
                Me.homeAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property homePhone() As PhoneNumTO
            Get
                Return Me.homePhoneField
            End Get
            Set
                Me.homePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cellPhone() As PhoneNumTO
            Get
                Return Me.cellPhoneField
            End Get
            Set
                Me.cellPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property demographics() As DemographicSetTO()
            Get
                Return Me.demographicsField
            End Get
            Set
                Me.demographicsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PersonArray
        Inherits AbstractArrayTO
        
        Private personsField() As PersonTO
        
        '''<remarks/>
        Public Property persons() As PersonTO()
            Get
                Return Me.personsField
            End Get
            Set
                Me.personsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PatientTO
        Inherits PersonTO
        
        Private eligibilityCodeField As String
        
        Private patientNameField As String
        
        Private mpiPidField As String
        
        Private mpiChecksumField As String
        
        Private localPidField As String
        
        Private sitePidsField As TaggedTextArray
        
        Private vendorPidField As String
        
        Private locationField As HospitalLocationTO
        
        Private cwadField As String
        
        Private restrictedField As Boolean
        
        Private admitTimestampField As String
        
        Private serviceConnectedField As Boolean
        
        Private scPercentField As Integer
        
        Private inpatientField As Boolean
        
        Private deceasedDateField As String
        
        Private confidentialityField As TaggedText
        
        Private needsMeansTestField As Boolean
        
        Private patientFlagsField As TaggedTextArray
        
        Private cmorSiteIdField As String
        
        Private activeInsuranceField As String
        
        Private isTestPatientField As Boolean
        
        Private currentMeansStatusField As String
        
        Private hasInsuranceField As Boolean
        
        Private preferredFacilityField As TaggedText
        
        Private patientTypeField As String
        
        Private isVeteranField As Boolean
        
        Private isLocallyAssignedMpiPidField As Boolean
        
        Private sitesField As SiteArray
        
        Private teamField As TeamTO
        
        '''<remarks/>
        Public Property eligibilityCode() As String
            Get
                Return Me.eligibilityCodeField
            End Get
            Set
                Me.eligibilityCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patientName() As String
            Get
                Return Me.patientNameField
            End Get
            Set
                Me.patientNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mpiPid() As String
            Get
                Return Me.mpiPidField
            End Get
            Set
                Me.mpiPidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mpiChecksum() As String
            Get
                Return Me.mpiChecksumField
            End Get
            Set
                Me.mpiChecksumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property localPid() As String
            Get
                Return Me.localPidField
            End Get
            Set
                Me.localPidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sitePids() As TaggedTextArray
            Get
                Return Me.sitePidsField
            End Get
            Set
                Me.sitePidsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property vendorPid() As String
            Get
                Return Me.vendorPidField
            End Get
            Set
                Me.vendorPidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property location() As HospitalLocationTO
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cwad() As String
            Get
                Return Me.cwadField
            End Get
            Set
                Me.cwadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property restricted() As Boolean
            Get
                Return Me.restrictedField
            End Get
            Set
                Me.restrictedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admitTimestamp() As String
            Get
                Return Me.admitTimestampField
            End Get
            Set
                Me.admitTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property serviceConnected() As Boolean
            Get
                Return Me.serviceConnectedField
            End Get
            Set
                Me.serviceConnectedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property scPercent() As Integer
            Get
                Return Me.scPercentField
            End Get
            Set
                Me.scPercentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property inpatient() As Boolean
            Get
                Return Me.inpatientField
            End Get
            Set
                Me.inpatientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property deceasedDate() As String
            Get
                Return Me.deceasedDateField
            End Get
            Set
                Me.deceasedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property confidentiality() As TaggedText
            Get
                Return Me.confidentialityField
            End Get
            Set
                Me.confidentialityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property needsMeansTest() As Boolean
            Get
                Return Me.needsMeansTestField
            End Get
            Set
                Me.needsMeansTestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patientFlags() As TaggedTextArray
            Get
                Return Me.patientFlagsField
            End Get
            Set
                Me.patientFlagsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cmorSiteId() As String
            Get
                Return Me.cmorSiteIdField
            End Get
            Set
                Me.cmorSiteIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property activeInsurance() As String
            Get
                Return Me.activeInsuranceField
            End Get
            Set
                Me.activeInsuranceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isTestPatient() As Boolean
            Get
                Return Me.isTestPatientField
            End Get
            Set
                Me.isTestPatientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property currentMeansStatus() As String
            Get
                Return Me.currentMeansStatusField
            End Get
            Set
                Me.currentMeansStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hasInsurance() As Boolean
            Get
                Return Me.hasInsuranceField
            End Get
            Set
                Me.hasInsuranceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property preferredFacility() As TaggedText
            Get
                Return Me.preferredFacilityField
            End Get
            Set
                Me.preferredFacilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patientType() As String
            Get
                Return Me.patientTypeField
            End Get
            Set
                Me.patientTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isVeteran() As Boolean
            Get
                Return Me.isVeteranField
            End Get
            Set
                Me.isVeteranField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isLocallyAssignedMpiPid() As Boolean
            Get
                Return Me.isLocallyAssignedMpiPidField
            End Get
            Set
                Me.isLocallyAssignedMpiPidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sites() As SiteArray
            Get
                Return Me.sitesField
            End Get
            Set
                Me.sitesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property team() As TeamTO
            Get
                Return Me.teamField
            End Get
            Set
                Me.teamField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TeamTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private nameField As String
        
        Private pcpNameField As String
        
        Private attendingNameField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pcpName() As String
            Get
                Return Me.pcpNameField
            End Get
            Set
                Me.pcpNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attendingName() As String
            Get
                Return Me.attendingNameField
            End Get
            Set
                Me.attendingNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedLabTestArray
        Inherits AbstractTaggedArrayTO
        
        Private labTestsField As LabTestArray
        
        '''<remarks/>
        Public Property labTests() As LabTestArray
            Get
                Return Me.labTestsField
            End Get
            Set
                Me.labTestsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class LabTestArray
        Inherits AbstractArrayTO
        
        Private testsField() As LabTestTO
        
        '''<remarks/>
        Public Property tests() As LabTestTO()
            Get
                Return Me.testsField
            End Get
            Set
                Me.testsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedMentalHealthResultSetArray
        Inherits AbstractTaggedArrayTO
        
        Private itemsField() As MentalHealthInstrumentResultSetTO
        
        '''<remarks/>
        Public Property items() As MentalHealthInstrumentResultSetTO()
            Get
                Return Me.itemsField
            End Get
            Set
                Me.itemsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class MentalHealthInstrumentResultSetTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private administrationIdField As String
        
        Private scaleField As TaggedText
        
        Private rawScoreField As String
        
        Private transformedScoresField As TaggedTextArray
        
        Private instrumentField As TaggedText
        
        Private surveyGivenDateTimeField As String
        
        Private surveySavedDateTimeField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property administrationId() As String
            Get
                Return Me.administrationIdField
            End Get
            Set
                Me.administrationIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property scale() As TaggedText
            Get
                Return Me.scaleField
            End Get
            Set
                Me.scaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rawScore() As String
            Get
                Return Me.rawScoreField
            End Get
            Set
                Me.rawScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property transformedScores() As TaggedTextArray
            Get
                Return Me.transformedScoresField
            End Get
            Set
                Me.transformedScoresField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property instrument() As TaggedText
            Get
                Return Me.instrumentField
            End Get
            Set
                Me.instrumentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property surveyGivenDateTime() As String
            Get
                Return Me.surveyGivenDateTimeField
            End Get
            Set
                Me.surveyGivenDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property surveySavedDateTime() As String
            Get
                Return Me.surveySavedDateTimeField
            End Get
            Set
                Me.surveySavedDateTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedMentalHealthInstrumentAdministrationArray
        Inherits AbstractTaggedArrayTO
        
        Private itemsField() As MentalHealthInstrumentAdministrationTO
        
        '''<remarks/>
        Public Property items() As MentalHealthInstrumentAdministrationTO()
            Get
                Return Me.itemsField
            End Get
            Set
                Me.itemsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class MentalHealthInstrumentAdministrationTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private patientField As TaggedText
        
        Private instrumentField As TaggedText
        
        Private dateAdministeredField As String
        
        Private dateSavedField As String
        
        Private orderedByField As TaggedText
        
        Private administeredByField As TaggedText
        
        Private isSignedField As Boolean
        
        Private isCompleteField As Boolean
        
        Private numberOfQuestionsAnsweredField As String
        
        Private transmitStatusField As String
        
        Private transmitTimeField As String
        
        Private hospitalLocationField As TaggedText
        
        Private resultsField As MentalHealthInstrumentResultSetTO
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patient() As TaggedText
            Get
                Return Me.patientField
            End Get
            Set
                Me.patientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property instrument() As TaggedText
            Get
                Return Me.instrumentField
            End Get
            Set
                Me.instrumentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateAdministered() As String
            Get
                Return Me.dateAdministeredField
            End Get
            Set
                Me.dateAdministeredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dateSaved() As String
            Get
                Return Me.dateSavedField
            End Get
            Set
                Me.dateSavedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderedBy() As TaggedText
            Get
                Return Me.orderedByField
            End Get
            Set
                Me.orderedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property administeredBy() As TaggedText
            Get
                Return Me.administeredByField
            End Get
            Set
                Me.administeredByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isSigned() As Boolean
            Get
                Return Me.isSignedField
            End Get
            Set
                Me.isSignedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isComplete() As Boolean
            Get
                Return Me.isCompleteField
            End Get
            Set
                Me.isCompleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numberOfQuestionsAnswered() As String
            Get
                Return Me.numberOfQuestionsAnsweredField
            End Get
            Set
                Me.numberOfQuestionsAnsweredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property transmitStatus() As String
            Get
                Return Me.transmitStatusField
            End Get
            Set
                Me.transmitStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property transmitTime() As String
            Get
                Return Me.transmitTimeField
            End Get
            Set
                Me.transmitTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hospitalLocation() As TaggedText
            Get
                Return Me.hospitalLocationField
            End Get
            Set
                Me.hospitalLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property results() As MentalHealthInstrumentResultSetTO
            Get
                Return Me.resultsField
            End Get
            Set
                Me.resultsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedOrderArray
        Inherits AbstractTaggedArrayTO
        
        Private itemsField() As OrderTO
        
        '''<remarks/>
        Public Property items() As OrderTO()
            Get
                Return Me.itemsField
            End Get
            Set
                Me.itemsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedVisitArray
        Inherits AbstractTaggedArrayTO
        
        Private visitsField() As VisitTO
        
        '''<remarks/>
        Public Property visits() As VisitTO()
            Get
                Return Me.visitsField
            End Get
            Set
                Me.visitsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class VisitTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private typeField As String
        
        Private patientField As PatientTO
        
        Private attendingField As UserTO
        
        Private providerField As UserTO
        
        Private serviceField As String
        
        Private locationField As HospitalLocationTO
        
        Private patientTypeField As String
        
        Private visitIdField As String
        
        Private timestampField As String
        
        Private statusField As String
        
        Private facilityField As SiteTO
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patient() As PatientTO
            Get
                Return Me.patientField
            End Get
            Set
                Me.patientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attending() As UserTO
            Get
                Return Me.attendingField
            End Get
            Set
                Me.attendingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property provider() As UserTO
            Get
                Return Me.providerField
            End Get
            Set
                Me.providerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property service() As String
            Get
                Return Me.serviceField
            End Get
            Set
                Me.serviceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property location() As HospitalLocationTO
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patientType() As String
            Get
                Return Me.patientTypeField
            End Get
            Set
                Me.patientTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property visitId() As String
            Get
                Return Me.visitIdField
            End Get
            Set
                Me.visitIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property facility() As SiteTO
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedInpatientStayArray
        Inherits AbstractTaggedArrayTO
        
        Private staysField() As InpatientStayTO
        
        '''<remarks/>
        Public Property stays() As InpatientStayTO()
            Get
                Return Me.staysField
            End Get
            Set
                Me.staysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class InpatientStayTO
        Inherits AbstractTO
        
        Private patientField As PatientTO
        
        Private locationField As HospitalLocationTO
        
        Private admitTimestampField As String
        
        Private dischargeTimestampField As String
        
        Private dischargeDiagnosesField As DischargeDiagnosesTO
        
        Private typeField As String
        
        Private adtsField() As AdtTO
        
        Private movementCheckinIdField As String
        
        '''<remarks/>
        Public Property patient() As PatientTO
            Get
                Return Me.patientField
            End Get
            Set
                Me.patientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property location() As HospitalLocationTO
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admitTimestamp() As String
            Get
                Return Me.admitTimestampField
            End Get
            Set
                Me.admitTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dischargeTimestamp() As String
            Get
                Return Me.dischargeTimestampField
            End Get
            Set
                Me.dischargeTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dischargeDiagnoses() As DischargeDiagnosesTO
            Get
                Return Me.dischargeDiagnosesField
            End Get
            Set
                Me.dischargeDiagnosesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property adts() As AdtTO()
            Get
                Return Me.adtsField
            End Get
            Set
                Me.adtsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property movementCheckinId() As String
            Get
                Return Me.movementCheckinIdField
            End Get
            Set
                Me.movementCheckinIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class DischargeDiagnosesTO
        Inherits AbstractTO
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class AdtTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private patientField As PatientTO
        
        Private checkInIdField As String
        
        Private checkOutIdField As String
        
        Private relatedPhysicalMovementIdField As String
        
        Private transactionField As String
        
        Private movementTypeField As String
        
        Private timestampField As String
        
        Private diagnosisField As String
        
        Private assignedLocationField As HospitalLocationTO
        
        Private providerField As UserTO
        
        Private attendingField As UserTO
        
        Private transferFacilityField As String
        
        Private specialtyField As TaggedText
        
        Private patientTxIdField As String
        
        Private visitIdField As String
        
        Private patientMovementNumberField As String
        
        Private nextPatientMovementField As String
        
        Private enteredByField As UserTO
        
        Private lengthOfStayField As String
        
        Private passDaysField As String
        
        Private daysAbsentField As String
        
        Private asihAdmissionField As TaggedText
        
        Private asihTransferField As String
        
        Private asihSequenceField As String
        
        Private asihDaysField As String
        
        Private absenceReturnDateField As String
        
        Private admittedForScConditionField As Boolean
        
        Private scheduledAdmissionField As Boolean
        
        Private admissionSourceField As String
        
        Private admittingCategoryField As String
        
        Private admittingRegulationField As TaggedText
        
        Private admittingEligibilityField As TaggedText
        
        Private masMovementTypeField As TaggedText
        
        Private lodgingReasonField As String
        
        Private lodgingCommentsField As String
        
        Private dispositionField As String
        
        Private eligibilityField As String
        
        Private preAdmitIdField As String
        
        Private referringField As UserTO
        
        Private consultingField As UserTO
        
        Private admittingField As UserTO
        
        Private serviceField As TaggedText
        
        Private priorLocationField As HospitalLocationTO
        
        Private temporaryLocationField As HospitalLocationTO
        
        Private pendingLocationField As HospitalLocationTO
        
        Private patientTypeField As String
        
        Private admitTimestampField As String
        
        Private dischargeTimestampField As String
        
        Private admitReasonField As String
        
        Private transferReasonField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patient() As PatientTO
            Get
                Return Me.patientField
            End Get
            Set
                Me.patientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property checkInId() As String
            Get
                Return Me.checkInIdField
            End Get
            Set
                Me.checkInIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property checkOutId() As String
            Get
                Return Me.checkOutIdField
            End Get
            Set
                Me.checkOutIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property relatedPhysicalMovementId() As String
            Get
                Return Me.relatedPhysicalMovementIdField
            End Get
            Set
                Me.relatedPhysicalMovementIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property transaction() As String
            Get
                Return Me.transactionField
            End Get
            Set
                Me.transactionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property movementType() As String
            Get
                Return Me.movementTypeField
            End Get
            Set
                Me.movementTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property timestamp() As String
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property diagnosis() As String
            Get
                Return Me.diagnosisField
            End Get
            Set
                Me.diagnosisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property assignedLocation() As HospitalLocationTO
            Get
                Return Me.assignedLocationField
            End Get
            Set
                Me.assignedLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property provider() As UserTO
            Get
                Return Me.providerField
            End Get
            Set
                Me.providerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property attending() As UserTO
            Get
                Return Me.attendingField
            End Get
            Set
                Me.attendingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property transferFacility() As String
            Get
                Return Me.transferFacilityField
            End Get
            Set
                Me.transferFacilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property specialty() As TaggedText
            Get
                Return Me.specialtyField
            End Get
            Set
                Me.specialtyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patientTxId() As String
            Get
                Return Me.patientTxIdField
            End Get
            Set
                Me.patientTxIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property visitId() As String
            Get
                Return Me.visitIdField
            End Get
            Set
                Me.visitIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patientMovementNumber() As String
            Get
                Return Me.patientMovementNumberField
            End Get
            Set
                Me.patientMovementNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nextPatientMovement() As String
            Get
                Return Me.nextPatientMovementField
            End Get
            Set
                Me.nextPatientMovementField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property enteredBy() As UserTO
            Get
                Return Me.enteredByField
            End Get
            Set
                Me.enteredByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lengthOfStay() As String
            Get
                Return Me.lengthOfStayField
            End Get
            Set
                Me.lengthOfStayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property passDays() As String
            Get
                Return Me.passDaysField
            End Get
            Set
                Me.passDaysField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property daysAbsent() As String
            Get
                Return Me.daysAbsentField
            End Get
            Set
                Me.daysAbsentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property asihAdmission() As TaggedText
            Get
                Return Me.asihAdmissionField
            End Get
            Set
                Me.asihAdmissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property asihTransfer() As String
            Get
                Return Me.asihTransferField
            End Get
            Set
                Me.asihTransferField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property asihSequence() As String
            Get
                Return Me.asihSequenceField
            End Get
            Set
                Me.asihSequenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property asihDays() As String
            Get
                Return Me.asihDaysField
            End Get
            Set
                Me.asihDaysField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property absenceReturnDate() As String
            Get
                Return Me.absenceReturnDateField
            End Get
            Set
                Me.absenceReturnDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admittedForScCondition() As Boolean
            Get
                Return Me.admittedForScConditionField
            End Get
            Set
                Me.admittedForScConditionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property scheduledAdmission() As Boolean
            Get
                Return Me.scheduledAdmissionField
            End Get
            Set
                Me.scheduledAdmissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admissionSource() As String
            Get
                Return Me.admissionSourceField
            End Get
            Set
                Me.admissionSourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admittingCategory() As String
            Get
                Return Me.admittingCategoryField
            End Get
            Set
                Me.admittingCategoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admittingRegulation() As TaggedText
            Get
                Return Me.admittingRegulationField
            End Get
            Set
                Me.admittingRegulationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admittingEligibility() As TaggedText
            Get
                Return Me.admittingEligibilityField
            End Get
            Set
                Me.admittingEligibilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property masMovementType() As TaggedText
            Get
                Return Me.masMovementTypeField
            End Get
            Set
                Me.masMovementTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lodgingReason() As String
            Get
                Return Me.lodgingReasonField
            End Get
            Set
                Me.lodgingReasonField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lodgingComments() As String
            Get
                Return Me.lodgingCommentsField
            End Get
            Set
                Me.lodgingCommentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property disposition() As String
            Get
                Return Me.dispositionField
            End Get
            Set
                Me.dispositionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eligibility() As String
            Get
                Return Me.eligibilityField
            End Get
            Set
                Me.eligibilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property preAdmitId() As String
            Get
                Return Me.preAdmitIdField
            End Get
            Set
                Me.preAdmitIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property referring() As UserTO
            Get
                Return Me.referringField
            End Get
            Set
                Me.referringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property consulting() As UserTO
            Get
                Return Me.consultingField
            End Get
            Set
                Me.consultingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admitting() As UserTO
            Get
                Return Me.admittingField
            End Get
            Set
                Me.admittingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property service() As TaggedText
            Get
                Return Me.serviceField
            End Get
            Set
                Me.serviceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property priorLocation() As HospitalLocationTO
            Get
                Return Me.priorLocationField
            End Get
            Set
                Me.priorLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property temporaryLocation() As HospitalLocationTO
            Get
                Return Me.temporaryLocationField
            End Get
            Set
                Me.temporaryLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pendingLocation() As HospitalLocationTO
            Get
                Return Me.pendingLocationField
            End Get
            Set
                Me.pendingLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patientType() As String
            Get
                Return Me.patientTypeField
            End Get
            Set
                Me.patientTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admitTimestamp() As String
            Get
                Return Me.admitTimestampField
            End Get
            Set
                Me.admitTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dischargeTimestamp() As String
            Get
                Return Me.dischargeTimestampField
            End Get
            Set
                Me.dischargeTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property admitReason() As String
            Get
                Return Me.admitReasonField
            End Get
            Set
                Me.admitReasonField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property transferReason() As String
            Get
                Return Me.transferReasonField
            End Get
            Set
                Me.transferReasonField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedPatientArray
        Inherits AbstractTaggedArrayTO
        
        Private patientsField() As PatientTO
        
        '''<remarks/>
        Public Property patients() As PatientTO()
            Get
                Return Me.patientsField
            End Get
            Set
                Me.patientsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedHospitalLocationArray
        Inherits AbstractTaggedArrayTO
        
        Private locationsField() As HospitalLocationTO
        
        '''<remarks/>
        Public Property locations() As HospitalLocationTO()
            Get
                Return Me.locationsField
            End Get
            Set
                Me.locationsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedSurgicalPathologyRptArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedSurgicalPathologyRptArray
        
        '''<remarks/>
        Public Property arrays() As TaggedSurgicalPathologyRptArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedMicrobiologyRptArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedMicrobiologyRptArray
        
        '''<remarks/>
        Public Property arrays() As TaggedMicrobiologyRptArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedCytologyRptArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedCytologyRptArray
        
        '''<remarks/>
        Public Property arrays() As TaggedCytologyRptArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedChemHemRptArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedChemHemRptArray
        
        '''<remarks/>
        Public Property arrays() As TaggedChemHemRptArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedVisitArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedVisitArray
        
        '''<remarks/>
        Public Property arrays() As TaggedVisitArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedAppointmentArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedAppointmentArray
        
        '''<remarks/>
        Public Property arrays() As TaggedAppointmentArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedConsultArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedConsultArray
        
        '''<remarks/>
        Public Property arrays() As TaggedConsultArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedNoteArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedNoteArray
        
        '''<remarks/>
        Public Property arrays() As TaggedNoteArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedMedicationArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedMedicationArray
        
        '''<remarks/>
        Public Property arrays() As TaggedMedicationArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedProblemArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedProblemArray
        
        '''<remarks/>
        Public Property arrays() As TaggedProblemArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedSurgeryReportArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedSurgeryReportArray
        
        '''<remarks/>
        Public Property arrays() As TaggedSurgeryReportArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedRadiologyReportArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedRadiologyReportArray
        
        '''<remarks/>
        Public Property arrays() As TaggedRadiologyReportArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedAllergyArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedAllergyArray
        
        '''<remarks/>
        Public Property arrays() As TaggedAllergyArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedVitalSignSetArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedVitalSignSetArray
        
        '''<remarks/>
        Public Property arrays() As TaggedVitalSignSetArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedVitalSignArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedVitalSignArray
        
        '''<remarks/>
        Public Property arrays() As TaggedVitalSignArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedPatientArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedPatientArray
        
        '''<remarks/>
        Public Property arrays() As TaggedPatientArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class RegionArray
        Inherits AbstractArrayTO
        
        Private regionsField() As RegionTO
        
        '''<remarks/>
        Public Property regions() As RegionTO()
            Get
                Return Me.regionsField
            End Get
            Set
                Me.regionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class RegionTO
        Inherits AbstractTO
        
        Private nameField As String
        
        Private idField As String
        
        Private sitesField As SiteArray
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sites() As SiteArray
            Get
                Return Me.sitesField
            End Get
            Set
                Me.sitesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedHealthSummaryArray
        Inherits AbstractArrayTO
        
        Private healthSummariesField() As HealthSummaryTO
        
        '''<remarks/>
        Public Property healthSummaries() As HealthSummaryTO()
            Get
                Return Me.healthSummariesField
            End Get
            Set
                Me.healthSummariesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class HealthSummaryTO
        Inherits AbstractTO
        
        Private siteCodeField As String
        
        Private idField As String
        
        Private titleField As String
        
        Private textField As String
        
        '''<remarks/>
        Public Property siteCode() As String
            Get
                Return Me.siteCodeField
            End Get
            Set
                Me.siteCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedPatientAssociateArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedPatientAssociateArray
        
        '''<remarks/>
        Public Property arrays() As TaggedPatientAssociateArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedLabTestArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedLabTestArray
        
        '''<remarks/>
        Public Property arrays() As TaggedLabTestArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class UserArray
        Inherits AbstractArrayTO
        
        Private usersField() As UserTO
        
        '''<remarks/>
        Public Property users() As UserTO()
            Get
                Return Me.usersField
            End Get
            Set
                Me.usersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class DomainArray
        Inherits AbstractArrayTO
        
        Private domainsField() As DomainTO
        
        '''<remarks/>
        Public Property domains() As DomainTO()
            Get
                Return Me.domainsField
            End Get
            Set
                Me.domainsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class DomainTO
        Inherits AbstractTO
        
        Private simpleNameField As String
        
        Private nameField As String
        
        Private distinguishedNameField As String
        
        '''<remarks/>
        Public Property simpleName() As String
            Get
                Return Me.simpleNameField
            End Get
            Set
                Me.simpleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property distinguishedName() As String
            Get
                Return Me.distinguishedNameField
            End Get
            Set
                Me.distinguishedNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedMentalHealthInstrumentAdministrationArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedMentalHealthInstrumentAdministrationArray
        
        '''<remarks/>
        Public Property arrays() As TaggedMentalHealthInstrumentAdministrationArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class UserSecurityKeyArray
        Inherits AbstractArrayTO
        
        Private keysField() As UserSecurityKeyTO
        
        '''<remarks/>
        Public Property keys() As UserSecurityKeyTO()
            Get
                Return Me.keysField
            End Get
            Set
                Me.keysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class UserSecurityKeyTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private nameField As String
        
        Private descriptiveNameField As String
        
        Private creatorIdField As String
        
        Private creatorNameField As String
        
        Private creationDateField As String
        
        Private reviewDateField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property descriptiveName() As String
            Get
                Return Me.descriptiveNameField
            End Get
            Set
                Me.descriptiveNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creatorId() As String
            Get
                Return Me.creatorIdField
            End Get
            Set
                Me.creatorIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creatorName() As String
            Get
                Return Me.creatorNameField
            End Get
            Set
                Me.creatorNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property creationDate() As String
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reviewDate() As String
            Get
                Return Me.reviewDateField
            End Get
            Set
                Me.reviewDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class OrderDialogItemArray
        Inherits AbstractArrayTO
        
        Private itemsField() As OrderDialogItemTO
        
        '''<remarks/>
        Public Property items() As OrderDialogItemTO()
            Get
                Return Me.itemsField
            End Get
            Set
                Me.itemsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class OrderDialogItemTO
        Inherits AbstractTO
        
        Private sequenceNumberField As Integer
        
        Private dataTypeField As Char
        
        Private domainField As String
        
        Private displayTextField As String
        
        Private orderableItemIdField As String
        
        '''<remarks/>
        Public Property sequenceNumber() As Integer
            Get
                Return Me.sequenceNumberField
            End Get
            Set
                Me.sequenceNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dataType() As Char
            Get
                Return Me.dataTypeField
            End Get
            Set
                Me.dataTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property domain() As String
            Get
                Return Me.domainField
            End Get
            Set
                Me.domainField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property displayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set
                Me.displayTextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property orderableItemId() As String
            Get
                Return Me.orderableItemIdField
            End Get
            Set
                Me.orderableItemIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TextArray
        Inherits AbstractArrayTO
        
        Private textField() As String
        
        '''<remarks/>
        Public Property text() As String()
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TaggedOrderArrays
        Inherits AbstractArrayTO
        
        Private arraysField() As TaggedOrderArray
        
        '''<remarks/>
        Public Property arrays() As TaggedOrderArray()
            Get
                Return Me.arraysField
            End Get
            Set
                Me.arraysField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PatientArray
        Inherits AbstractArrayTO
        
        Private patientsField() As PatientTO
        
        '''<remarks/>
        Public Property patients() As PatientTO()
            Get
                Return Me.patientsField
            End Get
            Set
                Me.patientsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PatientRecordFlagArray
        Inherits AbstractArrayTO
        
        Private flagsField() As PatientRecordFlagTO
        
        '''<remarks/>
        Public Property flags() As PatientRecordFlagTO()
            Get
                Return Me.flagsField
            End Get
            Set
                Me.flagsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PatientRecordFlagTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private nameField As String
        
        Private actionIdField As String
        
        Private actionNameField As String
        
        Private actionTimestampField As String
        
        Private noteIdField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property actionId() As String
            Get
                Return Me.actionIdField
            End Get
            Set
                Me.actionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property actionName() As String
            Get
                Return Me.actionNameField
            End Get
            Set
                Me.actionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property actionTimestamp() As String
            Get
                Return Me.actionTimestampField
            End Get
            Set
                Me.actionTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property noteId() As String
            Get
                Return Me.noteIdField
            End Get
            Set
                Me.noteIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PatientCareTeamMemberTO
        Inherits AbstractTO
        
        Private teamNameField As String
        
        Private teamStartDateField As String
        
        Private teamEndDateField As String
        
        Private currentProviderFlagField As String
        
        Private associateProviderFlagField As String
        
        Private teamPurposeField As String
        
        Private providerRoleField As String
        
        Private primaryPositionField As String
        
        Private primaryStandardPositionField As String
        
        Private associatePositionField As String
        
        Private associateStandardPositionField As String
        
        Private personField As PersonTO
        
        '''<remarks/>
        Public Property TeamName() As String
            Get
                Return Me.teamNameField
            End Get
            Set
                Me.teamNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TeamStartDate() As String
            Get
                Return Me.teamStartDateField
            End Get
            Set
                Me.teamStartDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TeamEndDate() As String
            Get
                Return Me.teamEndDateField
            End Get
            Set
                Me.teamEndDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentProviderFlag() As String
            Get
                Return Me.currentProviderFlagField
            End Get
            Set
                Me.currentProviderFlagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AssociateProviderFlag() As String
            Get
                Return Me.associateProviderFlagField
            End Get
            Set
                Me.associateProviderFlagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TeamPurpose() As String
            Get
                Return Me.teamPurposeField
            End Get
            Set
                Me.teamPurposeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProviderRole() As String
            Get
                Return Me.providerRoleField
            End Get
            Set
                Me.providerRoleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrimaryPosition() As String
            Get
                Return Me.primaryPositionField
            End Get
            Set
                Me.primaryPositionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrimaryStandardPosition() As String
            Get
                Return Me.primaryStandardPositionField
            End Get
            Set
                Me.primaryStandardPositionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AssociatePosition() As String
            Get
                Return Me.associatePositionField
            End Get
            Set
                Me.associatePositionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AssociateStandardPosition() As String
            Get
                Return Me.associateStandardPositionField
            End Get
            Set
                Me.associateStandardPositionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Person() As PersonTO
            Get
                Return Me.personField
            End Get
            Set
                Me.personField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PatientCareTeamTO
        Inherits AbstractTO
        
        Private membersField() As PatientCareTeamMemberTO
        
        '''<remarks/>
        Public Property Members() As PatientCareTeamMemberTO()
            Get
                Return Me.membersField
            End Get
            Set
                Me.membersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class BoolTO
        Inherits AbstractTO
        
        Private trueOrFalseField As Boolean
        
        '''<remarks/>
        Public Property trueOrFalse() As Boolean
            Get
                Return Me.trueOrFalseField
            End Get
            Set
                Me.trueOrFalseField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class PatientListEntryTO
        Inherits AbstractTO
        
        Private listIdField As Integer
        
        Private patientNameField As String
        
        Private patientIdField As String
        
        Private ssnField As String
        
        '''<remarks/>
        Public Property listId() As Integer
            Get
                Return Me.listIdField
            End Get
            Set
                Me.listIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patientName() As String
            Get
                Return Me.patientNameField
            End Get
            Set
                Me.patientNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patientId() As String
            Get
                Return Me.patientIdField
            End Get
            Set
                Me.patientIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ssn() As String
            Get
                Return Me.ssnField
            End Get
            Set
                Me.ssnField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class ReminderReportPatientListTO
        Inherits AbstractTO
        
        Private reportIdField As String
        
        Private reportNameField As String
        
        Private reportTimestampField As String
        
        Private patientsField() As PatientListEntryTO
        
        '''<remarks/>
        Public Property reportId() As String
            Get
                Return Me.reportIdField
            End Get
            Set
                Me.reportIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reportName() As String
            Get
                Return Me.reportNameField
            End Get
            Set
                Me.reportNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reportTimestamp() As String
            Get
                Return Me.reportTimestampField
            End Get
            Set
                Me.reportTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property patients() As PatientListEntryTO()
            Get
                Return Me.patientsField
            End Get
            Set
                Me.patientsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class NoteResultTO
        Inherits AbstractTO
        
        Private idField As String
        
        Private totalPagesField As Integer
        
        Private lastPageRecdField As Integer
        
        Private explanationField As String
        
        '''<remarks/>
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property totalPages() As Integer
            Get
                Return Me.totalPagesField
            End Get
            Set
                Me.totalPagesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property lastPageRecd() As Integer
            Get
                Return Me.lastPageRecdField
            End Get
            Set
                Me.lastPageRecdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property explanation() As String
            Get
                Return Me.explanationField
            End Get
            Set
                Me.explanationField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://mdws.medora.va.gov/EmrSvc")>  _
    Partial Public Class TextTO
        Inherits AbstractTO
        
        Private textField As String
        
        '''<remarks/>
        Public Property text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getImagingReportCompletedEventHandler(ByVal sender As Object, ByVal e As getImagingReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getImagingReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RadiologyReportTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RadiologyReportTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub writeSimpleOrderByPolicyCompletedEventHandler(ByVal sender As Object, ByVal e As writeSimpleOrderByPolicyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class writeSimpleOrderByPolicyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OrderTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OrderTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub isValidEsigCompletedEventHandler(ByVal sender As Object, ByVal e As isValidEsigCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class isValidEsigCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub patientInquiryCompletedEventHandler(ByVal sender As Object, ByVal e As patientInquiryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class patientInquiryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getWardsCompletedEventHandler(ByVal sender As Object, ByVal e As getWardsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getWardsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedHospitalLocationArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedHospitalLocationArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPatientsByWardCompletedEventHandler(ByVal sender As Object, ByVal e As getPatientsByWardCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPatientsByWardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedPatientArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedPatientArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getClinicsCompletedEventHandler(ByVal sender As Object, ByVal e As getClinicsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getClinicsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedHospitalLocationArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedHospitalLocationArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPatientsByClinicCompletedEventHandler(ByVal sender As Object, ByVal e As getPatientsByClinicCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPatientsByClinicCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedPatientArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedPatientArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getSpecialtiesCompletedEventHandler(ByVal sender As Object, ByVal e As getSpecialtiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSpecialtiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedText
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedText)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPatientsBySpecialtyCompletedEventHandler(ByVal sender As Object, ByVal e As getPatientsBySpecialtyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPatientsBySpecialtyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedPatientArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedPatientArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getTeamsCompletedEventHandler(ByVal sender As Object, ByVal e As getTeamsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTeamsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedText
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedText)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPatientsByTeamCompletedEventHandler(ByVal sender As Object, ByVal e As getPatientsByTeamCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPatientsByTeamCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedPatientArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedPatientArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPatientsByProviderCompletedEventHandler(ByVal sender As Object, ByVal e As getPatientsByProviderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPatientsByProviderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedPatientArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedPatientArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAdmissionsCompletedEventHandler(ByVal sender As Object, ByVal e As getAdmissionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAdmissionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedInpatientStayArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedInpatientStayArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getLocationsCompletedEventHandler(ByVal sender As Object, ByVal e As getLocationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLocationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedHospitalLocationArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedHospitalLocationArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPrfNoteActionsCompletedEventHandler(ByVal sender As Object, ByVal e As getPrfNoteActionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPrfNoteActionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PatientRecordFlagArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PatientRecordFlagArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getVisitsCompletedEventHandler(ByVal sender As Object, ByVal e As getVisitsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getVisitsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedVisitArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedVisitArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub isConsultNoteCompletedEventHandler(ByVal sender As Object, ByVal e As isConsultNoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class isConsultNoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub isCosignerRequiredCompletedEventHandler(ByVal sender As Object, ByVal e As isCosignerRequiredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class isCosignerRequiredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub isOneVisitNoteCompletedEventHandler(ByVal sender As Object, ByVal e As isOneVisitNoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class isOneVisitNoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedText
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedText)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub isPrfNoteCompletedEventHandler(ByVal sender As Object, ByVal e As isPrfNoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class isPrfNoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub isSurgeryNoteCompletedEventHandler(ByVal sender As Object, ByVal e As isSurgeryNoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class isSurgeryNoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedText
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedText)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub writeNoteCompletedEventHandler(ByVal sender As Object, ByVal e As writeNoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class writeNoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As NoteResultTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),NoteResultTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub signNoteCompletedEventHandler(ByVal sender As Object, ByVal e As signNoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class signNoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub closeNoteCompletedEventHandler(ByVal sender As Object, ByVal e As closeNoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class closeNoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getDemographicsCompletedEventHandler(ByVal sender As Object, ByVal e As getDemographicsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDemographicsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PatientTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PatientTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub mpiLookupCompletedEventHandler(ByVal sender As Object, ByVal e As mpiLookupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mpiLookupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PatientArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PatientArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub nptLookupCompletedEventHandler(ByVal sender As Object, ByVal e As nptLookupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class nptLookupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PatientArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PatientArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAllOrdersCompletedEventHandler(ByVal sender As Object, ByVal e As getAllOrdersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllOrdersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedOrderArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedOrderArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getReminderReportTemplatesCompletedEventHandler(ByVal sender As Object, ByVal e As getReminderReportTemplatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getReminderReportTemplatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getActiveReminderReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getActiveReminderReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getActiveReminderReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPatientListForReminderReportCompletedEventHandler(ByVal sender As Object, ByVal e As getPatientListForReminderReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPatientListForReminderReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReminderReportPatientListTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReminderReportPatientListTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPcpForPatientCompletedEventHandler(ByVal sender As Object, ByVal e As getPcpForPatientCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPcpForPatientCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedText
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedText)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getSitesForStationCompletedEventHandler(ByVal sender As Object, ByVal e As getSitesForStationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSitesForStationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getClinicsByNameCompletedEventHandler(ByVal sender As Object, ByVal e As getClinicsByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getClinicsByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getOrderableItemsByNameCompletedEventHandler(ByVal sender As Object, ByVal e As getOrderableItemsByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOrderableItemsByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getOrderStatusForPatientCompletedEventHandler(ByVal sender As Object, ByVal e As getOrderStatusForPatientCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOrderStatusForPatientCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getOrderDialogsForDisplayGroupCompletedEventHandler(ByVal sender As Object, ByVal e As getOrderDialogsForDisplayGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOrderDialogsForDisplayGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getOrderDialogItemsCompletedEventHandler(ByVal sender As Object, ByVal e As getOrderDialogItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOrderDialogItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OrderDialogItemArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OrderDialogItemArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getUsersWithOptionCompletedEventHandler(ByVal sender As Object, ByVal e As getUsersWithOptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUsersWithOptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub userHasPermissionCompletedEventHandler(ByVal sender As Object, ByVal e As userHasPermissionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class userHasPermissionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BoolTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BoolTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getUserSecurityKeysCompletedEventHandler(ByVal sender As Object, ByVal e As getUserSecurityKeysCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUserSecurityKeysCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserSecurityKeyArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserSecurityKeyArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getVariableValueCompletedEventHandler(ByVal sender As Object, ByVal e As getVariableValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getVariableValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getMentalHealthInstrumentsForPatientCompletedEventHandler(ByVal sender As Object, ByVal e As getMentalHealthInstrumentsForPatientCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMentalHealthInstrumentsForPatientCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedMentalHealthInstrumentAdministrationArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedMentalHealthInstrumentAdministrationArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getMentalHealthInstrumentsForPatientBySurveyCompletedEventHandler(ByVal sender As Object, ByVal e As getMentalHealthInstrumentsForPatientBySurveyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMentalHealthInstrumentsForPatientBySurveyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedMentalHealthInstrumentAdministrationArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedMentalHealthInstrumentAdministrationArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getMentalHealthInstrumentResultSetCompletedEventHandler(ByVal sender As Object, ByVal e As getMentalHealthInstrumentResultSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMentalHealthInstrumentResultSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MentalHealthInstrumentResultSetTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MentalHealthInstrumentResultSetTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getMentalHealthInstrumentResultSetBySurveyCompletedEventHandler(ByVal sender As Object, ByVal e As getMentalHealthInstrumentResultSetBySurveyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMentalHealthInstrumentResultSetBySurveyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedMentalHealthResultSetArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedMentalHealthResultSetArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getNhinDataCompletedEventHandler(ByVal sender As Object, ByVal e As getNhinDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getNhinDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAllInstitutionsCompletedEventHandler(ByVal sender As Object, ByVal e As getAllInstitutionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllInstitutionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SiteArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SiteArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getVistaTimestampsCompletedEventHandler(ByVal sender As Object, ByVal e As getVistaTimestampsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getVistaTimestampsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPatientCareTeamCompletedEventHandler(ByVal sender As Object, ByVal e As getPatientCareTeamCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPatientCareTeamCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PatientCareTeamTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PatientCareTeamTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getActiveDirectoryDomainsCompletedEventHandler(ByVal sender As Object, ByVal e As getActiveDirectoryDomainsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getActiveDirectoryDomainsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DomainArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DomainArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub loginActiveDirectoryCompletedEventHandler(ByVal sender As Object, ByVal e As loginActiveDirectoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class loginActiveDirectoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ldapUserLookupCompletedEventHandler(ByVal sender As Object, ByVal e As ldapUserLookupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ldapUserLookupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getLabTestDescriptionCompletedEventHandler(ByVal sender As Object, ByVal e As getLabTestDescriptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLabTestDescriptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getLabTestsCompletedEventHandler(ByVal sender As Object, ByVal e As getLabTestsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLabTestsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedLabTestArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedLabTestArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPatientAssociatesCompletedEventHandler(ByVal sender As Object, ByVal e As getPatientAssociatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPatientAssociatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedPatientAssociateArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedPatientAssociateArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAdhocHealthSummaryByDisplayNameCompletedEventHandler(ByVal sender As Object, ByVal e As getAdhocHealthSummaryByDisplayNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAdhocHealthSummaryByDisplayNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub EXPERIMENTALgetHealthSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As EXPERIMENTALgetHealthSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EXPERIMENTALgetHealthSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedHealthSummaryArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedHealthSummaryArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getCorrespondingIdsCompletedEventHandler(ByVal sender As Object, ByVal e As getCorrespondingIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCorrespondingIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getVHACompletedEventHandler(ByVal sender As Object, ByVal e As getVHACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getVHACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RegionArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RegionArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getVISNCompletedEventHandler(ByVal sender As Object, ByVal e As getVISNCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getVISNCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RegionTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RegionTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub connectCompletedEventHandler(ByVal sender As Object, ByVal e As connectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class connectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DataSourceArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DataSourceArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub loginCompletedEventHandler(ByVal sender As Object, ByVal e As loginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class loginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub disconnectCompletedEventHandler(ByVal sender As Object, ByVal e As disconnectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class disconnectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub disconnectRemoteSitesCompletedEventHandler(ByVal sender As Object, ByVal e As disconnectRemoteSitesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class disconnectRemoteSitesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub visitCompletedEventHandler(ByVal sender As Object, ByVal e As visitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class visitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub cprsLaunchCompletedEventHandler(ByVal sender As Object, ByVal e As cprsLaunchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class cprsLaunchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PersonsTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PersonsTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub cprsUserLookupCompletedEventHandler(ByVal sender As Object, ByVal e As cprsUserLookupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class cprsUserLookupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub matchCompletedEventHandler(ByVal sender As Object, ByVal e As matchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class matchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedPatientArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedPatientArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub selectCompletedEventHandler(ByVal sender As Object, ByVal e As selectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class selectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PatientTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PatientTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub setupMultiSiteQueryCompletedEventHandler(ByVal sender As Object, ByVal e As setupMultiSiteQueryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class setupMultiSiteQueryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SiteArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SiteArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getConfidentialityCompletedEventHandler(ByVal sender As Object, ByVal e As getConfidentialityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getConfidentialityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub issueConfidentialityBulletinCompletedEventHandler(ByVal sender As Object, ByVal e As issueConfidentialityBulletinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class issueConfidentialityBulletinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getLatestVitalSignsCompletedEventHandler(ByVal sender As Object, ByVal e As getLatestVitalSignsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLatestVitalSignsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedVitalSignArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedVitalSignArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getVitalSignsCompletedEventHandler(ByVal sender As Object, ByVal e As getVitalSignsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getVitalSignsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedVitalSignSetArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedVitalSignSetArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAllergiesCompletedEventHandler(ByVal sender As Object, ByVal e As getAllergiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllergiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedAllergyArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedAllergyArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAllergiesBySiteCompletedEventHandler(ByVal sender As Object, ByVal e As getAllergiesBySiteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllergiesBySiteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedAllergyArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedAllergyArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getRadiologyReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getRadiologyReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getRadiologyReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedRadiologyReportArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedRadiologyReportArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getRadiologyReportsBySiteCompletedEventHandler(ByVal sender As Object, ByVal e As getRadiologyReportsBySiteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getRadiologyReportsBySiteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedRadiologyReportArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedRadiologyReportArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getSurgeryReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getSurgeryReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSurgeryReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedSurgeryReportArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedSurgeryReportArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getSurgeryReportsBySiteCompletedEventHandler(ByVal sender As Object, ByVal e As getSurgeryReportsBySiteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSurgeryReportsBySiteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedSurgeryReportArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedSurgeryReportArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getSurgeryReportTextCompletedEventHandler(ByVal sender As Object, ByVal e As getSurgeryReportTextCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSurgeryReportTextCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getSurgeryReportsWithTextCompletedEventHandler(ByVal sender As Object, ByVal e As getSurgeryReportsWithTextCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSurgeryReportsWithTextCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedSurgeryReportArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedSurgeryReportArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getProblemListCompletedEventHandler(ByVal sender As Object, ByVal e As getProblemListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProblemListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedProblemArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedProblemArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getOutpatientMedsCompletedEventHandler(ByVal sender As Object, ByVal e As getOutpatientMedsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOutpatientMedsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedMedicationArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedMedicationArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getIvMedsCompletedEventHandler(ByVal sender As Object, ByVal e As getIvMedsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getIvMedsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedMedicationArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedMedicationArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getImoMedsCompletedEventHandler(ByVal sender As Object, ByVal e As getImoMedsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getImoMedsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedMedicationArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedMedicationArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getUnitDoseMedsCompletedEventHandler(ByVal sender As Object, ByVal e As getUnitDoseMedsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUnitDoseMedsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedMedicationArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedMedicationArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getOtherMedsCompletedEventHandler(ByVal sender As Object, ByVal e As getOtherMedsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOtherMedsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedMedicationArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedMedicationArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAllMedsCompletedEventHandler(ByVal sender As Object, ByVal e As getAllMedsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllMedsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedMedicationArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedMedicationArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getMedicationDetailCompletedEventHandler(ByVal sender As Object, ByVal e As getMedicationDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMedicationDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getSignedNotesCompletedEventHandler(ByVal sender As Object, ByVal e As getSignedNotesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSignedNotesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedNoteArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedNoteArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getUnsignedNotesCompletedEventHandler(ByVal sender As Object, ByVal e As getUnsignedNotesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUnsignedNotesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedNoteArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedNoteArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getUncosignedNotesCompletedEventHandler(ByVal sender As Object, ByVal e As getUncosignedNotesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUncosignedNotesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedNoteArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedNoteArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getNoteCompletedEventHandler(ByVal sender As Object, ByVal e As getNoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getNoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getNotesWithTextCompletedEventHandler(ByVal sender As Object, ByVal e As getNotesWithTextCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getNotesWithTextCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedNoteArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedNoteArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getDischargeSummariesCompletedEventHandler(ByVal sender As Object, ByVal e As getDischargeSummariesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDischargeSummariesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedNoteArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedNoteArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getConsultsForPatientCompletedEventHandler(ByVal sender As Object, ByVal e As getConsultsForPatientCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getConsultsForPatientCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedConsultArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedConsultArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAppointmentsCompletedEventHandler(ByVal sender As Object, ByVal e As getAppointmentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAppointmentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedAppointmentArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedAppointmentArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getMentalHealthAppointmentsCompletedEventHandler(ByVal sender As Object, ByVal e As getMentalHealthAppointmentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMentalHealthAppointmentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedAppointmentArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedAppointmentArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getMentalHealthVisitsCompletedEventHandler(ByVal sender As Object, ByVal e As getMentalHealthVisitsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMentalHealthVisitsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedVisitArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedVisitArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAppointmentTextCompletedEventHandler(ByVal sender As Object, ByVal e As getAppointmentTextCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAppointmentTextCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getClinicalWarningsCompletedEventHandler(ByVal sender As Object, ByVal e As getClinicalWarningsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getClinicalWarningsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAdvanceDirectivesCompletedEventHandler(ByVal sender As Object, ByVal e As getAdvanceDirectivesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAdvanceDirectivesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getCrisisNotesCompletedEventHandler(ByVal sender As Object, ByVal e As getCrisisNotesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCrisisNotesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getImmunizationsCompletedEventHandler(ByVal sender As Object, ByVal e As getImmunizationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getImmunizationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getOutpatientRxProfileCompletedEventHandler(ByVal sender As Object, ByVal e As getOutpatientRxProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOutpatientRxProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getMedsAdminHxCompletedEventHandler(ByVal sender As Object, ByVal e As getMedsAdminHxCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMedsAdminHxCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getMedsAdminLogCompletedEventHandler(ByVal sender As Object, ByVal e As getMedsAdminLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMedsAdminLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getChemHemReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getChemHemReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getChemHemReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedChemHemRptArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedChemHemRptArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getChemHemReportsSimpleCompletedEventHandler(ByVal sender As Object, ByVal e As getChemHemReportsSimpleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getChemHemReportsSimpleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedChemHemRptArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedChemHemRptArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getCytologyReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getCytologyReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCytologyReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedCytologyRptArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedCytologyRptArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getMicrobiologyReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getMicrobiologyReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMicrobiologyReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedMicrobiologyRptArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedMicrobiologyRptArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getSurgicalPathologyReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getSurgicalPathologyReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSurgicalPathologyReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedSurgicalPathologyRptArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedSurgicalPathologyRptArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getBloodAvailabilityReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getBloodAvailabilityReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBloodAvailabilityReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getBloodTransfusionReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getBloodTransfusionReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBloodTransfusionReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getBloodBankReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getBloodBankReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBloodBankReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getElectronMicroscopyReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getElectronMicroscopyReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getElectronMicroscopyReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getCytopathologyReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getCytopathologyReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCytopathologyReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAutopsyReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getAutopsyReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAutopsyReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getOutpatientEncounterReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getOutpatientEncounterReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getOutpatientEncounterReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getAdmissionsReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getAdmissionsReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAdmissionsReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getExpandedAdtReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getExpandedAdtReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getExpandedAdtReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getDischargeDiagnosisReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getDischargeDiagnosisReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDischargeDiagnosisReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getDischargesReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getDischargesReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDischargesReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getTransfersReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getTransfersReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTransfersReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getFutureClinicVisitsReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getFutureClinicVisitsReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getFutureClinicVisitsReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getPastClinicVisitsReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getPastClinicVisitsReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPastClinicVisitsReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getTreatingSpecialtyReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getTreatingSpecialtyReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTreatingSpecialtyReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getCompAndPenReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getCompAndPenReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCompAndPenReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getCareTeamReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getCareTeamReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCareTeamReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getIcdProceduresReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getIcdProceduresReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getIcdProceduresReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedIcdRptArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedIcdRptArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getIcdSurgeryReportsCompletedEventHandler(ByVal sender As Object, ByVal e As getIcdSurgeryReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getIcdSurgeryReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedIcdRptArrays
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedIcdRptArrays)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getNoteTitlesCompletedEventHandler(ByVal sender As Object, ByVal e As getNoteTitlesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getNoteTitlesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedTextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedTextArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getHospitalLocationsCompletedEventHandler(ByVal sender As Object, ByVal e As getHospitalLocationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getHospitalLocationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TaggedHospitalLocationArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TaggedHospitalLocationArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getVersionCompletedEventHandler(ByVal sender As Object, ByVal e As getVersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub addDataSourceCompletedEventHandler(ByVal sender As Object, ByVal e As addDataSourceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class addDataSourceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SiteTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SiteTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getFacadeVersionCompletedEventHandler(ByVal sender As Object, ByVal e As getFacadeVersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getFacadeVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextTO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextTO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub setVhaCompletedEventHandler(ByVal sender As Object, ByVal e As setVhaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class setVhaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SiteArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SiteArray)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub getRpcsCompletedEventHandler(ByVal sender As Object, ByVal e As getRpcsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getRpcsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TextArray
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TextArray)
            End Get
        End Property
    End Class
End Namespace
